/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConfigPutRequestGatewayGatewayNameStaticRoutesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigPutRequestGatewayGatewayNameStaticRoutesInner{}

// ConfigPutRequestGatewayGatewayNameStaticRoutesInner struct for ConfigPutRequestGatewayGatewayNameStaticRoutesInner
type ConfigPutRequestGatewayGatewayNameStaticRoutesInner struct {
	// Enable of this static route
	Enable *bool `json:"enable,omitempty"`
	// IPv4 unicast IP address followed by a subnet mask length
	Ipv4RoutePrefix *string `json:"ipv4_route_prefix,omitempty"`
	// Next Hop IP Address. Must be a unicast IP address
	NextHopIpAddress *string `json:"next_hop_ip_address,omitempty"`
	// Administrative distancing value, also known as route preference - values from 0-255
	AdValue NullableInt32 `json:"ad_value,omitempty"`
	// The index identifying the object. Zero if you want to add an object to the list.
	Index *int32 `json:"index,omitempty"`
}

// NewConfigPutRequestGatewayGatewayNameStaticRoutesInner instantiates a new ConfigPutRequestGatewayGatewayNameStaticRoutesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigPutRequestGatewayGatewayNameStaticRoutesInner() *ConfigPutRequestGatewayGatewayNameStaticRoutesInner {
	this := ConfigPutRequestGatewayGatewayNameStaticRoutesInner{}
	var enable bool = false
	this.Enable = &enable
	var ipv4RoutePrefix string = ""
	this.Ipv4RoutePrefix = &ipv4RoutePrefix
	var nextHopIpAddress string = ""
	this.NextHopIpAddress = &nextHopIpAddress
	return &this
}

// NewConfigPutRequestGatewayGatewayNameStaticRoutesInnerWithDefaults instantiates a new ConfigPutRequestGatewayGatewayNameStaticRoutesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigPutRequestGatewayGatewayNameStaticRoutesInnerWithDefaults() *ConfigPutRequestGatewayGatewayNameStaticRoutesInner {
	this := ConfigPutRequestGatewayGatewayNameStaticRoutesInner{}
	var enable bool = false
	this.Enable = &enable
	var ipv4RoutePrefix string = ""
	this.Ipv4RoutePrefix = &ipv4RoutePrefix
	var nextHopIpAddress string = ""
	this.NextHopIpAddress = &nextHopIpAddress
	return &this
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayNameStaticRoutesInner) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayNameStaticRoutesInner) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayNameStaticRoutesInner) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *ConfigPutRequestGatewayGatewayNameStaticRoutesInner) SetEnable(v bool) {
	o.Enable = &v
}

// GetIpv4RoutePrefix returns the Ipv4RoutePrefix field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayNameStaticRoutesInner) GetIpv4RoutePrefix() string {
	if o == nil || IsNil(o.Ipv4RoutePrefix) {
		var ret string
		return ret
	}
	return *o.Ipv4RoutePrefix
}

// GetIpv4RoutePrefixOk returns a tuple with the Ipv4RoutePrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayNameStaticRoutesInner) GetIpv4RoutePrefixOk() (*string, bool) {
	if o == nil || IsNil(o.Ipv4RoutePrefix) {
		return nil, false
	}
	return o.Ipv4RoutePrefix, true
}

// HasIpv4RoutePrefix returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayNameStaticRoutesInner) HasIpv4RoutePrefix() bool {
	if o != nil && !IsNil(o.Ipv4RoutePrefix) {
		return true
	}

	return false
}

// SetIpv4RoutePrefix gets a reference to the given string and assigns it to the Ipv4RoutePrefix field.
func (o *ConfigPutRequestGatewayGatewayNameStaticRoutesInner) SetIpv4RoutePrefix(v string) {
	o.Ipv4RoutePrefix = &v
}

// GetNextHopIpAddress returns the NextHopIpAddress field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayNameStaticRoutesInner) GetNextHopIpAddress() string {
	if o == nil || IsNil(o.NextHopIpAddress) {
		var ret string
		return ret
	}
	return *o.NextHopIpAddress
}

// GetNextHopIpAddressOk returns a tuple with the NextHopIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayNameStaticRoutesInner) GetNextHopIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.NextHopIpAddress) {
		return nil, false
	}
	return o.NextHopIpAddress, true
}

// HasNextHopIpAddress returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayNameStaticRoutesInner) HasNextHopIpAddress() bool {
	if o != nil && !IsNil(o.NextHopIpAddress) {
		return true
	}

	return false
}

// SetNextHopIpAddress gets a reference to the given string and assigns it to the NextHopIpAddress field.
func (o *ConfigPutRequestGatewayGatewayNameStaticRoutesInner) SetNextHopIpAddress(v string) {
	o.NextHopIpAddress = &v
}

// GetAdValue returns the AdValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigPutRequestGatewayGatewayNameStaticRoutesInner) GetAdValue() int32 {
	if o == nil || IsNil(o.AdValue.Get()) {
		var ret int32
		return ret
	}
	return *o.AdValue.Get()
}

// GetAdValueOk returns a tuple with the AdValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigPutRequestGatewayGatewayNameStaticRoutesInner) GetAdValueOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AdValue.Get(), o.AdValue.IsSet()
}

// HasAdValue returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayNameStaticRoutesInner) HasAdValue() bool {
	if o != nil && o.AdValue.IsSet() {
		return true
	}

	return false
}

// SetAdValue gets a reference to the given NullableInt32 and assigns it to the AdValue field.
func (o *ConfigPutRequestGatewayGatewayNameStaticRoutesInner) SetAdValue(v int32) {
	o.AdValue.Set(&v)
}
// SetAdValueNil sets the value for AdValue to be an explicit nil
func (o *ConfigPutRequestGatewayGatewayNameStaticRoutesInner) SetAdValueNil() {
	o.AdValue.Set(nil)
}

// UnsetAdValue ensures that no value is present for AdValue, not even an explicit nil
func (o *ConfigPutRequestGatewayGatewayNameStaticRoutesInner) UnsetAdValue() {
	o.AdValue.Unset()
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayNameStaticRoutesInner) GetIndex() int32 {
	if o == nil || IsNil(o.Index) {
		var ret int32
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayNameStaticRoutesInner) GetIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.Index) {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayNameStaticRoutesInner) HasIndex() bool {
	if o != nil && !IsNil(o.Index) {
		return true
	}

	return false
}

// SetIndex gets a reference to the given int32 and assigns it to the Index field.
func (o *ConfigPutRequestGatewayGatewayNameStaticRoutesInner) SetIndex(v int32) {
	o.Index = &v
}

func (o ConfigPutRequestGatewayGatewayNameStaticRoutesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigPutRequestGatewayGatewayNameStaticRoutesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.Ipv4RoutePrefix) {
		toSerialize["ipv4_route_prefix"] = o.Ipv4RoutePrefix
	}
	if !IsNil(o.NextHopIpAddress) {
		toSerialize["next_hop_ip_address"] = o.NextHopIpAddress
	}
	if o.AdValue.IsSet() {
		toSerialize["ad_value"] = o.AdValue.Get()
	}
	if !IsNil(o.Index) {
		toSerialize["index"] = o.Index
	}
	return toSerialize, nil
}

type NullableConfigPutRequestGatewayGatewayNameStaticRoutesInner struct {
	value *ConfigPutRequestGatewayGatewayNameStaticRoutesInner
	isSet bool
}

func (v NullableConfigPutRequestGatewayGatewayNameStaticRoutesInner) Get() *ConfigPutRequestGatewayGatewayNameStaticRoutesInner {
	return v.value
}

func (v *NullableConfigPutRequestGatewayGatewayNameStaticRoutesInner) Set(val *ConfigPutRequestGatewayGatewayNameStaticRoutesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigPutRequestGatewayGatewayNameStaticRoutesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigPutRequestGatewayGatewayNameStaticRoutesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigPutRequestGatewayGatewayNameStaticRoutesInner(val *ConfigPutRequestGatewayGatewayNameStaticRoutesInner) *NullableConfigPutRequestGatewayGatewayNameStaticRoutesInner {
	return &NullableConfigPutRequestGatewayGatewayNameStaticRoutesInner{value: val, isSet: true}
}

func (v NullableConfigPutRequestGatewayGatewayNameStaticRoutesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigPutRequestGatewayGatewayNameStaticRoutesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


