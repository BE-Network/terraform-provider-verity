/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DevicevoicesettingsPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DevicevoicesettingsPutRequest{}

// DevicevoicesettingsPutRequest struct for DevicevoicesettingsPutRequest
type DevicevoicesettingsPutRequest struct {
	DeviceVoiceSettings *map[string]ConfigPutRequestDeviceVoiceSettingsDeviceVoiceSettingsName `json:"device_voice_settings,omitempty"`
}

// NewDevicevoicesettingsPutRequest instantiates a new DevicevoicesettingsPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDevicevoicesettingsPutRequest() *DevicevoicesettingsPutRequest {
	this := DevicevoicesettingsPutRequest{}
	return &this
}

// NewDevicevoicesettingsPutRequestWithDefaults instantiates a new DevicevoicesettingsPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDevicevoicesettingsPutRequestWithDefaults() *DevicevoicesettingsPutRequest {
	this := DevicevoicesettingsPutRequest{}
	return &this
}

// GetDeviceVoiceSettings returns the DeviceVoiceSettings field value if set, zero value otherwise.
func (o *DevicevoicesettingsPutRequest) GetDeviceVoiceSettings() map[string]ConfigPutRequestDeviceVoiceSettingsDeviceVoiceSettingsName {
	if o == nil || IsNil(o.DeviceVoiceSettings) {
		var ret map[string]ConfigPutRequestDeviceVoiceSettingsDeviceVoiceSettingsName
		return ret
	}
	return *o.DeviceVoiceSettings
}

// GetDeviceVoiceSettingsOk returns a tuple with the DeviceVoiceSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevicevoicesettingsPutRequest) GetDeviceVoiceSettingsOk() (*map[string]ConfigPutRequestDeviceVoiceSettingsDeviceVoiceSettingsName, bool) {
	if o == nil || IsNil(o.DeviceVoiceSettings) {
		return nil, false
	}
	return o.DeviceVoiceSettings, true
}

// HasDeviceVoiceSettings returns a boolean if a field has been set.
func (o *DevicevoicesettingsPutRequest) HasDeviceVoiceSettings() bool {
	if o != nil && !IsNil(o.DeviceVoiceSettings) {
		return true
	}

	return false
}

// SetDeviceVoiceSettings gets a reference to the given map[string]ConfigPutRequestDeviceVoiceSettingsDeviceVoiceSettingsName and assigns it to the DeviceVoiceSettings field.
func (o *DevicevoicesettingsPutRequest) SetDeviceVoiceSettings(v map[string]ConfigPutRequestDeviceVoiceSettingsDeviceVoiceSettingsName) {
	o.DeviceVoiceSettings = &v
}

func (o DevicevoicesettingsPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DevicevoicesettingsPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeviceVoiceSettings) {
		toSerialize["device_voice_settings"] = o.DeviceVoiceSettings
	}
	return toSerialize, nil
}

type NullableDevicevoicesettingsPutRequest struct {
	value *DevicevoicesettingsPutRequest
	isSet bool
}

func (v NullableDevicevoicesettingsPutRequest) Get() *DevicevoicesettingsPutRequest {
	return v.value
}

func (v *NullableDevicevoicesettingsPutRequest) Set(val *DevicevoicesettingsPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDevicevoicesettingsPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDevicevoicesettingsPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDevicevoicesettingsPutRequest(val *DevicevoicesettingsPutRequest) *NullableDevicevoicesettingsPutRequest {
	return &NullableDevicevoicesettingsPutRequest{value: val, isSet: true}
}

func (v NullableDevicevoicesettingsPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDevicevoicesettingsPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


