/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConfigPutRequestIpFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigPutRequestIpFilter{}

// ConfigPutRequestIpFilter struct for ConfigPutRequestIpFilter
type ConfigPutRequestIpFilter struct {
	IpFilterName *ConfigPutRequestIpv4FilterIpv4FilterName `json:"ip_filter_name,omitempty"`
}

// NewConfigPutRequestIpFilter instantiates a new ConfigPutRequestIpFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigPutRequestIpFilter() *ConfigPutRequestIpFilter {
	this := ConfigPutRequestIpFilter{}
	return &this
}

// NewConfigPutRequestIpFilterWithDefaults instantiates a new ConfigPutRequestIpFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigPutRequestIpFilterWithDefaults() *ConfigPutRequestIpFilter {
	this := ConfigPutRequestIpFilter{}
	return &this
}

// GetIpFilterName returns the IpFilterName field value if set, zero value otherwise.
func (o *ConfigPutRequestIpFilter) GetIpFilterName() ConfigPutRequestIpv4FilterIpv4FilterName {
	if o == nil || IsNil(o.IpFilterName) {
		var ret ConfigPutRequestIpv4FilterIpv4FilterName
		return ret
	}
	return *o.IpFilterName
}

// GetIpFilterNameOk returns a tuple with the IpFilterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestIpFilter) GetIpFilterNameOk() (*ConfigPutRequestIpv4FilterIpv4FilterName, bool) {
	if o == nil || IsNil(o.IpFilterName) {
		return nil, false
	}
	return o.IpFilterName, true
}

// HasIpFilterName returns a boolean if a field has been set.
func (o *ConfigPutRequestIpFilter) HasIpFilterName() bool {
	if o != nil && !IsNil(o.IpFilterName) {
		return true
	}

	return false
}

// SetIpFilterName gets a reference to the given ConfigPutRequestIpv4FilterIpv4FilterName and assigns it to the IpFilterName field.
func (o *ConfigPutRequestIpFilter) SetIpFilterName(v ConfigPutRequestIpv4FilterIpv4FilterName) {
	o.IpFilterName = &v
}

func (o ConfigPutRequestIpFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigPutRequestIpFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IpFilterName) {
		toSerialize["ip_filter_name"] = o.IpFilterName
	}
	return toSerialize, nil
}

type NullableConfigPutRequestIpFilter struct {
	value *ConfigPutRequestIpFilter
	isSet bool
}

func (v NullableConfigPutRequestIpFilter) Get() *ConfigPutRequestIpFilter {
	return v.value
}

func (v *NullableConfigPutRequestIpFilter) Set(val *ConfigPutRequestIpFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigPutRequestIpFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigPutRequestIpFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigPutRequestIpFilter(val *ConfigPutRequestIpFilter) *NullableConfigPutRequestIpFilter {
	return &NullableConfigPutRequestIpFilter{value: val, isSet: true}
}

func (v NullableConfigPutRequestIpFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigPutRequestIpFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


