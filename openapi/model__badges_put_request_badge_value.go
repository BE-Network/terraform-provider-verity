/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BadgesPutRequestBadgeValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BadgesPutRequestBadgeValue{}

// BadgesPutRequestBadgeValue struct for BadgesPutRequestBadgeValue
type BadgesPutRequestBadgeValue struct {
	// Object Name. Must be unique.
	Name *string `json:"name,omitempty"`
	// Badge color
	Color *string `json:"color,omitempty"`
	// Badge number
	Number *int32 `json:"number,omitempty"`
	ObjectProperties *AclsPutRequestIpFilterValueObjectProperties `json:"object_properties,omitempty"`
}

// NewBadgesPutRequestBadgeValue instantiates a new BadgesPutRequestBadgeValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBadgesPutRequestBadgeValue() *BadgesPutRequestBadgeValue {
	this := BadgesPutRequestBadgeValue{}
	var name string = ""
	this.Name = &name
	return &this
}

// NewBadgesPutRequestBadgeValueWithDefaults instantiates a new BadgesPutRequestBadgeValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBadgesPutRequestBadgeValueWithDefaults() *BadgesPutRequestBadgeValue {
	this := BadgesPutRequestBadgeValue{}
	var name string = ""
	this.Name = &name
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BadgesPutRequestBadgeValue) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BadgesPutRequestBadgeValue) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BadgesPutRequestBadgeValue) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BadgesPutRequestBadgeValue) SetName(v string) {
	o.Name = &v
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *BadgesPutRequestBadgeValue) GetColor() string {
	if o == nil || IsNil(o.Color) {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BadgesPutRequestBadgeValue) GetColorOk() (*string, bool) {
	if o == nil || IsNil(o.Color) {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *BadgesPutRequestBadgeValue) HasColor() bool {
	if o != nil && !IsNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *BadgesPutRequestBadgeValue) SetColor(v string) {
	o.Color = &v
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *BadgesPutRequestBadgeValue) GetNumber() int32 {
	if o == nil || IsNil(o.Number) {
		var ret int32
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BadgesPutRequestBadgeValue) GetNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.Number) {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *BadgesPutRequestBadgeValue) HasNumber() bool {
	if o != nil && !IsNil(o.Number) {
		return true
	}

	return false
}

// SetNumber gets a reference to the given int32 and assigns it to the Number field.
func (o *BadgesPutRequestBadgeValue) SetNumber(v int32) {
	o.Number = &v
}

// GetObjectProperties returns the ObjectProperties field value if set, zero value otherwise.
func (o *BadgesPutRequestBadgeValue) GetObjectProperties() AclsPutRequestIpFilterValueObjectProperties {
	if o == nil || IsNil(o.ObjectProperties) {
		var ret AclsPutRequestIpFilterValueObjectProperties
		return ret
	}
	return *o.ObjectProperties
}

// GetObjectPropertiesOk returns a tuple with the ObjectProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BadgesPutRequestBadgeValue) GetObjectPropertiesOk() (*AclsPutRequestIpFilterValueObjectProperties, bool) {
	if o == nil || IsNil(o.ObjectProperties) {
		return nil, false
	}
	return o.ObjectProperties, true
}

// HasObjectProperties returns a boolean if a field has been set.
func (o *BadgesPutRequestBadgeValue) HasObjectProperties() bool {
	if o != nil && !IsNil(o.ObjectProperties) {
		return true
	}

	return false
}

// SetObjectProperties gets a reference to the given AclsPutRequestIpFilterValueObjectProperties and assigns it to the ObjectProperties field.
func (o *BadgesPutRequestBadgeValue) SetObjectProperties(v AclsPutRequestIpFilterValueObjectProperties) {
	o.ObjectProperties = &v
}

func (o BadgesPutRequestBadgeValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BadgesPutRequestBadgeValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Color) {
		toSerialize["color"] = o.Color
	}
	if !IsNil(o.Number) {
		toSerialize["number"] = o.Number
	}
	if !IsNil(o.ObjectProperties) {
		toSerialize["object_properties"] = o.ObjectProperties
	}
	return toSerialize, nil
}

type NullableBadgesPutRequestBadgeValue struct {
	value *BadgesPutRequestBadgeValue
	isSet bool
}

func (v NullableBadgesPutRequestBadgeValue) Get() *BadgesPutRequestBadgeValue {
	return v.value
}

func (v *NullableBadgesPutRequestBadgeValue) Set(val *BadgesPutRequestBadgeValue) {
	v.value = val
	v.isSet = true
}

func (v NullableBadgesPutRequestBadgeValue) IsSet() bool {
	return v.isSet
}

func (v *NullableBadgesPutRequestBadgeValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBadgesPutRequestBadgeValue(val *BadgesPutRequestBadgeValue) *NullableBadgesPutRequestBadgeValue {
	return &NullableBadgesPutRequestBadgeValue{value: val, isSet: true}
}

func (v NullableBadgesPutRequestBadgeValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBadgesPutRequestBadgeValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


