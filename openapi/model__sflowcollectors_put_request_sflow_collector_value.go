/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SflowcollectorsPutRequestSflowCollectorValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SflowcollectorsPutRequestSflowCollectorValue{}

// SflowcollectorsPutRequestSflowCollectorValue struct for SflowcollectorsPutRequestSflowCollectorValue
type SflowcollectorsPutRequestSflowCollectorValue struct {
	// Object Name. Must be unique.
	Name *string `json:"name,omitempty"`
	// Enable object.
	Enable *bool `json:"enable,omitempty"`
	// IP address of the sFlow Collector 
	Ip *string `json:"ip,omitempty"`
	// Port
	Port *int32 `json:"port,omitempty"`
}

// NewSflowcollectorsPutRequestSflowCollectorValue instantiates a new SflowcollectorsPutRequestSflowCollectorValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSflowcollectorsPutRequestSflowCollectorValue() *SflowcollectorsPutRequestSflowCollectorValue {
	this := SflowcollectorsPutRequestSflowCollectorValue{}
	var name string = ""
	this.Name = &name
	var enable bool = false
	this.Enable = &enable
	var ip string = ""
	this.Ip = &ip
	var port int32 = 6343
	this.Port = &port
	return &this
}

// NewSflowcollectorsPutRequestSflowCollectorValueWithDefaults instantiates a new SflowcollectorsPutRequestSflowCollectorValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSflowcollectorsPutRequestSflowCollectorValueWithDefaults() *SflowcollectorsPutRequestSflowCollectorValue {
	this := SflowcollectorsPutRequestSflowCollectorValue{}
	var name string = ""
	this.Name = &name
	var enable bool = false
	this.Enable = &enable
	var ip string = ""
	this.Ip = &ip
	var port int32 = 6343
	this.Port = &port
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SflowcollectorsPutRequestSflowCollectorValue) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SflowcollectorsPutRequestSflowCollectorValue) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SflowcollectorsPutRequestSflowCollectorValue) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SflowcollectorsPutRequestSflowCollectorValue) SetName(v string) {
	o.Name = &v
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *SflowcollectorsPutRequestSflowCollectorValue) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SflowcollectorsPutRequestSflowCollectorValue) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *SflowcollectorsPutRequestSflowCollectorValue) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *SflowcollectorsPutRequestSflowCollectorValue) SetEnable(v bool) {
	o.Enable = &v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *SflowcollectorsPutRequestSflowCollectorValue) GetIp() string {
	if o == nil || IsNil(o.Ip) {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SflowcollectorsPutRequestSflowCollectorValue) GetIpOk() (*string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *SflowcollectorsPutRequestSflowCollectorValue) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *SflowcollectorsPutRequestSflowCollectorValue) SetIp(v string) {
	o.Ip = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *SflowcollectorsPutRequestSflowCollectorValue) GetPort() int32 {
	if o == nil || IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SflowcollectorsPutRequestSflowCollectorValue) GetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *SflowcollectorsPutRequestSflowCollectorValue) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *SflowcollectorsPutRequestSflowCollectorValue) SetPort(v int32) {
	o.Port = &v
}

func (o SflowcollectorsPutRequestSflowCollectorValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SflowcollectorsPutRequestSflowCollectorValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	return toSerialize, nil
}

type NullableSflowcollectorsPutRequestSflowCollectorValue struct {
	value *SflowcollectorsPutRequestSflowCollectorValue
	isSet bool
}

func (v NullableSflowcollectorsPutRequestSflowCollectorValue) Get() *SflowcollectorsPutRequestSflowCollectorValue {
	return v.value
}

func (v *NullableSflowcollectorsPutRequestSflowCollectorValue) Set(val *SflowcollectorsPutRequestSflowCollectorValue) {
	v.value = val
	v.isSet = true
}

func (v NullableSflowcollectorsPutRequestSflowCollectorValue) IsSet() bool {
	return v.isSet
}

func (v *NullableSflowcollectorsPutRequestSflowCollectorValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSflowcollectorsPutRequestSflowCollectorValue(val *SflowcollectorsPutRequestSflowCollectorValue) *NullableSflowcollectorsPutRequestSflowCollectorValue {
	return &NullableSflowcollectorsPutRequestSflowCollectorValue{value: val, isSet: true}
}

func (v NullableSflowcollectorsPutRequestSflowCollectorValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSflowcollectorsPutRequestSflowCollectorValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


