/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue{}

// DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue struct for DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue
type DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue struct {
	// Object Name. Must be unique.
	Name *string `json:"name,omitempty"`
	// Enable object.
	Enable *bool `json:"enable,omitempty"`
	// Enable sFlow for this Diagnostics Profile 
	EnableSflow *bool `json:"enable_sflow,omitempty"`
}

// NewDiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue instantiates a new DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue() *DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue {
	this := DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue{}
	var name string = ""
	this.Name = &name
	var enable bool = false
	this.Enable = &enable
	var enableSflow bool = true
	this.EnableSflow = &enableSflow
	return &this
}

// NewDiagnosticsportprofilesPutRequestDiagnosticsPortProfileValueWithDefaults instantiates a new DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiagnosticsportprofilesPutRequestDiagnosticsPortProfileValueWithDefaults() *DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue {
	this := DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue{}
	var name string = ""
	this.Name = &name
	var enable bool = false
	this.Enable = &enable
	var enableSflow bool = true
	this.EnableSflow = &enableSflow
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue) SetName(v string) {
	o.Name = &v
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue) SetEnable(v bool) {
	o.Enable = &v
}

// GetEnableSflow returns the EnableSflow field value if set, zero value otherwise.
func (o *DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue) GetEnableSflow() bool {
	if o == nil || IsNil(o.EnableSflow) {
		var ret bool
		return ret
	}
	return *o.EnableSflow
}

// GetEnableSflowOk returns a tuple with the EnableSflow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue) GetEnableSflowOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableSflow) {
		return nil, false
	}
	return o.EnableSflow, true
}

// HasEnableSflow returns a boolean if a field has been set.
func (o *DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue) HasEnableSflow() bool {
	if o != nil && !IsNil(o.EnableSflow) {
		return true
	}

	return false
}

// SetEnableSflow gets a reference to the given bool and assigns it to the EnableSflow field.
func (o *DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue) SetEnableSflow(v bool) {
	o.EnableSflow = &v
}

func (o DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.EnableSflow) {
		toSerialize["enable_sflow"] = o.EnableSflow
	}
	return toSerialize, nil
}

type NullableDiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue struct {
	value *DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue
	isSet bool
}

func (v NullableDiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue) Get() *DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue {
	return v.value
}

func (v *NullableDiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue) Set(val *DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue) {
	v.value = val
	v.isSet = true
}

func (v NullableDiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue) IsSet() bool {
	return v.isSet
}

func (v *NullableDiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue(val *DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue) *NullableDiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue {
	return &NullableDiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue{value: val, isSet: true}
}

func (v NullableDiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


