/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConfigPutRequestEndpoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigPutRequestEndpoint{}

// ConfigPutRequestEndpoint struct for ConfigPutRequestEndpoint
type ConfigPutRequestEndpoint struct {
	EndpointName *ConfigPutRequestEndpointEndpointName `json:"endpoint_name,omitempty"`
}

// NewConfigPutRequestEndpoint instantiates a new ConfigPutRequestEndpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigPutRequestEndpoint() *ConfigPutRequestEndpoint {
	this := ConfigPutRequestEndpoint{}
	return &this
}

// NewConfigPutRequestEndpointWithDefaults instantiates a new ConfigPutRequestEndpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigPutRequestEndpointWithDefaults() *ConfigPutRequestEndpoint {
	this := ConfigPutRequestEndpoint{}
	return &this
}

// GetEndpointName returns the EndpointName field value if set, zero value otherwise.
func (o *ConfigPutRequestEndpoint) GetEndpointName() ConfigPutRequestEndpointEndpointName {
	if o == nil || IsNil(o.EndpointName) {
		var ret ConfigPutRequestEndpointEndpointName
		return ret
	}
	return *o.EndpointName
}

// GetEndpointNameOk returns a tuple with the EndpointName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestEndpoint) GetEndpointNameOk() (*ConfigPutRequestEndpointEndpointName, bool) {
	if o == nil || IsNil(o.EndpointName) {
		return nil, false
	}
	return o.EndpointName, true
}

// HasEndpointName returns a boolean if a field has been set.
func (o *ConfigPutRequestEndpoint) HasEndpointName() bool {
	if o != nil && !IsNil(o.EndpointName) {
		return true
	}

	return false
}

// SetEndpointName gets a reference to the given ConfigPutRequestEndpointEndpointName and assigns it to the EndpointName field.
func (o *ConfigPutRequestEndpoint) SetEndpointName(v ConfigPutRequestEndpointEndpointName) {
	o.EndpointName = &v
}

func (o ConfigPutRequestEndpoint) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigPutRequestEndpoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EndpointName) {
		toSerialize["endpoint_name"] = o.EndpointName
	}
	return toSerialize, nil
}

type NullableConfigPutRequestEndpoint struct {
	value *ConfigPutRequestEndpoint
	isSet bool
}

func (v NullableConfigPutRequestEndpoint) Get() *ConfigPutRequestEndpoint {
	return v.value
}

func (v *NullableConfigPutRequestEndpoint) Set(val *ConfigPutRequestEndpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigPutRequestEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigPutRequestEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigPutRequestEndpoint(val *ConfigPutRequestEndpoint) *NullableConfigPutRequestEndpoint {
	return &NullableConfigPutRequestEndpoint{value: val, isSet: true}
}

func (v NullableConfigPutRequestEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigPutRequestEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


