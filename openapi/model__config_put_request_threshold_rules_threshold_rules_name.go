/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConfigPutRequestThresholdRulesThresholdRulesName type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigPutRequestThresholdRulesThresholdRulesName{}

// ConfigPutRequestThresholdRulesThresholdRulesName struct for ConfigPutRequestThresholdRulesThresholdRulesName
type ConfigPutRequestThresholdRulesThresholdRulesName struct {
	// Object Name. Must be unique.
	Name *string `json:"name,omitempty"`
	// Enable object.
	Enable *bool `json:"enable,omitempty"`
	Rules []ConfigPutRequestThresholdRulesThresholdRulesNameRulesInner `json:"rules,omitempty"`
}

// NewConfigPutRequestThresholdRulesThresholdRulesName instantiates a new ConfigPutRequestThresholdRulesThresholdRulesName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigPutRequestThresholdRulesThresholdRulesName() *ConfigPutRequestThresholdRulesThresholdRulesName {
	this := ConfigPutRequestThresholdRulesThresholdRulesName{}
	var name string = ""
	this.Name = &name
	var enable bool = false
	this.Enable = &enable
	return &this
}

// NewConfigPutRequestThresholdRulesThresholdRulesNameWithDefaults instantiates a new ConfigPutRequestThresholdRulesThresholdRulesName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigPutRequestThresholdRulesThresholdRulesNameWithDefaults() *ConfigPutRequestThresholdRulesThresholdRulesName {
	this := ConfigPutRequestThresholdRulesThresholdRulesName{}
	var name string = ""
	this.Name = &name
	var enable bool = false
	this.Enable = &enable
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ConfigPutRequestThresholdRulesThresholdRulesName) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestThresholdRulesThresholdRulesName) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ConfigPutRequestThresholdRulesThresholdRulesName) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ConfigPutRequestThresholdRulesThresholdRulesName) SetName(v string) {
	o.Name = &v
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *ConfigPutRequestThresholdRulesThresholdRulesName) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestThresholdRulesThresholdRulesName) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *ConfigPutRequestThresholdRulesThresholdRulesName) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *ConfigPutRequestThresholdRulesThresholdRulesName) SetEnable(v bool) {
	o.Enable = &v
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *ConfigPutRequestThresholdRulesThresholdRulesName) GetRules() []ConfigPutRequestThresholdRulesThresholdRulesNameRulesInner {
	if o == nil || IsNil(o.Rules) {
		var ret []ConfigPutRequestThresholdRulesThresholdRulesNameRulesInner
		return ret
	}
	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestThresholdRulesThresholdRulesName) GetRulesOk() ([]ConfigPutRequestThresholdRulesThresholdRulesNameRulesInner, bool) {
	if o == nil || IsNil(o.Rules) {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *ConfigPutRequestThresholdRulesThresholdRulesName) HasRules() bool {
	if o != nil && !IsNil(o.Rules) {
		return true
	}

	return false
}

// SetRules gets a reference to the given []ConfigPutRequestThresholdRulesThresholdRulesNameRulesInner and assigns it to the Rules field.
func (o *ConfigPutRequestThresholdRulesThresholdRulesName) SetRules(v []ConfigPutRequestThresholdRulesThresholdRulesNameRulesInner) {
	o.Rules = v
}

func (o ConfigPutRequestThresholdRulesThresholdRulesName) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigPutRequestThresholdRulesThresholdRulesName) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.Rules) {
		toSerialize["rules"] = o.Rules
	}
	return toSerialize, nil
}

type NullableConfigPutRequestThresholdRulesThresholdRulesName struct {
	value *ConfigPutRequestThresholdRulesThresholdRulesName
	isSet bool
}

func (v NullableConfigPutRequestThresholdRulesThresholdRulesName) Get() *ConfigPutRequestThresholdRulesThresholdRulesName {
	return v.value
}

func (v *NullableConfigPutRequestThresholdRulesThresholdRulesName) Set(val *ConfigPutRequestThresholdRulesThresholdRulesName) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigPutRequestThresholdRulesThresholdRulesName) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigPutRequestThresholdRulesThresholdRulesName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigPutRequestThresholdRulesThresholdRulesName(val *ConfigPutRequestThresholdRulesThresholdRulesName) *NullableConfigPutRequestThresholdRulesThresholdRulesName {
	return &NullableConfigPutRequestThresholdRulesThresholdRulesName{value: val, isSet: true}
}

func (v NullableConfigPutRequestThresholdRulesThresholdRulesName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigPutRequestThresholdRulesThresholdRulesName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


