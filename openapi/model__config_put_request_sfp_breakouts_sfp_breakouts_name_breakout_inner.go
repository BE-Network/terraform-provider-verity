/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner{}

// ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner struct for ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner
type ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner struct {
	// Enable
	Enable *bool `json:"enable,omitempty"`
	// Vendor
	Vendor *string `json:"vendor,omitempty"`
	// Part Number
	PartNumber *string `json:"part_number,omitempty"`
	// Breakout definition; defines number of ports of what speed this port is brokenout to.
	Breakout *string `json:"breakout,omitempty"`
}

// NewConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner instantiates a new ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner() *ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner {
	this := ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner{}
	var enable bool = false
	this.Enable = &enable
	var vendor string = ""
	this.Vendor = &vendor
	var partNumber string = ""
	this.PartNumber = &partNumber
	var breakout string = "1x100G"
	this.Breakout = &breakout
	return &this
}

// NewConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInnerWithDefaults instantiates a new ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInnerWithDefaults() *ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner {
	this := ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner{}
	var enable bool = false
	this.Enable = &enable
	var vendor string = ""
	this.Vendor = &vendor
	var partNumber string = ""
	this.PartNumber = &partNumber
	var breakout string = "1x100G"
	this.Breakout = &breakout
	return &this
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner) SetEnable(v bool) {
	o.Enable = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner) GetVendor() string {
	if o == nil || IsNil(o.Vendor) {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner) GetVendorOk() (*string, bool) {
	if o == nil || IsNil(o.Vendor) {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner) HasVendor() bool {
	if o != nil && !IsNil(o.Vendor) {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner) SetVendor(v string) {
	o.Vendor = &v
}

// GetPartNumber returns the PartNumber field value if set, zero value otherwise.
func (o *ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner) GetPartNumber() string {
	if o == nil || IsNil(o.PartNumber) {
		var ret string
		return ret
	}
	return *o.PartNumber
}

// GetPartNumberOk returns a tuple with the PartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner) GetPartNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PartNumber) {
		return nil, false
	}
	return o.PartNumber, true
}

// HasPartNumber returns a boolean if a field has been set.
func (o *ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner) HasPartNumber() bool {
	if o != nil && !IsNil(o.PartNumber) {
		return true
	}

	return false
}

// SetPartNumber gets a reference to the given string and assigns it to the PartNumber field.
func (o *ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner) SetPartNumber(v string) {
	o.PartNumber = &v
}

// GetBreakout returns the Breakout field value if set, zero value otherwise.
func (o *ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner) GetBreakout() string {
	if o == nil || IsNil(o.Breakout) {
		var ret string
		return ret
	}
	return *o.Breakout
}

// GetBreakoutOk returns a tuple with the Breakout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner) GetBreakoutOk() (*string, bool) {
	if o == nil || IsNil(o.Breakout) {
		return nil, false
	}
	return o.Breakout, true
}

// HasBreakout returns a boolean if a field has been set.
func (o *ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner) HasBreakout() bool {
	if o != nil && !IsNil(o.Breakout) {
		return true
	}

	return false
}

// SetBreakout gets a reference to the given string and assigns it to the Breakout field.
func (o *ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner) SetBreakout(v string) {
	o.Breakout = &v
}

func (o ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.Vendor) {
		toSerialize["vendor"] = o.Vendor
	}
	if !IsNil(o.PartNumber) {
		toSerialize["part_number"] = o.PartNumber
	}
	if !IsNil(o.Breakout) {
		toSerialize["breakout"] = o.Breakout
	}
	return toSerialize, nil
}

type NullableConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner struct {
	value *ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner
	isSet bool
}

func (v NullableConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner) Get() *ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner {
	return v.value
}

func (v *NullableConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner) Set(val *ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner(val *ConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner) *NullableConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner {
	return &NullableConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner{value: val, isSet: true}
}

func (v NullableConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigPutRequestSfpBreakoutsSfpBreakoutsNameBreakoutInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


