/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConfigPutRequestImageUpdateSets type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigPutRequestImageUpdateSets{}

// ConfigPutRequestImageUpdateSets struct for ConfigPutRequestImageUpdateSets
type ConfigPutRequestImageUpdateSets struct {
	ImageUpdateSetsName *ConfigPutRequestImageUpdateSetsImageUpdateSetsName `json:"image_update_sets_name,omitempty"`
}

// NewConfigPutRequestImageUpdateSets instantiates a new ConfigPutRequestImageUpdateSets object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigPutRequestImageUpdateSets() *ConfigPutRequestImageUpdateSets {
	this := ConfigPutRequestImageUpdateSets{}
	return &this
}

// NewConfigPutRequestImageUpdateSetsWithDefaults instantiates a new ConfigPutRequestImageUpdateSets object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigPutRequestImageUpdateSetsWithDefaults() *ConfigPutRequestImageUpdateSets {
	this := ConfigPutRequestImageUpdateSets{}
	return &this
}

// GetImageUpdateSetsName returns the ImageUpdateSetsName field value if set, zero value otherwise.
func (o *ConfigPutRequestImageUpdateSets) GetImageUpdateSetsName() ConfigPutRequestImageUpdateSetsImageUpdateSetsName {
	if o == nil || IsNil(o.ImageUpdateSetsName) {
		var ret ConfigPutRequestImageUpdateSetsImageUpdateSetsName
		return ret
	}
	return *o.ImageUpdateSetsName
}

// GetImageUpdateSetsNameOk returns a tuple with the ImageUpdateSetsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestImageUpdateSets) GetImageUpdateSetsNameOk() (*ConfigPutRequestImageUpdateSetsImageUpdateSetsName, bool) {
	if o == nil || IsNil(o.ImageUpdateSetsName) {
		return nil, false
	}
	return o.ImageUpdateSetsName, true
}

// HasImageUpdateSetsName returns a boolean if a field has been set.
func (o *ConfigPutRequestImageUpdateSets) HasImageUpdateSetsName() bool {
	if o != nil && !IsNil(o.ImageUpdateSetsName) {
		return true
	}

	return false
}

// SetImageUpdateSetsName gets a reference to the given ConfigPutRequestImageUpdateSetsImageUpdateSetsName and assigns it to the ImageUpdateSetsName field.
func (o *ConfigPutRequestImageUpdateSets) SetImageUpdateSetsName(v ConfigPutRequestImageUpdateSetsImageUpdateSetsName) {
	o.ImageUpdateSetsName = &v
}

func (o ConfigPutRequestImageUpdateSets) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigPutRequestImageUpdateSets) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ImageUpdateSetsName) {
		toSerialize["image_update_sets_name"] = o.ImageUpdateSetsName
	}
	return toSerialize, nil
}

type NullableConfigPutRequestImageUpdateSets struct {
	value *ConfigPutRequestImageUpdateSets
	isSet bool
}

func (v NullableConfigPutRequestImageUpdateSets) Get() *ConfigPutRequestImageUpdateSets {
	return v.value
}

func (v *NullableConfigPutRequestImageUpdateSets) Set(val *ConfigPutRequestImageUpdateSets) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigPutRequestImageUpdateSets) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigPutRequestImageUpdateSets) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigPutRequestImageUpdateSets(val *ConfigPutRequestImageUpdateSets) *NullableConfigPutRequestImageUpdateSets {
	return &NullableConfigPutRequestImageUpdateSets{value: val, isSet: true}
}

func (v NullableConfigPutRequestImageUpdateSets) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigPutRequestImageUpdateSets) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


