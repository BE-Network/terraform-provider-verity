/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConfigPutRequestGatewayGatewayName type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigPutRequestGatewayGatewayName{}

// ConfigPutRequestGatewayGatewayName struct for ConfigPutRequestGatewayGatewayName
type ConfigPutRequestGatewayGatewayName struct {
	// Object Name. Must be unique.
	Name *string `json:"name,omitempty"`
	// Enable object. It's highly recommended to set this value to true so that validation on the object will be ran.
	Enable *bool `json:"enable,omitempty"`
	// Tenant
	Tenant *string `json:"tenant,omitempty"`
	// Object type for tenant field
	TenantRefType *string `json:"tenant_ref_type_,omitempty"`
	// IP address of remote BGP peer
	NeighborIpAddress *string `json:"neighbor_ip_address,omitempty"`
	// Autonomous System Number of remote BGP peer 
	NeighborAsNumber NullableInt32 `json:"neighbor_as_number,omitempty"`
	// 
	FabricInterconnect *bool `json:"fabric_interconnect,omitempty"`
	// Interval in seconds between Keepalive messages sent to remote BGP peer
	KeepaliveTimer *int32 `json:"keepalive_timer,omitempty"`
	// Time, in seconds,  used to determine failure of session Keepalive messages received from remote BGP peer 
	HoldTimer *int32 `json:"hold_timer,omitempty"`
	// Time in seconds between sucessive attempts to Establish BGP session
	ConnectTimer *int32 `json:"connect_timer,omitempty"`
	// The minimum time in seconds between sending route updates to BGP neighbor 
	AdvertisementInterval *int32 `json:"advertisement_interval,omitempty"`
	// Allows external BGP neighbors to establish peering session multiple network hops away. 
	EbgpMultihop *int32 `json:"ebgp_multihop,omitempty"`
	// VLAN used to carry BGP TCP session
	EgressVlan NullableInt32 `json:"egress_vlan,omitempty"`
	// Source IP address used to override the default source address calculation for BGP TCP session
	SourceIpAddress *string `json:"source_ip_address,omitempty"`
	// The Anycast Address will be used to enable an IP routing redundancy mechanism designed to allow for transparent failover across a leaf pair at the first-hop IP router.
	AnycastIpMask *string `json:"anycast_ip_mask,omitempty"`
	// MD5 password
	Md5Password *string `json:"md5_password,omitempty"`
	// A route-map applied to routes imported into the current tenant from the targeted BGP router with the purpose of filtering or modifying the routes
	ImportRouteMap *string `json:"import_route_map,omitempty"`
	// Object type for import_route_map field
	ImportRouteMapRefType *string `json:"import_route_map_ref_type_,omitempty"`
	// A route-map applied to routes exported into the current tenant from the targeted BGP router with the purpose of filtering or modifying the routes
	ExportRouteMap *string `json:"export_route_map,omitempty"`
	// Object type for export_route_map field
	ExportRouteMapRefType *string `json:"export_route_map_ref_type_,omitempty"`
	// Gateway Mode. Can be BGP, Static, or Default
	GatewayMode *string `json:"gateway_mode,omitempty"`
	// Local AS Number
	LocalAsNumber NullableInt32 `json:"local_as_number,omitempty"`
	// Do not prepend the local-as number to the AS-PATH for routes advertised through this BGP gateway. The Local AS Number must be set for this to be able to be set.
	LocalAsNoPrepend *bool `json:"local_as_no_prepend,omitempty"`
	// Prepend only Local AS in updates to EBGP peers.
	ReplaceAs *bool `json:"replace_as,omitempty"`
	// Allow routes with the local AS number in the AS-path, specifying the maximum occurrences permitted before declaring a routing loop. Leave blank or '0' to disable.
	MaxLocalAsOccurrences NullableInt32 `json:"max_local_as_occurrences,omitempty"`
	// Dynamic BGP Subnet
	DynamicBgpSubnet *string `json:"dynamic_bgp_subnet,omitempty"`
	// Dynamic BGP Limits
	DynamicBgpLimits NullableInt32 `json:"dynamic_bgp_limits,omitempty"`
	// Helper Hop IP Address
	HelperHopIpAddress *string `json:"helper_hop_ip_address,omitempty"`
	// Enable BFD(Bi-Directional Forwarding)
	EnableBfd *bool `json:"enable_bfd,omitempty"`
	// Configure the minimum interval during which the system can receive BFD control packets
	BfdReceiveInterval NullableInt32 `json:"bfd_receive_interval,omitempty"`
	// Configure the minimum transmission interval during which the system can send BFD control packets
	BfdTransmissionInterval NullableInt32 `json:"bfd_transmission_interval,omitempty"`
	// Configure the detection multiplier to determine packet loss
	BfdDetectMultiplier NullableInt32 `json:"bfd_detect_multiplier,omitempty"`
	// Optional attribute that disables the normal BGP calculation of next-hops for advertised routes and instead sets the next-hops for advertised routes to the IP address of the switch itself.
	NextHopSelf *bool `json:"next_hop_self,omitempty"`
	StaticRoutes []ConfigPutRequestGatewayGatewayNameStaticRoutesInner `json:"static_routes,omitempty"`
	ObjectProperties *ConfigPutRequestEthDeviceProfilesEthDeviceProfilesNameObjectProperties `json:"object_properties,omitempty"`
	// Instructs BGP to generate and send a default route 0.0.0.0/0 to the specified neighbor.
	DefaultOriginate *bool `json:"default_originate,omitempty"`
	// Enable BFD Multi-Hop for Neighbor. This is used to detect failures in the forwarding path between the BGP peers.
	BfdMultihop *bool `json:"bfd_multihop,omitempty"`
}

// NewConfigPutRequestGatewayGatewayName instantiates a new ConfigPutRequestGatewayGatewayName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigPutRequestGatewayGatewayName() *ConfigPutRequestGatewayGatewayName {
	this := ConfigPutRequestGatewayGatewayName{}
	var name string = ""
	this.Name = &name
	var enable bool = false
	this.Enable = &enable
	var tenant string = ""
	this.Tenant = &tenant
	var neighborIpAddress string = ""
	this.NeighborIpAddress = &neighborIpAddress
	var fabricInterconnect bool = false
	this.FabricInterconnect = &fabricInterconnect
	var keepaliveTimer int32 = 60
	this.KeepaliveTimer = &keepaliveTimer
	var holdTimer int32 = 180
	this.HoldTimer = &holdTimer
	var connectTimer int32 = 120
	this.ConnectTimer = &connectTimer
	var advertisementInterval int32 = 30
	this.AdvertisementInterval = &advertisementInterval
	var ebgpMultihop int32 = 255
	this.EbgpMultihop = &ebgpMultihop
	var sourceIpAddress string = ""
	this.SourceIpAddress = &sourceIpAddress
	var anycastIpMask string = ""
	this.AnycastIpMask = &anycastIpMask
	var md5Password string = ""
	this.Md5Password = &md5Password
	var importRouteMap string = ""
	this.ImportRouteMap = &importRouteMap
	var exportRouteMap string = ""
	this.ExportRouteMap = &exportRouteMap
	var gatewayMode string = "Static BGP"
	this.GatewayMode = &gatewayMode
	var localAsNoPrepend bool = false
	this.LocalAsNoPrepend = &localAsNoPrepend
	var replaceAs bool = false
	this.ReplaceAs = &replaceAs
	var maxLocalAsOccurrences int32 = 0
	this.MaxLocalAsOccurrences = *NewNullableInt32(&maxLocalAsOccurrences)
	var dynamicBgpSubnet string = ""
	this.DynamicBgpSubnet = &dynamicBgpSubnet
	var dynamicBgpLimits int32 = 0
	this.DynamicBgpLimits = *NewNullableInt32(&dynamicBgpLimits)
	var helperHopIpAddress string = ""
	this.HelperHopIpAddress = &helperHopIpAddress
	var enableBfd bool = false
	this.EnableBfd = &enableBfd
	var bfdReceiveInterval int32 = 300
	this.BfdReceiveInterval = *NewNullableInt32(&bfdReceiveInterval)
	var bfdTransmissionInterval int32 = 300
	this.BfdTransmissionInterval = *NewNullableInt32(&bfdTransmissionInterval)
	var bfdDetectMultiplier int32 = 3
	this.BfdDetectMultiplier = *NewNullableInt32(&bfdDetectMultiplier)
	var nextHopSelf bool = false
	this.NextHopSelf = &nextHopSelf
	var defaultOriginate bool = false
	this.DefaultOriginate = &defaultOriginate
	var bfdMultihop bool = false
	this.BfdMultihop = &bfdMultihop
	return &this
}

// NewConfigPutRequestGatewayGatewayNameWithDefaults instantiates a new ConfigPutRequestGatewayGatewayName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigPutRequestGatewayGatewayNameWithDefaults() *ConfigPutRequestGatewayGatewayName {
	this := ConfigPutRequestGatewayGatewayName{}
	var name string = ""
	this.Name = &name
	var enable bool = false
	this.Enable = &enable
	var tenant string = ""
	this.Tenant = &tenant
	var neighborIpAddress string = ""
	this.NeighborIpAddress = &neighborIpAddress
	var fabricInterconnect bool = false
	this.FabricInterconnect = &fabricInterconnect
	var keepaliveTimer int32 = 60
	this.KeepaliveTimer = &keepaliveTimer
	var holdTimer int32 = 180
	this.HoldTimer = &holdTimer
	var connectTimer int32 = 120
	this.ConnectTimer = &connectTimer
	var advertisementInterval int32 = 30
	this.AdvertisementInterval = &advertisementInterval
	var ebgpMultihop int32 = 255
	this.EbgpMultihop = &ebgpMultihop
	var sourceIpAddress string = ""
	this.SourceIpAddress = &sourceIpAddress
	var anycastIpMask string = ""
	this.AnycastIpMask = &anycastIpMask
	var md5Password string = ""
	this.Md5Password = &md5Password
	var importRouteMap string = ""
	this.ImportRouteMap = &importRouteMap
	var exportRouteMap string = ""
	this.ExportRouteMap = &exportRouteMap
	var gatewayMode string = "Static BGP"
	this.GatewayMode = &gatewayMode
	var localAsNoPrepend bool = false
	this.LocalAsNoPrepend = &localAsNoPrepend
	var replaceAs bool = false
	this.ReplaceAs = &replaceAs
	var maxLocalAsOccurrences int32 = 0
	this.MaxLocalAsOccurrences = *NewNullableInt32(&maxLocalAsOccurrences)
	var dynamicBgpSubnet string = ""
	this.DynamicBgpSubnet = &dynamicBgpSubnet
	var dynamicBgpLimits int32 = 0
	this.DynamicBgpLimits = *NewNullableInt32(&dynamicBgpLimits)
	var helperHopIpAddress string = ""
	this.HelperHopIpAddress = &helperHopIpAddress
	var enableBfd bool = false
	this.EnableBfd = &enableBfd
	var bfdReceiveInterval int32 = 300
	this.BfdReceiveInterval = *NewNullableInt32(&bfdReceiveInterval)
	var bfdTransmissionInterval int32 = 300
	this.BfdTransmissionInterval = *NewNullableInt32(&bfdTransmissionInterval)
	var bfdDetectMultiplier int32 = 3
	this.BfdDetectMultiplier = *NewNullableInt32(&bfdDetectMultiplier)
	var nextHopSelf bool = false
	this.NextHopSelf = &nextHopSelf
	var defaultOriginate bool = false
	this.DefaultOriginate = &defaultOriginate
	var bfdMultihop bool = false
	this.BfdMultihop = &bfdMultihop
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayName) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayName) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ConfigPutRequestGatewayGatewayName) SetName(v string) {
	o.Name = &v
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayName) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayName) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *ConfigPutRequestGatewayGatewayName) SetEnable(v bool) {
	o.Enable = &v
}

// GetTenant returns the Tenant field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayName) GetTenant() string {
	if o == nil || IsNil(o.Tenant) {
		var ret string
		return ret
	}
	return *o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayName) GetTenantOk() (*string, bool) {
	if o == nil || IsNil(o.Tenant) {
		return nil, false
	}
	return o.Tenant, true
}

// HasTenant returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasTenant() bool {
	if o != nil && !IsNil(o.Tenant) {
		return true
	}

	return false
}

// SetTenant gets a reference to the given string and assigns it to the Tenant field.
func (o *ConfigPutRequestGatewayGatewayName) SetTenant(v string) {
	o.Tenant = &v
}

// GetTenantRefType returns the TenantRefType field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayName) GetTenantRefType() string {
	if o == nil || IsNil(o.TenantRefType) {
		var ret string
		return ret
	}
	return *o.TenantRefType
}

// GetTenantRefTypeOk returns a tuple with the TenantRefType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayName) GetTenantRefTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TenantRefType) {
		return nil, false
	}
	return o.TenantRefType, true
}

// HasTenantRefType returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasTenantRefType() bool {
	if o != nil && !IsNil(o.TenantRefType) {
		return true
	}

	return false
}

// SetTenantRefType gets a reference to the given string and assigns it to the TenantRefType field.
func (o *ConfigPutRequestGatewayGatewayName) SetTenantRefType(v string) {
	o.TenantRefType = &v
}

// GetNeighborIpAddress returns the NeighborIpAddress field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayName) GetNeighborIpAddress() string {
	if o == nil || IsNil(o.NeighborIpAddress) {
		var ret string
		return ret
	}
	return *o.NeighborIpAddress
}

// GetNeighborIpAddressOk returns a tuple with the NeighborIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayName) GetNeighborIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.NeighborIpAddress) {
		return nil, false
	}
	return o.NeighborIpAddress, true
}

// HasNeighborIpAddress returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasNeighborIpAddress() bool {
	if o != nil && !IsNil(o.NeighborIpAddress) {
		return true
	}

	return false
}

// SetNeighborIpAddress gets a reference to the given string and assigns it to the NeighborIpAddress field.
func (o *ConfigPutRequestGatewayGatewayName) SetNeighborIpAddress(v string) {
	o.NeighborIpAddress = &v
}

// GetNeighborAsNumber returns the NeighborAsNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigPutRequestGatewayGatewayName) GetNeighborAsNumber() int32 {
	if o == nil || IsNil(o.NeighborAsNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.NeighborAsNumber.Get()
}

// GetNeighborAsNumberOk returns a tuple with the NeighborAsNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigPutRequestGatewayGatewayName) GetNeighborAsNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NeighborAsNumber.Get(), o.NeighborAsNumber.IsSet()
}

// HasNeighborAsNumber returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasNeighborAsNumber() bool {
	if o != nil && o.NeighborAsNumber.IsSet() {
		return true
	}

	return false
}

// SetNeighborAsNumber gets a reference to the given NullableInt32 and assigns it to the NeighborAsNumber field.
func (o *ConfigPutRequestGatewayGatewayName) SetNeighborAsNumber(v int32) {
	o.NeighborAsNumber.Set(&v)
}
// SetNeighborAsNumberNil sets the value for NeighborAsNumber to be an explicit nil
func (o *ConfigPutRequestGatewayGatewayName) SetNeighborAsNumberNil() {
	o.NeighborAsNumber.Set(nil)
}

// UnsetNeighborAsNumber ensures that no value is present for NeighborAsNumber, not even an explicit nil
func (o *ConfigPutRequestGatewayGatewayName) UnsetNeighborAsNumber() {
	o.NeighborAsNumber.Unset()
}

// GetFabricInterconnect returns the FabricInterconnect field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayName) GetFabricInterconnect() bool {
	if o == nil || IsNil(o.FabricInterconnect) {
		var ret bool
		return ret
	}
	return *o.FabricInterconnect
}

// GetFabricInterconnectOk returns a tuple with the FabricInterconnect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayName) GetFabricInterconnectOk() (*bool, bool) {
	if o == nil || IsNil(o.FabricInterconnect) {
		return nil, false
	}
	return o.FabricInterconnect, true
}

// HasFabricInterconnect returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasFabricInterconnect() bool {
	if o != nil && !IsNil(o.FabricInterconnect) {
		return true
	}

	return false
}

// SetFabricInterconnect gets a reference to the given bool and assigns it to the FabricInterconnect field.
func (o *ConfigPutRequestGatewayGatewayName) SetFabricInterconnect(v bool) {
	o.FabricInterconnect = &v
}

// GetKeepaliveTimer returns the KeepaliveTimer field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayName) GetKeepaliveTimer() int32 {
	if o == nil || IsNil(o.KeepaliveTimer) {
		var ret int32
		return ret
	}
	return *o.KeepaliveTimer
}

// GetKeepaliveTimerOk returns a tuple with the KeepaliveTimer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayName) GetKeepaliveTimerOk() (*int32, bool) {
	if o == nil || IsNil(o.KeepaliveTimer) {
		return nil, false
	}
	return o.KeepaliveTimer, true
}

// HasKeepaliveTimer returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasKeepaliveTimer() bool {
	if o != nil && !IsNil(o.KeepaliveTimer) {
		return true
	}

	return false
}

// SetKeepaliveTimer gets a reference to the given int32 and assigns it to the KeepaliveTimer field.
func (o *ConfigPutRequestGatewayGatewayName) SetKeepaliveTimer(v int32) {
	o.KeepaliveTimer = &v
}

// GetHoldTimer returns the HoldTimer field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayName) GetHoldTimer() int32 {
	if o == nil || IsNil(o.HoldTimer) {
		var ret int32
		return ret
	}
	return *o.HoldTimer
}

// GetHoldTimerOk returns a tuple with the HoldTimer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayName) GetHoldTimerOk() (*int32, bool) {
	if o == nil || IsNil(o.HoldTimer) {
		return nil, false
	}
	return o.HoldTimer, true
}

// HasHoldTimer returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasHoldTimer() bool {
	if o != nil && !IsNil(o.HoldTimer) {
		return true
	}

	return false
}

// SetHoldTimer gets a reference to the given int32 and assigns it to the HoldTimer field.
func (o *ConfigPutRequestGatewayGatewayName) SetHoldTimer(v int32) {
	o.HoldTimer = &v
}

// GetConnectTimer returns the ConnectTimer field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayName) GetConnectTimer() int32 {
	if o == nil || IsNil(o.ConnectTimer) {
		var ret int32
		return ret
	}
	return *o.ConnectTimer
}

// GetConnectTimerOk returns a tuple with the ConnectTimer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayName) GetConnectTimerOk() (*int32, bool) {
	if o == nil || IsNil(o.ConnectTimer) {
		return nil, false
	}
	return o.ConnectTimer, true
}

// HasConnectTimer returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasConnectTimer() bool {
	if o != nil && !IsNil(o.ConnectTimer) {
		return true
	}

	return false
}

// SetConnectTimer gets a reference to the given int32 and assigns it to the ConnectTimer field.
func (o *ConfigPutRequestGatewayGatewayName) SetConnectTimer(v int32) {
	o.ConnectTimer = &v
}

// GetAdvertisementInterval returns the AdvertisementInterval field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayName) GetAdvertisementInterval() int32 {
	if o == nil || IsNil(o.AdvertisementInterval) {
		var ret int32
		return ret
	}
	return *o.AdvertisementInterval
}

// GetAdvertisementIntervalOk returns a tuple with the AdvertisementInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayName) GetAdvertisementIntervalOk() (*int32, bool) {
	if o == nil || IsNil(o.AdvertisementInterval) {
		return nil, false
	}
	return o.AdvertisementInterval, true
}

// HasAdvertisementInterval returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasAdvertisementInterval() bool {
	if o != nil && !IsNil(o.AdvertisementInterval) {
		return true
	}

	return false
}

// SetAdvertisementInterval gets a reference to the given int32 and assigns it to the AdvertisementInterval field.
func (o *ConfigPutRequestGatewayGatewayName) SetAdvertisementInterval(v int32) {
	o.AdvertisementInterval = &v
}

// GetEbgpMultihop returns the EbgpMultihop field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayName) GetEbgpMultihop() int32 {
	if o == nil || IsNil(o.EbgpMultihop) {
		var ret int32
		return ret
	}
	return *o.EbgpMultihop
}

// GetEbgpMultihopOk returns a tuple with the EbgpMultihop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayName) GetEbgpMultihopOk() (*int32, bool) {
	if o == nil || IsNil(o.EbgpMultihop) {
		return nil, false
	}
	return o.EbgpMultihop, true
}

// HasEbgpMultihop returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasEbgpMultihop() bool {
	if o != nil && !IsNil(o.EbgpMultihop) {
		return true
	}

	return false
}

// SetEbgpMultihop gets a reference to the given int32 and assigns it to the EbgpMultihop field.
func (o *ConfigPutRequestGatewayGatewayName) SetEbgpMultihop(v int32) {
	o.EbgpMultihop = &v
}

// GetEgressVlan returns the EgressVlan field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigPutRequestGatewayGatewayName) GetEgressVlan() int32 {
	if o == nil || IsNil(o.EgressVlan.Get()) {
		var ret int32
		return ret
	}
	return *o.EgressVlan.Get()
}

// GetEgressVlanOk returns a tuple with the EgressVlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigPutRequestGatewayGatewayName) GetEgressVlanOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.EgressVlan.Get(), o.EgressVlan.IsSet()
}

// HasEgressVlan returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasEgressVlan() bool {
	if o != nil && o.EgressVlan.IsSet() {
		return true
	}

	return false
}

// SetEgressVlan gets a reference to the given NullableInt32 and assigns it to the EgressVlan field.
func (o *ConfigPutRequestGatewayGatewayName) SetEgressVlan(v int32) {
	o.EgressVlan.Set(&v)
}
// SetEgressVlanNil sets the value for EgressVlan to be an explicit nil
func (o *ConfigPutRequestGatewayGatewayName) SetEgressVlanNil() {
	o.EgressVlan.Set(nil)
}

// UnsetEgressVlan ensures that no value is present for EgressVlan, not even an explicit nil
func (o *ConfigPutRequestGatewayGatewayName) UnsetEgressVlan() {
	o.EgressVlan.Unset()
}

// GetSourceIpAddress returns the SourceIpAddress field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayName) GetSourceIpAddress() string {
	if o == nil || IsNil(o.SourceIpAddress) {
		var ret string
		return ret
	}
	return *o.SourceIpAddress
}

// GetSourceIpAddressOk returns a tuple with the SourceIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayName) GetSourceIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.SourceIpAddress) {
		return nil, false
	}
	return o.SourceIpAddress, true
}

// HasSourceIpAddress returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasSourceIpAddress() bool {
	if o != nil && !IsNil(o.SourceIpAddress) {
		return true
	}

	return false
}

// SetSourceIpAddress gets a reference to the given string and assigns it to the SourceIpAddress field.
func (o *ConfigPutRequestGatewayGatewayName) SetSourceIpAddress(v string) {
	o.SourceIpAddress = &v
}

// GetAnycastIpMask returns the AnycastIpMask field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayName) GetAnycastIpMask() string {
	if o == nil || IsNil(o.AnycastIpMask) {
		var ret string
		return ret
	}
	return *o.AnycastIpMask
}

// GetAnycastIpMaskOk returns a tuple with the AnycastIpMask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayName) GetAnycastIpMaskOk() (*string, bool) {
	if o == nil || IsNil(o.AnycastIpMask) {
		return nil, false
	}
	return o.AnycastIpMask, true
}

// HasAnycastIpMask returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasAnycastIpMask() bool {
	if o != nil && !IsNil(o.AnycastIpMask) {
		return true
	}

	return false
}

// SetAnycastIpMask gets a reference to the given string and assigns it to the AnycastIpMask field.
func (o *ConfigPutRequestGatewayGatewayName) SetAnycastIpMask(v string) {
	o.AnycastIpMask = &v
}

// GetMd5Password returns the Md5Password field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayName) GetMd5Password() string {
	if o == nil || IsNil(o.Md5Password) {
		var ret string
		return ret
	}
	return *o.Md5Password
}

// GetMd5PasswordOk returns a tuple with the Md5Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayName) GetMd5PasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Md5Password) {
		return nil, false
	}
	return o.Md5Password, true
}

// HasMd5Password returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasMd5Password() bool {
	if o != nil && !IsNil(o.Md5Password) {
		return true
	}

	return false
}

// SetMd5Password gets a reference to the given string and assigns it to the Md5Password field.
func (o *ConfigPutRequestGatewayGatewayName) SetMd5Password(v string) {
	o.Md5Password = &v
}

// GetImportRouteMap returns the ImportRouteMap field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayName) GetImportRouteMap() string {
	if o == nil || IsNil(o.ImportRouteMap) {
		var ret string
		return ret
	}
	return *o.ImportRouteMap
}

// GetImportRouteMapOk returns a tuple with the ImportRouteMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayName) GetImportRouteMapOk() (*string, bool) {
	if o == nil || IsNil(o.ImportRouteMap) {
		return nil, false
	}
	return o.ImportRouteMap, true
}

// HasImportRouteMap returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasImportRouteMap() bool {
	if o != nil && !IsNil(o.ImportRouteMap) {
		return true
	}

	return false
}

// SetImportRouteMap gets a reference to the given string and assigns it to the ImportRouteMap field.
func (o *ConfigPutRequestGatewayGatewayName) SetImportRouteMap(v string) {
	o.ImportRouteMap = &v
}

// GetImportRouteMapRefType returns the ImportRouteMapRefType field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayName) GetImportRouteMapRefType() string {
	if o == nil || IsNil(o.ImportRouteMapRefType) {
		var ret string
		return ret
	}
	return *o.ImportRouteMapRefType
}

// GetImportRouteMapRefTypeOk returns a tuple with the ImportRouteMapRefType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayName) GetImportRouteMapRefTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ImportRouteMapRefType) {
		return nil, false
	}
	return o.ImportRouteMapRefType, true
}

// HasImportRouteMapRefType returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasImportRouteMapRefType() bool {
	if o != nil && !IsNil(o.ImportRouteMapRefType) {
		return true
	}

	return false
}

// SetImportRouteMapRefType gets a reference to the given string and assigns it to the ImportRouteMapRefType field.
func (o *ConfigPutRequestGatewayGatewayName) SetImportRouteMapRefType(v string) {
	o.ImportRouteMapRefType = &v
}

// GetExportRouteMap returns the ExportRouteMap field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayName) GetExportRouteMap() string {
	if o == nil || IsNil(o.ExportRouteMap) {
		var ret string
		return ret
	}
	return *o.ExportRouteMap
}

// GetExportRouteMapOk returns a tuple with the ExportRouteMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayName) GetExportRouteMapOk() (*string, bool) {
	if o == nil || IsNil(o.ExportRouteMap) {
		return nil, false
	}
	return o.ExportRouteMap, true
}

// HasExportRouteMap returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasExportRouteMap() bool {
	if o != nil && !IsNil(o.ExportRouteMap) {
		return true
	}

	return false
}

// SetExportRouteMap gets a reference to the given string and assigns it to the ExportRouteMap field.
func (o *ConfigPutRequestGatewayGatewayName) SetExportRouteMap(v string) {
	o.ExportRouteMap = &v
}

// GetExportRouteMapRefType returns the ExportRouteMapRefType field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayName) GetExportRouteMapRefType() string {
	if o == nil || IsNil(o.ExportRouteMapRefType) {
		var ret string
		return ret
	}
	return *o.ExportRouteMapRefType
}

// GetExportRouteMapRefTypeOk returns a tuple with the ExportRouteMapRefType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayName) GetExportRouteMapRefTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ExportRouteMapRefType) {
		return nil, false
	}
	return o.ExportRouteMapRefType, true
}

// HasExportRouteMapRefType returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasExportRouteMapRefType() bool {
	if o != nil && !IsNil(o.ExportRouteMapRefType) {
		return true
	}

	return false
}

// SetExportRouteMapRefType gets a reference to the given string and assigns it to the ExportRouteMapRefType field.
func (o *ConfigPutRequestGatewayGatewayName) SetExportRouteMapRefType(v string) {
	o.ExportRouteMapRefType = &v
}

// GetGatewayMode returns the GatewayMode field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayName) GetGatewayMode() string {
	if o == nil || IsNil(o.GatewayMode) {
		var ret string
		return ret
	}
	return *o.GatewayMode
}

// GetGatewayModeOk returns a tuple with the GatewayMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayName) GetGatewayModeOk() (*string, bool) {
	if o == nil || IsNil(o.GatewayMode) {
		return nil, false
	}
	return o.GatewayMode, true
}

// HasGatewayMode returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasGatewayMode() bool {
	if o != nil && !IsNil(o.GatewayMode) {
		return true
	}

	return false
}

// SetGatewayMode gets a reference to the given string and assigns it to the GatewayMode field.
func (o *ConfigPutRequestGatewayGatewayName) SetGatewayMode(v string) {
	o.GatewayMode = &v
}

// GetLocalAsNumber returns the LocalAsNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigPutRequestGatewayGatewayName) GetLocalAsNumber() int32 {
	if o == nil || IsNil(o.LocalAsNumber.Get()) {
		var ret int32
		return ret
	}
	return *o.LocalAsNumber.Get()
}

// GetLocalAsNumberOk returns a tuple with the LocalAsNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigPutRequestGatewayGatewayName) GetLocalAsNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocalAsNumber.Get(), o.LocalAsNumber.IsSet()
}

// HasLocalAsNumber returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasLocalAsNumber() bool {
	if o != nil && o.LocalAsNumber.IsSet() {
		return true
	}

	return false
}

// SetLocalAsNumber gets a reference to the given NullableInt32 and assigns it to the LocalAsNumber field.
func (o *ConfigPutRequestGatewayGatewayName) SetLocalAsNumber(v int32) {
	o.LocalAsNumber.Set(&v)
}
// SetLocalAsNumberNil sets the value for LocalAsNumber to be an explicit nil
func (o *ConfigPutRequestGatewayGatewayName) SetLocalAsNumberNil() {
	o.LocalAsNumber.Set(nil)
}

// UnsetLocalAsNumber ensures that no value is present for LocalAsNumber, not even an explicit nil
func (o *ConfigPutRequestGatewayGatewayName) UnsetLocalAsNumber() {
	o.LocalAsNumber.Unset()
}

// GetLocalAsNoPrepend returns the LocalAsNoPrepend field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayName) GetLocalAsNoPrepend() bool {
	if o == nil || IsNil(o.LocalAsNoPrepend) {
		var ret bool
		return ret
	}
	return *o.LocalAsNoPrepend
}

// GetLocalAsNoPrependOk returns a tuple with the LocalAsNoPrepend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayName) GetLocalAsNoPrependOk() (*bool, bool) {
	if o == nil || IsNil(o.LocalAsNoPrepend) {
		return nil, false
	}
	return o.LocalAsNoPrepend, true
}

// HasLocalAsNoPrepend returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasLocalAsNoPrepend() bool {
	if o != nil && !IsNil(o.LocalAsNoPrepend) {
		return true
	}

	return false
}

// SetLocalAsNoPrepend gets a reference to the given bool and assigns it to the LocalAsNoPrepend field.
func (o *ConfigPutRequestGatewayGatewayName) SetLocalAsNoPrepend(v bool) {
	o.LocalAsNoPrepend = &v
}

// GetReplaceAs returns the ReplaceAs field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayName) GetReplaceAs() bool {
	if o == nil || IsNil(o.ReplaceAs) {
		var ret bool
		return ret
	}
	return *o.ReplaceAs
}

// GetReplaceAsOk returns a tuple with the ReplaceAs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayName) GetReplaceAsOk() (*bool, bool) {
	if o == nil || IsNil(o.ReplaceAs) {
		return nil, false
	}
	return o.ReplaceAs, true
}

// HasReplaceAs returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasReplaceAs() bool {
	if o != nil && !IsNil(o.ReplaceAs) {
		return true
	}

	return false
}

// SetReplaceAs gets a reference to the given bool and assigns it to the ReplaceAs field.
func (o *ConfigPutRequestGatewayGatewayName) SetReplaceAs(v bool) {
	o.ReplaceAs = &v
}

// GetMaxLocalAsOccurrences returns the MaxLocalAsOccurrences field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigPutRequestGatewayGatewayName) GetMaxLocalAsOccurrences() int32 {
	if o == nil || IsNil(o.MaxLocalAsOccurrences.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxLocalAsOccurrences.Get()
}

// GetMaxLocalAsOccurrencesOk returns a tuple with the MaxLocalAsOccurrences field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigPutRequestGatewayGatewayName) GetMaxLocalAsOccurrencesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxLocalAsOccurrences.Get(), o.MaxLocalAsOccurrences.IsSet()
}

// HasMaxLocalAsOccurrences returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasMaxLocalAsOccurrences() bool {
	if o != nil && o.MaxLocalAsOccurrences.IsSet() {
		return true
	}

	return false
}

// SetMaxLocalAsOccurrences gets a reference to the given NullableInt32 and assigns it to the MaxLocalAsOccurrences field.
func (o *ConfigPutRequestGatewayGatewayName) SetMaxLocalAsOccurrences(v int32) {
	o.MaxLocalAsOccurrences.Set(&v)
}
// SetMaxLocalAsOccurrencesNil sets the value for MaxLocalAsOccurrences to be an explicit nil
func (o *ConfigPutRequestGatewayGatewayName) SetMaxLocalAsOccurrencesNil() {
	o.MaxLocalAsOccurrences.Set(nil)
}

// UnsetMaxLocalAsOccurrences ensures that no value is present for MaxLocalAsOccurrences, not even an explicit nil
func (o *ConfigPutRequestGatewayGatewayName) UnsetMaxLocalAsOccurrences() {
	o.MaxLocalAsOccurrences.Unset()
}

// GetDynamicBgpSubnet returns the DynamicBgpSubnet field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayName) GetDynamicBgpSubnet() string {
	if o == nil || IsNil(o.DynamicBgpSubnet) {
		var ret string
		return ret
	}
	return *o.DynamicBgpSubnet
}

// GetDynamicBgpSubnetOk returns a tuple with the DynamicBgpSubnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayName) GetDynamicBgpSubnetOk() (*string, bool) {
	if o == nil || IsNil(o.DynamicBgpSubnet) {
		return nil, false
	}
	return o.DynamicBgpSubnet, true
}

// HasDynamicBgpSubnet returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasDynamicBgpSubnet() bool {
	if o != nil && !IsNil(o.DynamicBgpSubnet) {
		return true
	}

	return false
}

// SetDynamicBgpSubnet gets a reference to the given string and assigns it to the DynamicBgpSubnet field.
func (o *ConfigPutRequestGatewayGatewayName) SetDynamicBgpSubnet(v string) {
	o.DynamicBgpSubnet = &v
}

// GetDynamicBgpLimits returns the DynamicBgpLimits field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigPutRequestGatewayGatewayName) GetDynamicBgpLimits() int32 {
	if o == nil || IsNil(o.DynamicBgpLimits.Get()) {
		var ret int32
		return ret
	}
	return *o.DynamicBgpLimits.Get()
}

// GetDynamicBgpLimitsOk returns a tuple with the DynamicBgpLimits field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigPutRequestGatewayGatewayName) GetDynamicBgpLimitsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DynamicBgpLimits.Get(), o.DynamicBgpLimits.IsSet()
}

// HasDynamicBgpLimits returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasDynamicBgpLimits() bool {
	if o != nil && o.DynamicBgpLimits.IsSet() {
		return true
	}

	return false
}

// SetDynamicBgpLimits gets a reference to the given NullableInt32 and assigns it to the DynamicBgpLimits field.
func (o *ConfigPutRequestGatewayGatewayName) SetDynamicBgpLimits(v int32) {
	o.DynamicBgpLimits.Set(&v)
}
// SetDynamicBgpLimitsNil sets the value for DynamicBgpLimits to be an explicit nil
func (o *ConfigPutRequestGatewayGatewayName) SetDynamicBgpLimitsNil() {
	o.DynamicBgpLimits.Set(nil)
}

// UnsetDynamicBgpLimits ensures that no value is present for DynamicBgpLimits, not even an explicit nil
func (o *ConfigPutRequestGatewayGatewayName) UnsetDynamicBgpLimits() {
	o.DynamicBgpLimits.Unset()
}

// GetHelperHopIpAddress returns the HelperHopIpAddress field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayName) GetHelperHopIpAddress() string {
	if o == nil || IsNil(o.HelperHopIpAddress) {
		var ret string
		return ret
	}
	return *o.HelperHopIpAddress
}

// GetHelperHopIpAddressOk returns a tuple with the HelperHopIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayName) GetHelperHopIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.HelperHopIpAddress) {
		return nil, false
	}
	return o.HelperHopIpAddress, true
}

// HasHelperHopIpAddress returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasHelperHopIpAddress() bool {
	if o != nil && !IsNil(o.HelperHopIpAddress) {
		return true
	}

	return false
}

// SetHelperHopIpAddress gets a reference to the given string and assigns it to the HelperHopIpAddress field.
func (o *ConfigPutRequestGatewayGatewayName) SetHelperHopIpAddress(v string) {
	o.HelperHopIpAddress = &v
}

// GetEnableBfd returns the EnableBfd field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayName) GetEnableBfd() bool {
	if o == nil || IsNil(o.EnableBfd) {
		var ret bool
		return ret
	}
	return *o.EnableBfd
}

// GetEnableBfdOk returns a tuple with the EnableBfd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayName) GetEnableBfdOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableBfd) {
		return nil, false
	}
	return o.EnableBfd, true
}

// HasEnableBfd returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasEnableBfd() bool {
	if o != nil && !IsNil(o.EnableBfd) {
		return true
	}

	return false
}

// SetEnableBfd gets a reference to the given bool and assigns it to the EnableBfd field.
func (o *ConfigPutRequestGatewayGatewayName) SetEnableBfd(v bool) {
	o.EnableBfd = &v
}

// GetBfdReceiveInterval returns the BfdReceiveInterval field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigPutRequestGatewayGatewayName) GetBfdReceiveInterval() int32 {
	if o == nil || IsNil(o.BfdReceiveInterval.Get()) {
		var ret int32
		return ret
	}
	return *o.BfdReceiveInterval.Get()
}

// GetBfdReceiveIntervalOk returns a tuple with the BfdReceiveInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigPutRequestGatewayGatewayName) GetBfdReceiveIntervalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.BfdReceiveInterval.Get(), o.BfdReceiveInterval.IsSet()
}

// HasBfdReceiveInterval returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasBfdReceiveInterval() bool {
	if o != nil && o.BfdReceiveInterval.IsSet() {
		return true
	}

	return false
}

// SetBfdReceiveInterval gets a reference to the given NullableInt32 and assigns it to the BfdReceiveInterval field.
func (o *ConfigPutRequestGatewayGatewayName) SetBfdReceiveInterval(v int32) {
	o.BfdReceiveInterval.Set(&v)
}
// SetBfdReceiveIntervalNil sets the value for BfdReceiveInterval to be an explicit nil
func (o *ConfigPutRequestGatewayGatewayName) SetBfdReceiveIntervalNil() {
	o.BfdReceiveInterval.Set(nil)
}

// UnsetBfdReceiveInterval ensures that no value is present for BfdReceiveInterval, not even an explicit nil
func (o *ConfigPutRequestGatewayGatewayName) UnsetBfdReceiveInterval() {
	o.BfdReceiveInterval.Unset()
}

// GetBfdTransmissionInterval returns the BfdTransmissionInterval field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigPutRequestGatewayGatewayName) GetBfdTransmissionInterval() int32 {
	if o == nil || IsNil(o.BfdTransmissionInterval.Get()) {
		var ret int32
		return ret
	}
	return *o.BfdTransmissionInterval.Get()
}

// GetBfdTransmissionIntervalOk returns a tuple with the BfdTransmissionInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigPutRequestGatewayGatewayName) GetBfdTransmissionIntervalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.BfdTransmissionInterval.Get(), o.BfdTransmissionInterval.IsSet()
}

// HasBfdTransmissionInterval returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasBfdTransmissionInterval() bool {
	if o != nil && o.BfdTransmissionInterval.IsSet() {
		return true
	}

	return false
}

// SetBfdTransmissionInterval gets a reference to the given NullableInt32 and assigns it to the BfdTransmissionInterval field.
func (o *ConfigPutRequestGatewayGatewayName) SetBfdTransmissionInterval(v int32) {
	o.BfdTransmissionInterval.Set(&v)
}
// SetBfdTransmissionIntervalNil sets the value for BfdTransmissionInterval to be an explicit nil
func (o *ConfigPutRequestGatewayGatewayName) SetBfdTransmissionIntervalNil() {
	o.BfdTransmissionInterval.Set(nil)
}

// UnsetBfdTransmissionInterval ensures that no value is present for BfdTransmissionInterval, not even an explicit nil
func (o *ConfigPutRequestGatewayGatewayName) UnsetBfdTransmissionInterval() {
	o.BfdTransmissionInterval.Unset()
}

// GetBfdDetectMultiplier returns the BfdDetectMultiplier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigPutRequestGatewayGatewayName) GetBfdDetectMultiplier() int32 {
	if o == nil || IsNil(o.BfdDetectMultiplier.Get()) {
		var ret int32
		return ret
	}
	return *o.BfdDetectMultiplier.Get()
}

// GetBfdDetectMultiplierOk returns a tuple with the BfdDetectMultiplier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigPutRequestGatewayGatewayName) GetBfdDetectMultiplierOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.BfdDetectMultiplier.Get(), o.BfdDetectMultiplier.IsSet()
}

// HasBfdDetectMultiplier returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasBfdDetectMultiplier() bool {
	if o != nil && o.BfdDetectMultiplier.IsSet() {
		return true
	}

	return false
}

// SetBfdDetectMultiplier gets a reference to the given NullableInt32 and assigns it to the BfdDetectMultiplier field.
func (o *ConfigPutRequestGatewayGatewayName) SetBfdDetectMultiplier(v int32) {
	o.BfdDetectMultiplier.Set(&v)
}
// SetBfdDetectMultiplierNil sets the value for BfdDetectMultiplier to be an explicit nil
func (o *ConfigPutRequestGatewayGatewayName) SetBfdDetectMultiplierNil() {
	o.BfdDetectMultiplier.Set(nil)
}

// UnsetBfdDetectMultiplier ensures that no value is present for BfdDetectMultiplier, not even an explicit nil
func (o *ConfigPutRequestGatewayGatewayName) UnsetBfdDetectMultiplier() {
	o.BfdDetectMultiplier.Unset()
}

// GetNextHopSelf returns the NextHopSelf field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayName) GetNextHopSelf() bool {
	if o == nil || IsNil(o.NextHopSelf) {
		var ret bool
		return ret
	}
	return *o.NextHopSelf
}

// GetNextHopSelfOk returns a tuple with the NextHopSelf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayName) GetNextHopSelfOk() (*bool, bool) {
	if o == nil || IsNil(o.NextHopSelf) {
		return nil, false
	}
	return o.NextHopSelf, true
}

// HasNextHopSelf returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasNextHopSelf() bool {
	if o != nil && !IsNil(o.NextHopSelf) {
		return true
	}

	return false
}

// SetNextHopSelf gets a reference to the given bool and assigns it to the NextHopSelf field.
func (o *ConfigPutRequestGatewayGatewayName) SetNextHopSelf(v bool) {
	o.NextHopSelf = &v
}

// GetStaticRoutes returns the StaticRoutes field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayName) GetStaticRoutes() []ConfigPutRequestGatewayGatewayNameStaticRoutesInner {
	if o == nil || IsNil(o.StaticRoutes) {
		var ret []ConfigPutRequestGatewayGatewayNameStaticRoutesInner
		return ret
	}
	return o.StaticRoutes
}

// GetStaticRoutesOk returns a tuple with the StaticRoutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayName) GetStaticRoutesOk() ([]ConfigPutRequestGatewayGatewayNameStaticRoutesInner, bool) {
	if o == nil || IsNil(o.StaticRoutes) {
		return nil, false
	}
	return o.StaticRoutes, true
}

// HasStaticRoutes returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasStaticRoutes() bool {
	if o != nil && !IsNil(o.StaticRoutes) {
		return true
	}

	return false
}

// SetStaticRoutes gets a reference to the given []ConfigPutRequestGatewayGatewayNameStaticRoutesInner and assigns it to the StaticRoutes field.
func (o *ConfigPutRequestGatewayGatewayName) SetStaticRoutes(v []ConfigPutRequestGatewayGatewayNameStaticRoutesInner) {
	o.StaticRoutes = v
}

// GetObjectProperties returns the ObjectProperties field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayName) GetObjectProperties() ConfigPutRequestEthDeviceProfilesEthDeviceProfilesNameObjectProperties {
	if o == nil || IsNil(o.ObjectProperties) {
		var ret ConfigPutRequestEthDeviceProfilesEthDeviceProfilesNameObjectProperties
		return ret
	}
	return *o.ObjectProperties
}

// GetObjectPropertiesOk returns a tuple with the ObjectProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayName) GetObjectPropertiesOk() (*ConfigPutRequestEthDeviceProfilesEthDeviceProfilesNameObjectProperties, bool) {
	if o == nil || IsNil(o.ObjectProperties) {
		return nil, false
	}
	return o.ObjectProperties, true
}

// HasObjectProperties returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasObjectProperties() bool {
	if o != nil && !IsNil(o.ObjectProperties) {
		return true
	}

	return false
}

// SetObjectProperties gets a reference to the given ConfigPutRequestEthDeviceProfilesEthDeviceProfilesNameObjectProperties and assigns it to the ObjectProperties field.
func (o *ConfigPutRequestGatewayGatewayName) SetObjectProperties(v ConfigPutRequestEthDeviceProfilesEthDeviceProfilesNameObjectProperties) {
	o.ObjectProperties = &v
}

// GetDefaultOriginate returns the DefaultOriginate field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayName) GetDefaultOriginate() bool {
	if o == nil || IsNil(o.DefaultOriginate) {
		var ret bool
		return ret
	}
	return *o.DefaultOriginate
}

// GetDefaultOriginateOk returns a tuple with the DefaultOriginate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayName) GetDefaultOriginateOk() (*bool, bool) {
	if o == nil || IsNil(o.DefaultOriginate) {
		return nil, false
	}
	return o.DefaultOriginate, true
}

// HasDefaultOriginate returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasDefaultOriginate() bool {
	if o != nil && !IsNil(o.DefaultOriginate) {
		return true
	}

	return false
}

// SetDefaultOriginate gets a reference to the given bool and assigns it to the DefaultOriginate field.
func (o *ConfigPutRequestGatewayGatewayName) SetDefaultOriginate(v bool) {
	o.DefaultOriginate = &v
}

// GetBfdMultihop returns the BfdMultihop field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayGatewayName) GetBfdMultihop() bool {
	if o == nil || IsNil(o.BfdMultihop) {
		var ret bool
		return ret
	}
	return *o.BfdMultihop
}

// GetBfdMultihopOk returns a tuple with the BfdMultihop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayGatewayName) GetBfdMultihopOk() (*bool, bool) {
	if o == nil || IsNil(o.BfdMultihop) {
		return nil, false
	}
	return o.BfdMultihop, true
}

// HasBfdMultihop returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayGatewayName) HasBfdMultihop() bool {
	if o != nil && !IsNil(o.BfdMultihop) {
		return true
	}

	return false
}

// SetBfdMultihop gets a reference to the given bool and assigns it to the BfdMultihop field.
func (o *ConfigPutRequestGatewayGatewayName) SetBfdMultihop(v bool) {
	o.BfdMultihop = &v
}

func (o ConfigPutRequestGatewayGatewayName) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigPutRequestGatewayGatewayName) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.Tenant) {
		toSerialize["tenant"] = o.Tenant
	}
	if !IsNil(o.TenantRefType) {
		toSerialize["tenant_ref_type_"] = o.TenantRefType
	}
	if !IsNil(o.NeighborIpAddress) {
		toSerialize["neighbor_ip_address"] = o.NeighborIpAddress
	}
	if o.NeighborAsNumber.IsSet() {
		toSerialize["neighbor_as_number"] = o.NeighborAsNumber.Get()
	}
	if !IsNil(o.FabricInterconnect) {
		toSerialize["fabric_interconnect"] = o.FabricInterconnect
	}
	if !IsNil(o.KeepaliveTimer) {
		toSerialize["keepalive_timer"] = o.KeepaliveTimer
	}
	if !IsNil(o.HoldTimer) {
		toSerialize["hold_timer"] = o.HoldTimer
	}
	if !IsNil(o.ConnectTimer) {
		toSerialize["connect_timer"] = o.ConnectTimer
	}
	if !IsNil(o.AdvertisementInterval) {
		toSerialize["advertisement_interval"] = o.AdvertisementInterval
	}
	if !IsNil(o.EbgpMultihop) {
		toSerialize["ebgp_multihop"] = o.EbgpMultihop
	}
	if o.EgressVlan.IsSet() {
		toSerialize["egress_vlan"] = o.EgressVlan.Get()
	}
	if !IsNil(o.SourceIpAddress) {
		toSerialize["source_ip_address"] = o.SourceIpAddress
	}
	if !IsNil(o.AnycastIpMask) {
		toSerialize["anycast_ip_mask"] = o.AnycastIpMask
	}
	if !IsNil(o.Md5Password) {
		toSerialize["md5_password"] = o.Md5Password
	}
	if !IsNil(o.ImportRouteMap) {
		toSerialize["import_route_map"] = o.ImportRouteMap
	}
	if !IsNil(o.ImportRouteMapRefType) {
		toSerialize["import_route_map_ref_type_"] = o.ImportRouteMapRefType
	}
	if !IsNil(o.ExportRouteMap) {
		toSerialize["export_route_map"] = o.ExportRouteMap
	}
	if !IsNil(o.ExportRouteMapRefType) {
		toSerialize["export_route_map_ref_type_"] = o.ExportRouteMapRefType
	}
	if !IsNil(o.GatewayMode) {
		toSerialize["gateway_mode"] = o.GatewayMode
	}
	if o.LocalAsNumber.IsSet() {
		toSerialize["local_as_number"] = o.LocalAsNumber.Get()
	}
	if !IsNil(o.LocalAsNoPrepend) {
		toSerialize["local_as_no_prepend"] = o.LocalAsNoPrepend
	}
	if !IsNil(o.ReplaceAs) {
		toSerialize["replace_as"] = o.ReplaceAs
	}
	if o.MaxLocalAsOccurrences.IsSet() {
		toSerialize["max_local_as_occurrences"] = o.MaxLocalAsOccurrences.Get()
	}
	if !IsNil(o.DynamicBgpSubnet) {
		toSerialize["dynamic_bgp_subnet"] = o.DynamicBgpSubnet
	}
	if o.DynamicBgpLimits.IsSet() {
		toSerialize["dynamic_bgp_limits"] = o.DynamicBgpLimits.Get()
	}
	if !IsNil(o.HelperHopIpAddress) {
		toSerialize["helper_hop_ip_address"] = o.HelperHopIpAddress
	}
	if !IsNil(o.EnableBfd) {
		toSerialize["enable_bfd"] = o.EnableBfd
	}
	if o.BfdReceiveInterval.IsSet() {
		toSerialize["bfd_receive_interval"] = o.BfdReceiveInterval.Get()
	}
	if o.BfdTransmissionInterval.IsSet() {
		toSerialize["bfd_transmission_interval"] = o.BfdTransmissionInterval.Get()
	}
	if o.BfdDetectMultiplier.IsSet() {
		toSerialize["bfd_detect_multiplier"] = o.BfdDetectMultiplier.Get()
	}
	if !IsNil(o.NextHopSelf) {
		toSerialize["next_hop_self"] = o.NextHopSelf
	}
	if !IsNil(o.StaticRoutes) {
		toSerialize["static_routes"] = o.StaticRoutes
	}
	if !IsNil(o.ObjectProperties) {
		toSerialize["object_properties"] = o.ObjectProperties
	}
	if !IsNil(o.DefaultOriginate) {
		toSerialize["default_originate"] = o.DefaultOriginate
	}
	if !IsNil(o.BfdMultihop) {
		toSerialize["bfd_multihop"] = o.BfdMultihop
	}
	return toSerialize, nil
}

type NullableConfigPutRequestGatewayGatewayName struct {
	value *ConfigPutRequestGatewayGatewayName
	isSet bool
}

func (v NullableConfigPutRequestGatewayGatewayName) Get() *ConfigPutRequestGatewayGatewayName {
	return v.value
}

func (v *NullableConfigPutRequestGatewayGatewayName) Set(val *ConfigPutRequestGatewayGatewayName) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigPutRequestGatewayGatewayName) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigPutRequestGatewayGatewayName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigPutRequestGatewayGatewayName(val *ConfigPutRequestGatewayGatewayName) *NullableConfigPutRequestGatewayGatewayName {
	return &NullableConfigPutRequestGatewayGatewayName{value: val, isSet: true}
}

func (v NullableConfigPutRequestGatewayGatewayName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigPutRequestGatewayGatewayName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


