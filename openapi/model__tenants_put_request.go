/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TenantsPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TenantsPutRequest{}

// TenantsPutRequest struct for TenantsPutRequest
type TenantsPutRequest struct {
	Tenant *map[string]TenantsPutRequestTenantValue `json:"tenant,omitempty"`
}

// NewTenantsPutRequest instantiates a new TenantsPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenantsPutRequest() *TenantsPutRequest {
	this := TenantsPutRequest{}
	return &this
}

// NewTenantsPutRequestWithDefaults instantiates a new TenantsPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenantsPutRequestWithDefaults() *TenantsPutRequest {
	this := TenantsPutRequest{}
	return &this
}

// GetTenant returns the Tenant field value if set, zero value otherwise.
func (o *TenantsPutRequest) GetTenant() map[string]TenantsPutRequestTenantValue {
	if o == nil || IsNil(o.Tenant) {
		var ret map[string]TenantsPutRequestTenantValue
		return ret
	}
	return *o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantsPutRequest) GetTenantOk() (*map[string]TenantsPutRequestTenantValue, bool) {
	if o == nil || IsNil(o.Tenant) {
		return nil, false
	}
	return o.Tenant, true
}

// HasTenant returns a boolean if a field has been set.
func (o *TenantsPutRequest) HasTenant() bool {
	if o != nil && !IsNil(o.Tenant) {
		return true
	}

	return false
}

// SetTenant gets a reference to the given map[string]TenantsPutRequestTenantValue and assigns it to the Tenant field.
func (o *TenantsPutRequest) SetTenant(v map[string]TenantsPutRequestTenantValue) {
	o.Tenant = &v
}

func (o TenantsPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TenantsPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tenant) {
		toSerialize["tenant"] = o.Tenant
	}
	return toSerialize, nil
}

type NullableTenantsPutRequest struct {
	value *TenantsPutRequest
	isSet bool
}

func (v NullableTenantsPutRequest) Get() *TenantsPutRequest {
	return v.value
}

func (v *NullableTenantsPutRequest) Set(val *TenantsPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantsPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantsPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantsPutRequest(val *TenantsPutRequest) *NullableTenantsPutRequest {
	return &NullableTenantsPutRequest{value: val, isSet: true}
}

func (v NullableTenantsPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantsPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


