/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DiagnosticsprofilesPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DiagnosticsprofilesPutRequest{}

// DiagnosticsprofilesPutRequest struct for DiagnosticsprofilesPutRequest
type DiagnosticsprofilesPutRequest struct {
	DiagnosticsProfile *map[string]DiagnosticsprofilesPutRequestDiagnosticsProfileValue `json:"diagnostics_profile,omitempty"`
}

// NewDiagnosticsprofilesPutRequest instantiates a new DiagnosticsprofilesPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiagnosticsprofilesPutRequest() *DiagnosticsprofilesPutRequest {
	this := DiagnosticsprofilesPutRequest{}
	return &this
}

// NewDiagnosticsprofilesPutRequestWithDefaults instantiates a new DiagnosticsprofilesPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiagnosticsprofilesPutRequestWithDefaults() *DiagnosticsprofilesPutRequest {
	this := DiagnosticsprofilesPutRequest{}
	return &this
}

// GetDiagnosticsProfile returns the DiagnosticsProfile field value if set, zero value otherwise.
func (o *DiagnosticsprofilesPutRequest) GetDiagnosticsProfile() map[string]DiagnosticsprofilesPutRequestDiagnosticsProfileValue {
	if o == nil || IsNil(o.DiagnosticsProfile) {
		var ret map[string]DiagnosticsprofilesPutRequestDiagnosticsProfileValue
		return ret
	}
	return *o.DiagnosticsProfile
}

// GetDiagnosticsProfileOk returns a tuple with the DiagnosticsProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiagnosticsprofilesPutRequest) GetDiagnosticsProfileOk() (*map[string]DiagnosticsprofilesPutRequestDiagnosticsProfileValue, bool) {
	if o == nil || IsNil(o.DiagnosticsProfile) {
		return nil, false
	}
	return o.DiagnosticsProfile, true
}

// HasDiagnosticsProfile returns a boolean if a field has been set.
func (o *DiagnosticsprofilesPutRequest) HasDiagnosticsProfile() bool {
	if o != nil && !IsNil(o.DiagnosticsProfile) {
		return true
	}

	return false
}

// SetDiagnosticsProfile gets a reference to the given map[string]DiagnosticsprofilesPutRequestDiagnosticsProfileValue and assigns it to the DiagnosticsProfile field.
func (o *DiagnosticsprofilesPutRequest) SetDiagnosticsProfile(v map[string]DiagnosticsprofilesPutRequestDiagnosticsProfileValue) {
	o.DiagnosticsProfile = &v
}

func (o DiagnosticsprofilesPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DiagnosticsprofilesPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DiagnosticsProfile) {
		toSerialize["diagnostics_profile"] = o.DiagnosticsProfile
	}
	return toSerialize, nil
}

type NullableDiagnosticsprofilesPutRequest struct {
	value *DiagnosticsprofilesPutRequest
	isSet bool
}

func (v NullableDiagnosticsprofilesPutRequest) Get() *DiagnosticsprofilesPutRequest {
	return v.value
}

func (v *NullableDiagnosticsprofilesPutRequest) Set(val *DiagnosticsprofilesPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDiagnosticsprofilesPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDiagnosticsprofilesPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiagnosticsprofilesPutRequest(val *DiagnosticsprofilesPutRequest) *NullableDiagnosticsprofilesPutRequest {
	return &NullableDiagnosticsprofilesPutRequest{value: val, isSet: true}
}

func (v NullableDiagnosticsprofilesPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiagnosticsprofilesPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


