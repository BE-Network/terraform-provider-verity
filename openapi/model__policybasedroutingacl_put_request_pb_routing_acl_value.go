/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PolicybasedroutingaclPutRequestPbRoutingAclValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PolicybasedroutingaclPutRequestPbRoutingAclValue{}

// PolicybasedroutingaclPutRequestPbRoutingAclValue struct for PolicybasedroutingaclPutRequestPbRoutingAclValue
type PolicybasedroutingaclPutRequestPbRoutingAclValue struct {
	// Object Name. Must be unique.
	Name *string `json:"name,omitempty"`
	// Enable object.
	Enable *bool `json:"enable,omitempty"`
	// IPv4 or IPv6
	IpvProtocol *string `json:"ipv_protocol,omitempty"`
	// Next hop IP addresses
	NextHopIps *string `json:"next_hop_ips,omitempty"`
	Ipv4Permit []PolicybasedroutingaclPutRequestPbRoutingAclValueIpv4PermitInner `json:"ipv4_permit,omitempty"`
	Ipv4Deny []PolicybasedroutingaclPutRequestPbRoutingAclValueIpv4PermitInner `json:"ipv4_deny,omitempty"`
	Ipv6Permit []PolicybasedroutingaclPutRequestPbRoutingAclValueIpv6PermitInner `json:"ipv6_permit,omitempty"`
	Ipv6Deny []PolicybasedroutingaclPutRequestPbRoutingAclValueIpv6PermitInner `json:"ipv6_deny,omitempty"`
}

// NewPolicybasedroutingaclPutRequestPbRoutingAclValue instantiates a new PolicybasedroutingaclPutRequestPbRoutingAclValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicybasedroutingaclPutRequestPbRoutingAclValue() *PolicybasedroutingaclPutRequestPbRoutingAclValue {
	this := PolicybasedroutingaclPutRequestPbRoutingAclValue{}
	var name string = ""
	this.Name = &name
	var enable bool = false
	this.Enable = &enable
	var ipvProtocol string = "ipv4"
	this.IpvProtocol = &ipvProtocol
	var nextHopIps string = ""
	this.NextHopIps = &nextHopIps
	return &this
}

// NewPolicybasedroutingaclPutRequestPbRoutingAclValueWithDefaults instantiates a new PolicybasedroutingaclPutRequestPbRoutingAclValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicybasedroutingaclPutRequestPbRoutingAclValueWithDefaults() *PolicybasedroutingaclPutRequestPbRoutingAclValue {
	this := PolicybasedroutingaclPutRequestPbRoutingAclValue{}
	var name string = ""
	this.Name = &name
	var enable bool = false
	this.Enable = &enable
	var ipvProtocol string = "ipv4"
	this.IpvProtocol = &ipvProtocol
	var nextHopIps string = ""
	this.NextHopIps = &nextHopIps
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PolicybasedroutingaclPutRequestPbRoutingAclValue) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicybasedroutingaclPutRequestPbRoutingAclValue) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PolicybasedroutingaclPutRequestPbRoutingAclValue) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PolicybasedroutingaclPutRequestPbRoutingAclValue) SetName(v string) {
	o.Name = &v
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *PolicybasedroutingaclPutRequestPbRoutingAclValue) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicybasedroutingaclPutRequestPbRoutingAclValue) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *PolicybasedroutingaclPutRequestPbRoutingAclValue) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *PolicybasedroutingaclPutRequestPbRoutingAclValue) SetEnable(v bool) {
	o.Enable = &v
}

// GetIpvProtocol returns the IpvProtocol field value if set, zero value otherwise.
func (o *PolicybasedroutingaclPutRequestPbRoutingAclValue) GetIpvProtocol() string {
	if o == nil || IsNil(o.IpvProtocol) {
		var ret string
		return ret
	}
	return *o.IpvProtocol
}

// GetIpvProtocolOk returns a tuple with the IpvProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicybasedroutingaclPutRequestPbRoutingAclValue) GetIpvProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.IpvProtocol) {
		return nil, false
	}
	return o.IpvProtocol, true
}

// HasIpvProtocol returns a boolean if a field has been set.
func (o *PolicybasedroutingaclPutRequestPbRoutingAclValue) HasIpvProtocol() bool {
	if o != nil && !IsNil(o.IpvProtocol) {
		return true
	}

	return false
}

// SetIpvProtocol gets a reference to the given string and assigns it to the IpvProtocol field.
func (o *PolicybasedroutingaclPutRequestPbRoutingAclValue) SetIpvProtocol(v string) {
	o.IpvProtocol = &v
}

// GetNextHopIps returns the NextHopIps field value if set, zero value otherwise.
func (o *PolicybasedroutingaclPutRequestPbRoutingAclValue) GetNextHopIps() string {
	if o == nil || IsNil(o.NextHopIps) {
		var ret string
		return ret
	}
	return *o.NextHopIps
}

// GetNextHopIpsOk returns a tuple with the NextHopIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicybasedroutingaclPutRequestPbRoutingAclValue) GetNextHopIpsOk() (*string, bool) {
	if o == nil || IsNil(o.NextHopIps) {
		return nil, false
	}
	return o.NextHopIps, true
}

// HasNextHopIps returns a boolean if a field has been set.
func (o *PolicybasedroutingaclPutRequestPbRoutingAclValue) HasNextHopIps() bool {
	if o != nil && !IsNil(o.NextHopIps) {
		return true
	}

	return false
}

// SetNextHopIps gets a reference to the given string and assigns it to the NextHopIps field.
func (o *PolicybasedroutingaclPutRequestPbRoutingAclValue) SetNextHopIps(v string) {
	o.NextHopIps = &v
}

// GetIpv4Permit returns the Ipv4Permit field value if set, zero value otherwise.
func (o *PolicybasedroutingaclPutRequestPbRoutingAclValue) GetIpv4Permit() []PolicybasedroutingaclPutRequestPbRoutingAclValueIpv4PermitInner {
	if o == nil || IsNil(o.Ipv4Permit) {
		var ret []PolicybasedroutingaclPutRequestPbRoutingAclValueIpv4PermitInner
		return ret
	}
	return o.Ipv4Permit
}

// GetIpv4PermitOk returns a tuple with the Ipv4Permit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicybasedroutingaclPutRequestPbRoutingAclValue) GetIpv4PermitOk() ([]PolicybasedroutingaclPutRequestPbRoutingAclValueIpv4PermitInner, bool) {
	if o == nil || IsNil(o.Ipv4Permit) {
		return nil, false
	}
	return o.Ipv4Permit, true
}

// HasIpv4Permit returns a boolean if a field has been set.
func (o *PolicybasedroutingaclPutRequestPbRoutingAclValue) HasIpv4Permit() bool {
	if o != nil && !IsNil(o.Ipv4Permit) {
		return true
	}

	return false
}

// SetIpv4Permit gets a reference to the given []PolicybasedroutingaclPutRequestPbRoutingAclValueIpv4PermitInner and assigns it to the Ipv4Permit field.
func (o *PolicybasedroutingaclPutRequestPbRoutingAclValue) SetIpv4Permit(v []PolicybasedroutingaclPutRequestPbRoutingAclValueIpv4PermitInner) {
	o.Ipv4Permit = v
}

// GetIpv4Deny returns the Ipv4Deny field value if set, zero value otherwise.
func (o *PolicybasedroutingaclPutRequestPbRoutingAclValue) GetIpv4Deny() []PolicybasedroutingaclPutRequestPbRoutingAclValueIpv4PermitInner {
	if o == nil || IsNil(o.Ipv4Deny) {
		var ret []PolicybasedroutingaclPutRequestPbRoutingAclValueIpv4PermitInner
		return ret
	}
	return o.Ipv4Deny
}

// GetIpv4DenyOk returns a tuple with the Ipv4Deny field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicybasedroutingaclPutRequestPbRoutingAclValue) GetIpv4DenyOk() ([]PolicybasedroutingaclPutRequestPbRoutingAclValueIpv4PermitInner, bool) {
	if o == nil || IsNil(o.Ipv4Deny) {
		return nil, false
	}
	return o.Ipv4Deny, true
}

// HasIpv4Deny returns a boolean if a field has been set.
func (o *PolicybasedroutingaclPutRequestPbRoutingAclValue) HasIpv4Deny() bool {
	if o != nil && !IsNil(o.Ipv4Deny) {
		return true
	}

	return false
}

// SetIpv4Deny gets a reference to the given []PolicybasedroutingaclPutRequestPbRoutingAclValueIpv4PermitInner and assigns it to the Ipv4Deny field.
func (o *PolicybasedroutingaclPutRequestPbRoutingAclValue) SetIpv4Deny(v []PolicybasedroutingaclPutRequestPbRoutingAclValueIpv4PermitInner) {
	o.Ipv4Deny = v
}

// GetIpv6Permit returns the Ipv6Permit field value if set, zero value otherwise.
func (o *PolicybasedroutingaclPutRequestPbRoutingAclValue) GetIpv6Permit() []PolicybasedroutingaclPutRequestPbRoutingAclValueIpv6PermitInner {
	if o == nil || IsNil(o.Ipv6Permit) {
		var ret []PolicybasedroutingaclPutRequestPbRoutingAclValueIpv6PermitInner
		return ret
	}
	return o.Ipv6Permit
}

// GetIpv6PermitOk returns a tuple with the Ipv6Permit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicybasedroutingaclPutRequestPbRoutingAclValue) GetIpv6PermitOk() ([]PolicybasedroutingaclPutRequestPbRoutingAclValueIpv6PermitInner, bool) {
	if o == nil || IsNil(o.Ipv6Permit) {
		return nil, false
	}
	return o.Ipv6Permit, true
}

// HasIpv6Permit returns a boolean if a field has been set.
func (o *PolicybasedroutingaclPutRequestPbRoutingAclValue) HasIpv6Permit() bool {
	if o != nil && !IsNil(o.Ipv6Permit) {
		return true
	}

	return false
}

// SetIpv6Permit gets a reference to the given []PolicybasedroutingaclPutRequestPbRoutingAclValueIpv6PermitInner and assigns it to the Ipv6Permit field.
func (o *PolicybasedroutingaclPutRequestPbRoutingAclValue) SetIpv6Permit(v []PolicybasedroutingaclPutRequestPbRoutingAclValueIpv6PermitInner) {
	o.Ipv6Permit = v
}

// GetIpv6Deny returns the Ipv6Deny field value if set, zero value otherwise.
func (o *PolicybasedroutingaclPutRequestPbRoutingAclValue) GetIpv6Deny() []PolicybasedroutingaclPutRequestPbRoutingAclValueIpv6PermitInner {
	if o == nil || IsNil(o.Ipv6Deny) {
		var ret []PolicybasedroutingaclPutRequestPbRoutingAclValueIpv6PermitInner
		return ret
	}
	return o.Ipv6Deny
}

// GetIpv6DenyOk returns a tuple with the Ipv6Deny field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicybasedroutingaclPutRequestPbRoutingAclValue) GetIpv6DenyOk() ([]PolicybasedroutingaclPutRequestPbRoutingAclValueIpv6PermitInner, bool) {
	if o == nil || IsNil(o.Ipv6Deny) {
		return nil, false
	}
	return o.Ipv6Deny, true
}

// HasIpv6Deny returns a boolean if a field has been set.
func (o *PolicybasedroutingaclPutRequestPbRoutingAclValue) HasIpv6Deny() bool {
	if o != nil && !IsNil(o.Ipv6Deny) {
		return true
	}

	return false
}

// SetIpv6Deny gets a reference to the given []PolicybasedroutingaclPutRequestPbRoutingAclValueIpv6PermitInner and assigns it to the Ipv6Deny field.
func (o *PolicybasedroutingaclPutRequestPbRoutingAclValue) SetIpv6Deny(v []PolicybasedroutingaclPutRequestPbRoutingAclValueIpv6PermitInner) {
	o.Ipv6Deny = v
}

func (o PolicybasedroutingaclPutRequestPbRoutingAclValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PolicybasedroutingaclPutRequestPbRoutingAclValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.IpvProtocol) {
		toSerialize["ipv_protocol"] = o.IpvProtocol
	}
	if !IsNil(o.NextHopIps) {
		toSerialize["next_hop_ips"] = o.NextHopIps
	}
	if !IsNil(o.Ipv4Permit) {
		toSerialize["ipv4_permit"] = o.Ipv4Permit
	}
	if !IsNil(o.Ipv4Deny) {
		toSerialize["ipv4_deny"] = o.Ipv4Deny
	}
	if !IsNil(o.Ipv6Permit) {
		toSerialize["ipv6_permit"] = o.Ipv6Permit
	}
	if !IsNil(o.Ipv6Deny) {
		toSerialize["ipv6_deny"] = o.Ipv6Deny
	}
	return toSerialize, nil
}

type NullablePolicybasedroutingaclPutRequestPbRoutingAclValue struct {
	value *PolicybasedroutingaclPutRequestPbRoutingAclValue
	isSet bool
}

func (v NullablePolicybasedroutingaclPutRequestPbRoutingAclValue) Get() *PolicybasedroutingaclPutRequestPbRoutingAclValue {
	return v.value
}

func (v *NullablePolicybasedroutingaclPutRequestPbRoutingAclValue) Set(val *PolicybasedroutingaclPutRequestPbRoutingAclValue) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicybasedroutingaclPutRequestPbRoutingAclValue) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicybasedroutingaclPutRequestPbRoutingAclValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicybasedroutingaclPutRequestPbRoutingAclValue(val *PolicybasedroutingaclPutRequestPbRoutingAclValue) *NullablePolicybasedroutingaclPutRequestPbRoutingAclValue {
	return &NullablePolicybasedroutingaclPutRequestPbRoutingAclValue{value: val, isSet: true}
}

func (v NullablePolicybasedroutingaclPutRequestPbRoutingAclValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicybasedroutingaclPutRequestPbRoutingAclValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


