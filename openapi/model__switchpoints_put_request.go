/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SwitchpointsPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SwitchpointsPutRequest{}

// SwitchpointsPutRequest struct for SwitchpointsPutRequest
type SwitchpointsPutRequest struct {
	Switchpoint *map[string]SwitchpointsPutRequestSwitchpointValue `json:"switchpoint,omitempty"`
	Endpoint *map[string]SwitchpointsPutRequestEndpointValue `json:"endpoint,omitempty"`
}

// NewSwitchpointsPutRequest instantiates a new SwitchpointsPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSwitchpointsPutRequest() *SwitchpointsPutRequest {
	this := SwitchpointsPutRequest{}
	return &this
}

// NewSwitchpointsPutRequestWithDefaults instantiates a new SwitchpointsPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSwitchpointsPutRequestWithDefaults() *SwitchpointsPutRequest {
	this := SwitchpointsPutRequest{}
	return &this
}

// GetSwitchpoint returns the Switchpoint field value if set, zero value otherwise.
func (o *SwitchpointsPutRequest) GetSwitchpoint() map[string]SwitchpointsPutRequestSwitchpointValue {
	if o == nil || IsNil(o.Switchpoint) {
		var ret map[string]SwitchpointsPutRequestSwitchpointValue
		return ret
	}
	return *o.Switchpoint
}

// GetSwitchpointOk returns a tuple with the Switchpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchpointsPutRequest) GetSwitchpointOk() (*map[string]SwitchpointsPutRequestSwitchpointValue, bool) {
	if o == nil || IsNil(o.Switchpoint) {
		return nil, false
	}
	return o.Switchpoint, true
}

// HasSwitchpoint returns a boolean if a field has been set.
func (o *SwitchpointsPutRequest) HasSwitchpoint() bool {
	if o != nil && !IsNil(o.Switchpoint) {
		return true
	}

	return false
}

// SetSwitchpoint gets a reference to the given map[string]SwitchpointsPutRequestSwitchpointValue and assigns it to the Switchpoint field.
func (o *SwitchpointsPutRequest) SetSwitchpoint(v map[string]SwitchpointsPutRequestSwitchpointValue) {
	o.Switchpoint = &v
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise.
func (o *SwitchpointsPutRequest) GetEndpoint() map[string]SwitchpointsPutRequestEndpointValue {
	if o == nil || IsNil(o.Endpoint) {
		var ret map[string]SwitchpointsPutRequestEndpointValue
		return ret
	}
	return *o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchpointsPutRequest) GetEndpointOk() (*map[string]SwitchpointsPutRequestEndpointValue, bool) {
	if o == nil || IsNil(o.Endpoint) {
		return nil, false
	}
	return o.Endpoint, true
}

// HasEndpoint returns a boolean if a field has been set.
func (o *SwitchpointsPutRequest) HasEndpoint() bool {
	if o != nil && !IsNil(o.Endpoint) {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given map[string]SwitchpointsPutRequestEndpointValue and assigns it to the Endpoint field.
func (o *SwitchpointsPutRequest) SetEndpoint(v map[string]SwitchpointsPutRequestEndpointValue) {
	o.Endpoint = &v
}

func (o SwitchpointsPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SwitchpointsPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Switchpoint) {
		toSerialize["switchpoint"] = o.Switchpoint
	}
	if !IsNil(o.Endpoint) {
		toSerialize["endpoint"] = o.Endpoint
	}
	return toSerialize, nil
}

type NullableSwitchpointsPutRequest struct {
	value *SwitchpointsPutRequest
	isSet bool
}

func (v NullableSwitchpointsPutRequest) Get() *SwitchpointsPutRequest {
	return v.value
}

func (v *NullableSwitchpointsPutRequest) Set(val *SwitchpointsPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSwitchpointsPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSwitchpointsPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSwitchpointsPutRequest(val *SwitchpointsPutRequest) *NullableSwitchpointsPutRequest {
	return &NullableSwitchpointsPutRequest{value: val, isSet: true}
}

func (v NullableSwitchpointsPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSwitchpointsPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


