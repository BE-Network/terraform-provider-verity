/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConfigPutRequestEndpointView type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigPutRequestEndpointView{}

// ConfigPutRequestEndpointView struct for ConfigPutRequestEndpointView
type ConfigPutRequestEndpointView struct {
	EndpointViewName *ConfigPutRequestEndpointViewEndpointViewName `json:"endpoint_view_name,omitempty"`
}

// NewConfigPutRequestEndpointView instantiates a new ConfigPutRequestEndpointView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigPutRequestEndpointView() *ConfigPutRequestEndpointView {
	this := ConfigPutRequestEndpointView{}
	return &this
}

// NewConfigPutRequestEndpointViewWithDefaults instantiates a new ConfigPutRequestEndpointView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigPutRequestEndpointViewWithDefaults() *ConfigPutRequestEndpointView {
	this := ConfigPutRequestEndpointView{}
	return &this
}

// GetEndpointViewName returns the EndpointViewName field value if set, zero value otherwise.
func (o *ConfigPutRequestEndpointView) GetEndpointViewName() ConfigPutRequestEndpointViewEndpointViewName {
	if o == nil || IsNil(o.EndpointViewName) {
		var ret ConfigPutRequestEndpointViewEndpointViewName
		return ret
	}
	return *o.EndpointViewName
}

// GetEndpointViewNameOk returns a tuple with the EndpointViewName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestEndpointView) GetEndpointViewNameOk() (*ConfigPutRequestEndpointViewEndpointViewName, bool) {
	if o == nil || IsNil(o.EndpointViewName) {
		return nil, false
	}
	return o.EndpointViewName, true
}

// HasEndpointViewName returns a boolean if a field has been set.
func (o *ConfigPutRequestEndpointView) HasEndpointViewName() bool {
	if o != nil && !IsNil(o.EndpointViewName) {
		return true
	}

	return false
}

// SetEndpointViewName gets a reference to the given ConfigPutRequestEndpointViewEndpointViewName and assigns it to the EndpointViewName field.
func (o *ConfigPutRequestEndpointView) SetEndpointViewName(v ConfigPutRequestEndpointViewEndpointViewName) {
	o.EndpointViewName = &v
}

func (o ConfigPutRequestEndpointView) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigPutRequestEndpointView) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EndpointViewName) {
		toSerialize["endpoint_view_name"] = o.EndpointViewName
	}
	return toSerialize, nil
}

type NullableConfigPutRequestEndpointView struct {
	value *ConfigPutRequestEndpointView
	isSet bool
}

func (v NullableConfigPutRequestEndpointView) Get() *ConfigPutRequestEndpointView {
	return v.value
}

func (v *NullableConfigPutRequestEndpointView) Set(val *ConfigPutRequestEndpointView) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigPutRequestEndpointView) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigPutRequestEndpointView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigPutRequestEndpointView(val *ConfigPutRequestEndpointView) *NullableConfigPutRequestEndpointView {
	return &NullableConfigPutRequestEndpointView{value: val, isSet: true}
}

func (v NullableConfigPutRequestEndpointView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigPutRequestEndpointView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


