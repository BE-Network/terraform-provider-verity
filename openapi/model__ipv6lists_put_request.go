/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Ipv6listsPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Ipv6listsPutRequest{}

// Ipv6listsPutRequest struct for Ipv6listsPutRequest
type Ipv6listsPutRequest struct {
	Ipv6ListFilter *map[string]Ipv6listsPutRequestIpv6ListFilterValue `json:"ipv6_list_filter,omitempty"`
}

// NewIpv6listsPutRequest instantiates a new Ipv6listsPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpv6listsPutRequest() *Ipv6listsPutRequest {
	this := Ipv6listsPutRequest{}
	return &this
}

// NewIpv6listsPutRequestWithDefaults instantiates a new Ipv6listsPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpv6listsPutRequestWithDefaults() *Ipv6listsPutRequest {
	this := Ipv6listsPutRequest{}
	return &this
}

// GetIpv6ListFilter returns the Ipv6ListFilter field value if set, zero value otherwise.
func (o *Ipv6listsPutRequest) GetIpv6ListFilter() map[string]Ipv6listsPutRequestIpv6ListFilterValue {
	if o == nil || IsNil(o.Ipv6ListFilter) {
		var ret map[string]Ipv6listsPutRequestIpv6ListFilterValue
		return ret
	}
	return *o.Ipv6ListFilter
}

// GetIpv6ListFilterOk returns a tuple with the Ipv6ListFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ipv6listsPutRequest) GetIpv6ListFilterOk() (*map[string]Ipv6listsPutRequestIpv6ListFilterValue, bool) {
	if o == nil || IsNil(o.Ipv6ListFilter) {
		return nil, false
	}
	return o.Ipv6ListFilter, true
}

// HasIpv6ListFilter returns a boolean if a field has been set.
func (o *Ipv6listsPutRequest) HasIpv6ListFilter() bool {
	if o != nil && !IsNil(o.Ipv6ListFilter) {
		return true
	}

	return false
}

// SetIpv6ListFilter gets a reference to the given map[string]Ipv6listsPutRequestIpv6ListFilterValue and assigns it to the Ipv6ListFilter field.
func (o *Ipv6listsPutRequest) SetIpv6ListFilter(v map[string]Ipv6listsPutRequestIpv6ListFilterValue) {
	o.Ipv6ListFilter = &v
}

func (o Ipv6listsPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Ipv6listsPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ipv6ListFilter) {
		toSerialize["ipv6_list_filter"] = o.Ipv6ListFilter
	}
	return toSerialize, nil
}

type NullableIpv6listsPutRequest struct {
	value *Ipv6listsPutRequest
	isSet bool
}

func (v NullableIpv6listsPutRequest) Get() *Ipv6listsPutRequest {
	return v.value
}

func (v *NullableIpv6listsPutRequest) Set(val *Ipv6listsPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIpv6listsPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIpv6listsPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpv6listsPutRequest(val *Ipv6listsPutRequest) *NullableIpv6listsPutRequest {
	return &NullableIpv6listsPutRequest{value: val, isSet: true}
}

func (v NullableIpv6listsPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpv6listsPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


