/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner{}

// ConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner struct for ConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner
type ConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner struct {
	// Feature name
	Feature *string `json:"feature,omitempty"`
	// Controls if the feature is turned on or off
	Enabled *bool `json:"enabled,omitempty"`
}

// NewConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner instantiates a new ConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner() *ConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner {
	this := ConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner{}
	var feature string = ""
	this.Feature = &feature
	var enabled bool = false
	this.Enabled = &enabled
	return &this
}

// NewConfigPutRequestFeatureFlagFeatureFlagNameFeatureInnerWithDefaults instantiates a new ConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigPutRequestFeatureFlagFeatureFlagNameFeatureInnerWithDefaults() *ConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner {
	this := ConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner{}
	var feature string = ""
	this.Feature = &feature
	var enabled bool = false
	this.Enabled = &enabled
	return &this
}

// GetFeature returns the Feature field value if set, zero value otherwise.
func (o *ConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner) GetFeature() string {
	if o == nil || IsNil(o.Feature) {
		var ret string
		return ret
	}
	return *o.Feature
}

// GetFeatureOk returns a tuple with the Feature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner) GetFeatureOk() (*string, bool) {
	if o == nil || IsNil(o.Feature) {
		return nil, false
	}
	return o.Feature, true
}

// HasFeature returns a boolean if a field has been set.
func (o *ConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner) HasFeature() bool {
	if o != nil && !IsNil(o.Feature) {
		return true
	}

	return false
}

// SetFeature gets a reference to the given string and assigns it to the Feature field.
func (o *ConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner) SetFeature(v string) {
	o.Feature = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o ConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Feature) {
		toSerialize["feature"] = o.Feature
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	return toSerialize, nil
}

type NullableConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner struct {
	value *ConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner
	isSet bool
}

func (v NullableConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner) Get() *ConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner {
	return v.value
}

func (v *NullableConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner) Set(val *ConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner(val *ConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner) *NullableConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner {
	return &NullableConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner{value: val, isSet: true}
}

func (v NullableConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigPutRequestFeatureFlagFeatureFlagNameFeatureInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


