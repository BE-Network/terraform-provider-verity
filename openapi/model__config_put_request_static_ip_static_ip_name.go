/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConfigPutRequestStaticIpStaticIpName type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigPutRequestStaticIpStaticIpName{}

// ConfigPutRequestStaticIpStaticIpName struct for ConfigPutRequestStaticIpStaticIpName
type ConfigPutRequestStaticIpStaticIpName struct {
	// Object Name. Must be unique.
	Name *string `json:"name,omitempty"`
	// Enable object.
	Enable *bool `json:"enable,omitempty"`
	// IP
	Ip *string `json:"ip,omitempty"`
	// MAC
	Mac *string `json:"mac,omitempty"`
	// Service
	Service *string `json:"service,omitempty"`
	// Object type for service field
	ServiceRefType *string `json:"service_ref_type_,omitempty"`
	// Allowed On
	AllowedOn *string `json:"allowed_on,omitempty"`
	// LAG
	Lag *string `json:"lag,omitempty"`
	// Object type for lag field
	LagRefType *string `json:"lag_ref_type_,omitempty"`
	// 
	Switch *string `json:"switch,omitempty"`
	// Object type for switch field
	SwitchRefType *string `json:"switch_ref_type_,omitempty"`
	// Port
	Port *string `json:"port,omitempty"`
	ObjectProperties map[string]interface{} `json:"object_properties,omitempty"`
}

// NewConfigPutRequestStaticIpStaticIpName instantiates a new ConfigPutRequestStaticIpStaticIpName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigPutRequestStaticIpStaticIpName() *ConfigPutRequestStaticIpStaticIpName {
	this := ConfigPutRequestStaticIpStaticIpName{}
	var name string = ""
	this.Name = &name
	var enable bool = false
	this.Enable = &enable
	var ip string = ""
	this.Ip = &ip
	var mac string = ""
	this.Mac = &mac
	var service string = ""
	this.Service = &service
	var allowedOn string = "Static Port"
	this.AllowedOn = &allowedOn
	var lag string = ""
	this.Lag = &lag
	var switch_ string = ""
	this.Switch = &switch_
	var port string = ""
	this.Port = &port
	return &this
}

// NewConfigPutRequestStaticIpStaticIpNameWithDefaults instantiates a new ConfigPutRequestStaticIpStaticIpName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigPutRequestStaticIpStaticIpNameWithDefaults() *ConfigPutRequestStaticIpStaticIpName {
	this := ConfigPutRequestStaticIpStaticIpName{}
	var name string = ""
	this.Name = &name
	var enable bool = false
	this.Enable = &enable
	var ip string = ""
	this.Ip = &ip
	var mac string = ""
	this.Mac = &mac
	var service string = ""
	this.Service = &service
	var allowedOn string = "Static Port"
	this.AllowedOn = &allowedOn
	var lag string = ""
	this.Lag = &lag
	var switch_ string = ""
	this.Switch = &switch_
	var port string = ""
	this.Port = &port
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ConfigPutRequestStaticIpStaticIpName) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestStaticIpStaticIpName) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ConfigPutRequestStaticIpStaticIpName) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ConfigPutRequestStaticIpStaticIpName) SetName(v string) {
	o.Name = &v
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *ConfigPutRequestStaticIpStaticIpName) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestStaticIpStaticIpName) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *ConfigPutRequestStaticIpStaticIpName) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *ConfigPutRequestStaticIpStaticIpName) SetEnable(v bool) {
	o.Enable = &v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *ConfigPutRequestStaticIpStaticIpName) GetIp() string {
	if o == nil || IsNil(o.Ip) {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestStaticIpStaticIpName) GetIpOk() (*string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *ConfigPutRequestStaticIpStaticIpName) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *ConfigPutRequestStaticIpStaticIpName) SetIp(v string) {
	o.Ip = &v
}

// GetMac returns the Mac field value if set, zero value otherwise.
func (o *ConfigPutRequestStaticIpStaticIpName) GetMac() string {
	if o == nil || IsNil(o.Mac) {
		var ret string
		return ret
	}
	return *o.Mac
}

// GetMacOk returns a tuple with the Mac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestStaticIpStaticIpName) GetMacOk() (*string, bool) {
	if o == nil || IsNil(o.Mac) {
		return nil, false
	}
	return o.Mac, true
}

// HasMac returns a boolean if a field has been set.
func (o *ConfigPutRequestStaticIpStaticIpName) HasMac() bool {
	if o != nil && !IsNil(o.Mac) {
		return true
	}

	return false
}

// SetMac gets a reference to the given string and assigns it to the Mac field.
func (o *ConfigPutRequestStaticIpStaticIpName) SetMac(v string) {
	o.Mac = &v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *ConfigPutRequestStaticIpStaticIpName) GetService() string {
	if o == nil || IsNil(o.Service) {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestStaticIpStaticIpName) GetServiceOk() (*string, bool) {
	if o == nil || IsNil(o.Service) {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *ConfigPutRequestStaticIpStaticIpName) HasService() bool {
	if o != nil && !IsNil(o.Service) {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *ConfigPutRequestStaticIpStaticIpName) SetService(v string) {
	o.Service = &v
}

// GetServiceRefType returns the ServiceRefType field value if set, zero value otherwise.
func (o *ConfigPutRequestStaticIpStaticIpName) GetServiceRefType() string {
	if o == nil || IsNil(o.ServiceRefType) {
		var ret string
		return ret
	}
	return *o.ServiceRefType
}

// GetServiceRefTypeOk returns a tuple with the ServiceRefType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestStaticIpStaticIpName) GetServiceRefTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceRefType) {
		return nil, false
	}
	return o.ServiceRefType, true
}

// HasServiceRefType returns a boolean if a field has been set.
func (o *ConfigPutRequestStaticIpStaticIpName) HasServiceRefType() bool {
	if o != nil && !IsNil(o.ServiceRefType) {
		return true
	}

	return false
}

// SetServiceRefType gets a reference to the given string and assigns it to the ServiceRefType field.
func (o *ConfigPutRequestStaticIpStaticIpName) SetServiceRefType(v string) {
	o.ServiceRefType = &v
}

// GetAllowedOn returns the AllowedOn field value if set, zero value otherwise.
func (o *ConfigPutRequestStaticIpStaticIpName) GetAllowedOn() string {
	if o == nil || IsNil(o.AllowedOn) {
		var ret string
		return ret
	}
	return *o.AllowedOn
}

// GetAllowedOnOk returns a tuple with the AllowedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestStaticIpStaticIpName) GetAllowedOnOk() (*string, bool) {
	if o == nil || IsNil(o.AllowedOn) {
		return nil, false
	}
	return o.AllowedOn, true
}

// HasAllowedOn returns a boolean if a field has been set.
func (o *ConfigPutRequestStaticIpStaticIpName) HasAllowedOn() bool {
	if o != nil && !IsNil(o.AllowedOn) {
		return true
	}

	return false
}

// SetAllowedOn gets a reference to the given string and assigns it to the AllowedOn field.
func (o *ConfigPutRequestStaticIpStaticIpName) SetAllowedOn(v string) {
	o.AllowedOn = &v
}

// GetLag returns the Lag field value if set, zero value otherwise.
func (o *ConfigPutRequestStaticIpStaticIpName) GetLag() string {
	if o == nil || IsNil(o.Lag) {
		var ret string
		return ret
	}
	return *o.Lag
}

// GetLagOk returns a tuple with the Lag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestStaticIpStaticIpName) GetLagOk() (*string, bool) {
	if o == nil || IsNil(o.Lag) {
		return nil, false
	}
	return o.Lag, true
}

// HasLag returns a boolean if a field has been set.
func (o *ConfigPutRequestStaticIpStaticIpName) HasLag() bool {
	if o != nil && !IsNil(o.Lag) {
		return true
	}

	return false
}

// SetLag gets a reference to the given string and assigns it to the Lag field.
func (o *ConfigPutRequestStaticIpStaticIpName) SetLag(v string) {
	o.Lag = &v
}

// GetLagRefType returns the LagRefType field value if set, zero value otherwise.
func (o *ConfigPutRequestStaticIpStaticIpName) GetLagRefType() string {
	if o == nil || IsNil(o.LagRefType) {
		var ret string
		return ret
	}
	return *o.LagRefType
}

// GetLagRefTypeOk returns a tuple with the LagRefType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestStaticIpStaticIpName) GetLagRefTypeOk() (*string, bool) {
	if o == nil || IsNil(o.LagRefType) {
		return nil, false
	}
	return o.LagRefType, true
}

// HasLagRefType returns a boolean if a field has been set.
func (o *ConfigPutRequestStaticIpStaticIpName) HasLagRefType() bool {
	if o != nil && !IsNil(o.LagRefType) {
		return true
	}

	return false
}

// SetLagRefType gets a reference to the given string and assigns it to the LagRefType field.
func (o *ConfigPutRequestStaticIpStaticIpName) SetLagRefType(v string) {
	o.LagRefType = &v
}

// GetSwitch returns the Switch field value if set, zero value otherwise.
func (o *ConfigPutRequestStaticIpStaticIpName) GetSwitch() string {
	if o == nil || IsNil(o.Switch) {
		var ret string
		return ret
	}
	return *o.Switch
}

// GetSwitchOk returns a tuple with the Switch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestStaticIpStaticIpName) GetSwitchOk() (*string, bool) {
	if o == nil || IsNil(o.Switch) {
		return nil, false
	}
	return o.Switch, true
}

// HasSwitch returns a boolean if a field has been set.
func (o *ConfigPutRequestStaticIpStaticIpName) HasSwitch() bool {
	if o != nil && !IsNil(o.Switch) {
		return true
	}

	return false
}

// SetSwitch gets a reference to the given string and assigns it to the Switch field.
func (o *ConfigPutRequestStaticIpStaticIpName) SetSwitch(v string) {
	o.Switch = &v
}

// GetSwitchRefType returns the SwitchRefType field value if set, zero value otherwise.
func (o *ConfigPutRequestStaticIpStaticIpName) GetSwitchRefType() string {
	if o == nil || IsNil(o.SwitchRefType) {
		var ret string
		return ret
	}
	return *o.SwitchRefType
}

// GetSwitchRefTypeOk returns a tuple with the SwitchRefType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestStaticIpStaticIpName) GetSwitchRefTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SwitchRefType) {
		return nil, false
	}
	return o.SwitchRefType, true
}

// HasSwitchRefType returns a boolean if a field has been set.
func (o *ConfigPutRequestStaticIpStaticIpName) HasSwitchRefType() bool {
	if o != nil && !IsNil(o.SwitchRefType) {
		return true
	}

	return false
}

// SetSwitchRefType gets a reference to the given string and assigns it to the SwitchRefType field.
func (o *ConfigPutRequestStaticIpStaticIpName) SetSwitchRefType(v string) {
	o.SwitchRefType = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *ConfigPutRequestStaticIpStaticIpName) GetPort() string {
	if o == nil || IsNil(o.Port) {
		var ret string
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestStaticIpStaticIpName) GetPortOk() (*string, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *ConfigPutRequestStaticIpStaticIpName) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given string and assigns it to the Port field.
func (o *ConfigPutRequestStaticIpStaticIpName) SetPort(v string) {
	o.Port = &v
}

// GetObjectProperties returns the ObjectProperties field value if set, zero value otherwise.
func (o *ConfigPutRequestStaticIpStaticIpName) GetObjectProperties() map[string]interface{} {
	if o == nil || IsNil(o.ObjectProperties) {
		var ret map[string]interface{}
		return ret
	}
	return o.ObjectProperties
}

// GetObjectPropertiesOk returns a tuple with the ObjectProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestStaticIpStaticIpName) GetObjectPropertiesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ObjectProperties) {
		return map[string]interface{}{}, false
	}
	return o.ObjectProperties, true
}

// HasObjectProperties returns a boolean if a field has been set.
func (o *ConfigPutRequestStaticIpStaticIpName) HasObjectProperties() bool {
	if o != nil && !IsNil(o.ObjectProperties) {
		return true
	}

	return false
}

// SetObjectProperties gets a reference to the given map[string]interface{} and assigns it to the ObjectProperties field.
func (o *ConfigPutRequestStaticIpStaticIpName) SetObjectProperties(v map[string]interface{}) {
	o.ObjectProperties = v
}

func (o ConfigPutRequestStaticIpStaticIpName) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigPutRequestStaticIpStaticIpName) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !IsNil(o.Mac) {
		toSerialize["mac"] = o.Mac
	}
	if !IsNil(o.Service) {
		toSerialize["service"] = o.Service
	}
	if !IsNil(o.ServiceRefType) {
		toSerialize["service_ref_type_"] = o.ServiceRefType
	}
	if !IsNil(o.AllowedOn) {
		toSerialize["allowed_on"] = o.AllowedOn
	}
	if !IsNil(o.Lag) {
		toSerialize["lag"] = o.Lag
	}
	if !IsNil(o.LagRefType) {
		toSerialize["lag_ref_type_"] = o.LagRefType
	}
	if !IsNil(o.Switch) {
		toSerialize["switch"] = o.Switch
	}
	if !IsNil(o.SwitchRefType) {
		toSerialize["switch_ref_type_"] = o.SwitchRefType
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.ObjectProperties) {
		toSerialize["object_properties"] = o.ObjectProperties
	}
	return toSerialize, nil
}

type NullableConfigPutRequestStaticIpStaticIpName struct {
	value *ConfigPutRequestStaticIpStaticIpName
	isSet bool
}

func (v NullableConfigPutRequestStaticIpStaticIpName) Get() *ConfigPutRequestStaticIpStaticIpName {
	return v.value
}

func (v *NullableConfigPutRequestStaticIpStaticIpName) Set(val *ConfigPutRequestStaticIpStaticIpName) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigPutRequestStaticIpStaticIpName) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigPutRequestStaticIpStaticIpName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigPutRequestStaticIpStaticIpName(val *ConfigPutRequestStaticIpStaticIpName) *NullableConfigPutRequestStaticIpStaticIpName {
	return &NullableConfigPutRequestStaticIpStaticIpName{value: val, isSet: true}
}

func (v NullableConfigPutRequestStaticIpStaticIpName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigPutRequestStaticIpStaticIpName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


