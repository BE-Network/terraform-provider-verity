/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BundlesPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BundlesPutRequest{}

// BundlesPutRequest struct for BundlesPutRequest
type BundlesPutRequest struct {
	EndpointBundle *map[string]BundlesPutRequestEndpointBundleValue `json:"endpoint_bundle,omitempty"`
}

// NewBundlesPutRequest instantiates a new BundlesPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBundlesPutRequest() *BundlesPutRequest {
	this := BundlesPutRequest{}
	return &this
}

// NewBundlesPutRequestWithDefaults instantiates a new BundlesPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBundlesPutRequestWithDefaults() *BundlesPutRequest {
	this := BundlesPutRequest{}
	return &this
}

// GetEndpointBundle returns the EndpointBundle field value if set, zero value otherwise.
func (o *BundlesPutRequest) GetEndpointBundle() map[string]BundlesPutRequestEndpointBundleValue {
	if o == nil || IsNil(o.EndpointBundle) {
		var ret map[string]BundlesPutRequestEndpointBundleValue
		return ret
	}
	return *o.EndpointBundle
}

// GetEndpointBundleOk returns a tuple with the EndpointBundle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundlesPutRequest) GetEndpointBundleOk() (*map[string]BundlesPutRequestEndpointBundleValue, bool) {
	if o == nil || IsNil(o.EndpointBundle) {
		return nil, false
	}
	return o.EndpointBundle, true
}

// HasEndpointBundle returns a boolean if a field has been set.
func (o *BundlesPutRequest) HasEndpointBundle() bool {
	if o != nil && !IsNil(o.EndpointBundle) {
		return true
	}

	return false
}

// SetEndpointBundle gets a reference to the given map[string]BundlesPutRequestEndpointBundleValue and assigns it to the EndpointBundle field.
func (o *BundlesPutRequest) SetEndpointBundle(v map[string]BundlesPutRequestEndpointBundleValue) {
	o.EndpointBundle = &v
}

func (o BundlesPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BundlesPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EndpointBundle) {
		toSerialize["endpoint_bundle"] = o.EndpointBundle
	}
	return toSerialize, nil
}

type NullableBundlesPutRequest struct {
	value *BundlesPutRequest
	isSet bool
}

func (v NullableBundlesPutRequest) Get() *BundlesPutRequest {
	return v.value
}

func (v *NullableBundlesPutRequest) Set(val *BundlesPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBundlesPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBundlesPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBundlesPutRequest(val *BundlesPutRequest) *NullableBundlesPutRequest {
	return &NullableBundlesPutRequest{value: val, isSet: true}
}

func (v NullableBundlesPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBundlesPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


