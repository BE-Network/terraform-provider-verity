/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConfigPutRequestSfpBreakouts type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigPutRequestSfpBreakouts{}

// ConfigPutRequestSfpBreakouts struct for ConfigPutRequestSfpBreakouts
type ConfigPutRequestSfpBreakouts struct {
	SfpBreakoutsName *ConfigPutRequestSfpBreakoutsSfpBreakoutsName `json:"sfp_breakouts_name,omitempty"`
}

// NewConfigPutRequestSfpBreakouts instantiates a new ConfigPutRequestSfpBreakouts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigPutRequestSfpBreakouts() *ConfigPutRequestSfpBreakouts {
	this := ConfigPutRequestSfpBreakouts{}
	return &this
}

// NewConfigPutRequestSfpBreakoutsWithDefaults instantiates a new ConfigPutRequestSfpBreakouts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigPutRequestSfpBreakoutsWithDefaults() *ConfigPutRequestSfpBreakouts {
	this := ConfigPutRequestSfpBreakouts{}
	return &this
}

// GetSfpBreakoutsName returns the SfpBreakoutsName field value if set, zero value otherwise.
func (o *ConfigPutRequestSfpBreakouts) GetSfpBreakoutsName() ConfigPutRequestSfpBreakoutsSfpBreakoutsName {
	if o == nil || IsNil(o.SfpBreakoutsName) {
		var ret ConfigPutRequestSfpBreakoutsSfpBreakoutsName
		return ret
	}
	return *o.SfpBreakoutsName
}

// GetSfpBreakoutsNameOk returns a tuple with the SfpBreakoutsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestSfpBreakouts) GetSfpBreakoutsNameOk() (*ConfigPutRequestSfpBreakoutsSfpBreakoutsName, bool) {
	if o == nil || IsNil(o.SfpBreakoutsName) {
		return nil, false
	}
	return o.SfpBreakoutsName, true
}

// HasSfpBreakoutsName returns a boolean if a field has been set.
func (o *ConfigPutRequestSfpBreakouts) HasSfpBreakoutsName() bool {
	if o != nil && !IsNil(o.SfpBreakoutsName) {
		return true
	}

	return false
}

// SetSfpBreakoutsName gets a reference to the given ConfigPutRequestSfpBreakoutsSfpBreakoutsName and assigns it to the SfpBreakoutsName field.
func (o *ConfigPutRequestSfpBreakouts) SetSfpBreakoutsName(v ConfigPutRequestSfpBreakoutsSfpBreakoutsName) {
	o.SfpBreakoutsName = &v
}

func (o ConfigPutRequestSfpBreakouts) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigPutRequestSfpBreakouts) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SfpBreakoutsName) {
		toSerialize["sfp_breakouts_name"] = o.SfpBreakoutsName
	}
	return toSerialize, nil
}

type NullableConfigPutRequestSfpBreakouts struct {
	value *ConfigPutRequestSfpBreakouts
	isSet bool
}

func (v NullableConfigPutRequestSfpBreakouts) Get() *ConfigPutRequestSfpBreakouts {
	return v.value
}

func (v *NullableConfigPutRequestSfpBreakouts) Set(val *ConfigPutRequestSfpBreakouts) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigPutRequestSfpBreakouts) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigPutRequestSfpBreakouts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigPutRequestSfpBreakouts(val *ConfigPutRequestSfpBreakouts) *NullableConfigPutRequestSfpBreakouts {
	return &NullableConfigPutRequestSfpBreakouts{value: val, isSet: true}
}

func (v NullableConfigPutRequestSfpBreakouts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigPutRequestSfpBreakouts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


