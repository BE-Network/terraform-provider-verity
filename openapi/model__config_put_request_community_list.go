/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConfigPutRequestCommunityList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigPutRequestCommunityList{}

// ConfigPutRequestCommunityList struct for ConfigPutRequestCommunityList
type ConfigPutRequestCommunityList struct {
	CommunityListName *ConfigPutRequestCommunityListCommunityListName `json:"community_list_name,omitempty"`
}

// NewConfigPutRequestCommunityList instantiates a new ConfigPutRequestCommunityList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigPutRequestCommunityList() *ConfigPutRequestCommunityList {
	this := ConfigPutRequestCommunityList{}
	return &this
}

// NewConfigPutRequestCommunityListWithDefaults instantiates a new ConfigPutRequestCommunityList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigPutRequestCommunityListWithDefaults() *ConfigPutRequestCommunityList {
	this := ConfigPutRequestCommunityList{}
	return &this
}

// GetCommunityListName returns the CommunityListName field value if set, zero value otherwise.
func (o *ConfigPutRequestCommunityList) GetCommunityListName() ConfigPutRequestCommunityListCommunityListName {
	if o == nil || IsNil(o.CommunityListName) {
		var ret ConfigPutRequestCommunityListCommunityListName
		return ret
	}
	return *o.CommunityListName
}

// GetCommunityListNameOk returns a tuple with the CommunityListName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestCommunityList) GetCommunityListNameOk() (*ConfigPutRequestCommunityListCommunityListName, bool) {
	if o == nil || IsNil(o.CommunityListName) {
		return nil, false
	}
	return o.CommunityListName, true
}

// HasCommunityListName returns a boolean if a field has been set.
func (o *ConfigPutRequestCommunityList) HasCommunityListName() bool {
	if o != nil && !IsNil(o.CommunityListName) {
		return true
	}

	return false
}

// SetCommunityListName gets a reference to the given ConfigPutRequestCommunityListCommunityListName and assigns it to the CommunityListName field.
func (o *ConfigPutRequestCommunityList) SetCommunityListName(v ConfigPutRequestCommunityListCommunityListName) {
	o.CommunityListName = &v
}

func (o ConfigPutRequestCommunityList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigPutRequestCommunityList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CommunityListName) {
		toSerialize["community_list_name"] = o.CommunityListName
	}
	return toSerialize, nil
}

type NullableConfigPutRequestCommunityList struct {
	value *ConfigPutRequestCommunityList
	isSet bool
}

func (v NullableConfigPutRequestCommunityList) Get() *ConfigPutRequestCommunityList {
	return v.value
}

func (v *NullableConfigPutRequestCommunityList) Set(val *ConfigPutRequestCommunityList) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigPutRequestCommunityList) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigPutRequestCommunityList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigPutRequestCommunityList(val *ConfigPutRequestCommunityList) *NullableConfigPutRequestCommunityList {
	return &NullableConfigPutRequestCommunityList{value: val, isSet: true}
}

func (v NullableConfigPutRequestCommunityList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigPutRequestCommunityList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


