/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DevicesettingsPutRequestEthDeviceProfilesValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DevicesettingsPutRequestEthDeviceProfilesValue{}

// DevicesettingsPutRequestEthDeviceProfilesValue struct for DevicesettingsPutRequestEthDeviceProfilesValue
type DevicesettingsPutRequestEthDeviceProfilesValue struct {
	// Object Name. Must be unique.
	Name *string `json:"name,omitempty"`
	// Enable object.
	Enable *bool `json:"enable,omitempty"`
	// Mode
	Mode *string `json:"mode,omitempty"`
	// Usage Threshold
	UsageThreshold *float32 `json:"usage_threshold,omitempty"`
	// External Battery Power Available
	ExternalBatteryPowerAvailable *int32 `json:"external_battery_power_available,omitempty"`
	// External Power Available
	ExternalPowerAvailable *int32 `json:"external_power_available,omitempty"`
	// Required for AVB, PTP and Cobranet Support for ONT Devices
	DisableTcpUdpLearnedPacketAcceleration *bool `json:"disable_tcp_udp_learned_packet_acceleration,omitempty"`
	// Packet Queue for device
	PacketQueueId *string `json:"packet_queue_id,omitempty"`
	// Object type for packet_queue_id field
	PacketQueueIdRefType *string `json:"packet_queue_id_ref_type_,omitempty"`
	// Frequency in minutes of rereading this Switch running configuration and comparing it to expected values.                                                 <br>if the value is blank, audit will use default switch settings.                                                 <br>if the value is 0, audit will be turned off.                                                 
	SecurityAuditInterval NullableInt32 `json:"security_audit_interval,omitempty"`
	// Time delay in minutes to write the Switch configuration to flash after a change is made.                                                 <br>if the value is blank, commit will use default switch settings of 12 hours.                                                 <br>if the value is 0, commit will be turned off.
	CommitToFlashInterval NullableInt32 `json:"commit_to_flash_interval,omitempty"`
	// Enable RDMA over Converged Ethernet version 2 network protocol. Switches that are set to ROCE mode should already have their port breakouts set up and should not have any ports configured with LAGs.
	Rocev2 *bool `json:"rocev2,omitempty"`
	// Enable Cut-through Switching on all Switches
	CutThroughSwitching *bool `json:"cut_through_switching,omitempty"`
	ObjectProperties *DevicesettingsPutRequestEthDeviceProfilesValueObjectProperties `json:"object_properties,omitempty"`
	// Hold Timer
	HoldTimer NullableInt32 `json:"hold_timer,omitempty"`
	// Blank uses the Device's default; otherwise an integer between 1 to 1,000,000 seconds
	MacAgingTimerOverride NullableInt32 `json:"mac_aging_timer_override,omitempty"`
	// STP per switch, priority are in 4096 increments, the lower the number, the higher the priority.
	SpanningTreePriority *string `json:"spanning_tree_priority,omitempty"`
}

// NewDevicesettingsPutRequestEthDeviceProfilesValue instantiates a new DevicesettingsPutRequestEthDeviceProfilesValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDevicesettingsPutRequestEthDeviceProfilesValue() *DevicesettingsPutRequestEthDeviceProfilesValue {
	this := DevicesettingsPutRequestEthDeviceProfilesValue{}
	var name string = ""
	this.Name = &name
	var enable bool = false
	this.Enable = &enable
	var mode string = "IEEE 802.3af"
	this.Mode = &mode
	var externalBatteryPowerAvailable int32 = 40
	this.ExternalBatteryPowerAvailable = &externalBatteryPowerAvailable
	var externalPowerAvailable int32 = 75
	this.ExternalPowerAvailable = &externalPowerAvailable
	var disableTcpUdpLearnedPacketAcceleration bool = false
	this.DisableTcpUdpLearnedPacketAcceleration = &disableTcpUdpLearnedPacketAcceleration
	var packetQueueId string = "packet_queue|(Packet Queue)|"
	this.PacketQueueId = &packetQueueId
	var securityAuditInterval int32 = 60
	this.SecurityAuditInterval = *NewNullableInt32(&securityAuditInterval)
	var commitToFlashInterval int32 = 60
	this.CommitToFlashInterval = *NewNullableInt32(&commitToFlashInterval)
	var rocev2 bool = false
	this.Rocev2 = &rocev2
	var cutThroughSwitching bool = false
	this.CutThroughSwitching = &cutThroughSwitching
	var holdTimer int32 = 0
	this.HoldTimer = *NewNullableInt32(&holdTimer)
	var spanningTreePriority string = "byLevel"
	this.SpanningTreePriority = &spanningTreePriority
	return &this
}

// NewDevicesettingsPutRequestEthDeviceProfilesValueWithDefaults instantiates a new DevicesettingsPutRequestEthDeviceProfilesValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDevicesettingsPutRequestEthDeviceProfilesValueWithDefaults() *DevicesettingsPutRequestEthDeviceProfilesValue {
	this := DevicesettingsPutRequestEthDeviceProfilesValue{}
	var name string = ""
	this.Name = &name
	var enable bool = false
	this.Enable = &enable
	var mode string = "IEEE 802.3af"
	this.Mode = &mode
	var externalBatteryPowerAvailable int32 = 40
	this.ExternalBatteryPowerAvailable = &externalBatteryPowerAvailable
	var externalPowerAvailable int32 = 75
	this.ExternalPowerAvailable = &externalPowerAvailable
	var disableTcpUdpLearnedPacketAcceleration bool = false
	this.DisableTcpUdpLearnedPacketAcceleration = &disableTcpUdpLearnedPacketAcceleration
	var packetQueueId string = "packet_queue|(Packet Queue)|"
	this.PacketQueueId = &packetQueueId
	var securityAuditInterval int32 = 60
	this.SecurityAuditInterval = *NewNullableInt32(&securityAuditInterval)
	var commitToFlashInterval int32 = 60
	this.CommitToFlashInterval = *NewNullableInt32(&commitToFlashInterval)
	var rocev2 bool = false
	this.Rocev2 = &rocev2
	var cutThroughSwitching bool = false
	this.CutThroughSwitching = &cutThroughSwitching
	var holdTimer int32 = 0
	this.HoldTimer = *NewNullableInt32(&holdTimer)
	var spanningTreePriority string = "byLevel"
	this.SpanningTreePriority = &spanningTreePriority
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) SetName(v string) {
	o.Name = &v
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) SetEnable(v bool) {
	o.Enable = &v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetMode() string {
	if o == nil || IsNil(o.Mode) {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetModeOk() (*string, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) HasMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) SetMode(v string) {
	o.Mode = &v
}

// GetUsageThreshold returns the UsageThreshold field value if set, zero value otherwise.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetUsageThreshold() float32 {
	if o == nil || IsNil(o.UsageThreshold) {
		var ret float32
		return ret
	}
	return *o.UsageThreshold
}

// GetUsageThresholdOk returns a tuple with the UsageThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetUsageThresholdOk() (*float32, bool) {
	if o == nil || IsNil(o.UsageThreshold) {
		return nil, false
	}
	return o.UsageThreshold, true
}

// HasUsageThreshold returns a boolean if a field has been set.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) HasUsageThreshold() bool {
	if o != nil && !IsNil(o.UsageThreshold) {
		return true
	}

	return false
}

// SetUsageThreshold gets a reference to the given float32 and assigns it to the UsageThreshold field.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) SetUsageThreshold(v float32) {
	o.UsageThreshold = &v
}

// GetExternalBatteryPowerAvailable returns the ExternalBatteryPowerAvailable field value if set, zero value otherwise.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetExternalBatteryPowerAvailable() int32 {
	if o == nil || IsNil(o.ExternalBatteryPowerAvailable) {
		var ret int32
		return ret
	}
	return *o.ExternalBatteryPowerAvailable
}

// GetExternalBatteryPowerAvailableOk returns a tuple with the ExternalBatteryPowerAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetExternalBatteryPowerAvailableOk() (*int32, bool) {
	if o == nil || IsNil(o.ExternalBatteryPowerAvailable) {
		return nil, false
	}
	return o.ExternalBatteryPowerAvailable, true
}

// HasExternalBatteryPowerAvailable returns a boolean if a field has been set.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) HasExternalBatteryPowerAvailable() bool {
	if o != nil && !IsNil(o.ExternalBatteryPowerAvailable) {
		return true
	}

	return false
}

// SetExternalBatteryPowerAvailable gets a reference to the given int32 and assigns it to the ExternalBatteryPowerAvailable field.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) SetExternalBatteryPowerAvailable(v int32) {
	o.ExternalBatteryPowerAvailable = &v
}

// GetExternalPowerAvailable returns the ExternalPowerAvailable field value if set, zero value otherwise.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetExternalPowerAvailable() int32 {
	if o == nil || IsNil(o.ExternalPowerAvailable) {
		var ret int32
		return ret
	}
	return *o.ExternalPowerAvailable
}

// GetExternalPowerAvailableOk returns a tuple with the ExternalPowerAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetExternalPowerAvailableOk() (*int32, bool) {
	if o == nil || IsNil(o.ExternalPowerAvailable) {
		return nil, false
	}
	return o.ExternalPowerAvailable, true
}

// HasExternalPowerAvailable returns a boolean if a field has been set.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) HasExternalPowerAvailable() bool {
	if o != nil && !IsNil(o.ExternalPowerAvailable) {
		return true
	}

	return false
}

// SetExternalPowerAvailable gets a reference to the given int32 and assigns it to the ExternalPowerAvailable field.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) SetExternalPowerAvailable(v int32) {
	o.ExternalPowerAvailable = &v
}

// GetDisableTcpUdpLearnedPacketAcceleration returns the DisableTcpUdpLearnedPacketAcceleration field value if set, zero value otherwise.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetDisableTcpUdpLearnedPacketAcceleration() bool {
	if o == nil || IsNil(o.DisableTcpUdpLearnedPacketAcceleration) {
		var ret bool
		return ret
	}
	return *o.DisableTcpUdpLearnedPacketAcceleration
}

// GetDisableTcpUdpLearnedPacketAccelerationOk returns a tuple with the DisableTcpUdpLearnedPacketAcceleration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetDisableTcpUdpLearnedPacketAccelerationOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableTcpUdpLearnedPacketAcceleration) {
		return nil, false
	}
	return o.DisableTcpUdpLearnedPacketAcceleration, true
}

// HasDisableTcpUdpLearnedPacketAcceleration returns a boolean if a field has been set.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) HasDisableTcpUdpLearnedPacketAcceleration() bool {
	if o != nil && !IsNil(o.DisableTcpUdpLearnedPacketAcceleration) {
		return true
	}

	return false
}

// SetDisableTcpUdpLearnedPacketAcceleration gets a reference to the given bool and assigns it to the DisableTcpUdpLearnedPacketAcceleration field.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) SetDisableTcpUdpLearnedPacketAcceleration(v bool) {
	o.DisableTcpUdpLearnedPacketAcceleration = &v
}

// GetPacketQueueId returns the PacketQueueId field value if set, zero value otherwise.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetPacketQueueId() string {
	if o == nil || IsNil(o.PacketQueueId) {
		var ret string
		return ret
	}
	return *o.PacketQueueId
}

// GetPacketQueueIdOk returns a tuple with the PacketQueueId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetPacketQueueIdOk() (*string, bool) {
	if o == nil || IsNil(o.PacketQueueId) {
		return nil, false
	}
	return o.PacketQueueId, true
}

// HasPacketQueueId returns a boolean if a field has been set.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) HasPacketQueueId() bool {
	if o != nil && !IsNil(o.PacketQueueId) {
		return true
	}

	return false
}

// SetPacketQueueId gets a reference to the given string and assigns it to the PacketQueueId field.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) SetPacketQueueId(v string) {
	o.PacketQueueId = &v
}

// GetPacketQueueIdRefType returns the PacketQueueIdRefType field value if set, zero value otherwise.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetPacketQueueIdRefType() string {
	if o == nil || IsNil(o.PacketQueueIdRefType) {
		var ret string
		return ret
	}
	return *o.PacketQueueIdRefType
}

// GetPacketQueueIdRefTypeOk returns a tuple with the PacketQueueIdRefType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetPacketQueueIdRefTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PacketQueueIdRefType) {
		return nil, false
	}
	return o.PacketQueueIdRefType, true
}

// HasPacketQueueIdRefType returns a boolean if a field has been set.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) HasPacketQueueIdRefType() bool {
	if o != nil && !IsNil(o.PacketQueueIdRefType) {
		return true
	}

	return false
}

// SetPacketQueueIdRefType gets a reference to the given string and assigns it to the PacketQueueIdRefType field.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) SetPacketQueueIdRefType(v string) {
	o.PacketQueueIdRefType = &v
}

// GetSecurityAuditInterval returns the SecurityAuditInterval field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetSecurityAuditInterval() int32 {
	if o == nil || IsNil(o.SecurityAuditInterval.Get()) {
		var ret int32
		return ret
	}
	return *o.SecurityAuditInterval.Get()
}

// GetSecurityAuditIntervalOk returns a tuple with the SecurityAuditInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetSecurityAuditIntervalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SecurityAuditInterval.Get(), o.SecurityAuditInterval.IsSet()
}

// HasSecurityAuditInterval returns a boolean if a field has been set.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) HasSecurityAuditInterval() bool {
	if o != nil && o.SecurityAuditInterval.IsSet() {
		return true
	}

	return false
}

// SetSecurityAuditInterval gets a reference to the given NullableInt32 and assigns it to the SecurityAuditInterval field.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) SetSecurityAuditInterval(v int32) {
	o.SecurityAuditInterval.Set(&v)
}
// SetSecurityAuditIntervalNil sets the value for SecurityAuditInterval to be an explicit nil
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) SetSecurityAuditIntervalNil() {
	o.SecurityAuditInterval.Set(nil)
}

// UnsetSecurityAuditInterval ensures that no value is present for SecurityAuditInterval, not even an explicit nil
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) UnsetSecurityAuditInterval() {
	o.SecurityAuditInterval.Unset()
}

// GetCommitToFlashInterval returns the CommitToFlashInterval field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetCommitToFlashInterval() int32 {
	if o == nil || IsNil(o.CommitToFlashInterval.Get()) {
		var ret int32
		return ret
	}
	return *o.CommitToFlashInterval.Get()
}

// GetCommitToFlashIntervalOk returns a tuple with the CommitToFlashInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetCommitToFlashIntervalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CommitToFlashInterval.Get(), o.CommitToFlashInterval.IsSet()
}

// HasCommitToFlashInterval returns a boolean if a field has been set.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) HasCommitToFlashInterval() bool {
	if o != nil && o.CommitToFlashInterval.IsSet() {
		return true
	}

	return false
}

// SetCommitToFlashInterval gets a reference to the given NullableInt32 and assigns it to the CommitToFlashInterval field.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) SetCommitToFlashInterval(v int32) {
	o.CommitToFlashInterval.Set(&v)
}
// SetCommitToFlashIntervalNil sets the value for CommitToFlashInterval to be an explicit nil
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) SetCommitToFlashIntervalNil() {
	o.CommitToFlashInterval.Set(nil)
}

// UnsetCommitToFlashInterval ensures that no value is present for CommitToFlashInterval, not even an explicit nil
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) UnsetCommitToFlashInterval() {
	o.CommitToFlashInterval.Unset()
}

// GetRocev2 returns the Rocev2 field value if set, zero value otherwise.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetRocev2() bool {
	if o == nil || IsNil(o.Rocev2) {
		var ret bool
		return ret
	}
	return *o.Rocev2
}

// GetRocev2Ok returns a tuple with the Rocev2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetRocev2Ok() (*bool, bool) {
	if o == nil || IsNil(o.Rocev2) {
		return nil, false
	}
	return o.Rocev2, true
}

// HasRocev2 returns a boolean if a field has been set.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) HasRocev2() bool {
	if o != nil && !IsNil(o.Rocev2) {
		return true
	}

	return false
}

// SetRocev2 gets a reference to the given bool and assigns it to the Rocev2 field.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) SetRocev2(v bool) {
	o.Rocev2 = &v
}

// GetCutThroughSwitching returns the CutThroughSwitching field value if set, zero value otherwise.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetCutThroughSwitching() bool {
	if o == nil || IsNil(o.CutThroughSwitching) {
		var ret bool
		return ret
	}
	return *o.CutThroughSwitching
}

// GetCutThroughSwitchingOk returns a tuple with the CutThroughSwitching field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetCutThroughSwitchingOk() (*bool, bool) {
	if o == nil || IsNil(o.CutThroughSwitching) {
		return nil, false
	}
	return o.CutThroughSwitching, true
}

// HasCutThroughSwitching returns a boolean if a field has been set.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) HasCutThroughSwitching() bool {
	if o != nil && !IsNil(o.CutThroughSwitching) {
		return true
	}

	return false
}

// SetCutThroughSwitching gets a reference to the given bool and assigns it to the CutThroughSwitching field.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) SetCutThroughSwitching(v bool) {
	o.CutThroughSwitching = &v
}

// GetObjectProperties returns the ObjectProperties field value if set, zero value otherwise.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetObjectProperties() DevicesettingsPutRequestEthDeviceProfilesValueObjectProperties {
	if o == nil || IsNil(o.ObjectProperties) {
		var ret DevicesettingsPutRequestEthDeviceProfilesValueObjectProperties
		return ret
	}
	return *o.ObjectProperties
}

// GetObjectPropertiesOk returns a tuple with the ObjectProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetObjectPropertiesOk() (*DevicesettingsPutRequestEthDeviceProfilesValueObjectProperties, bool) {
	if o == nil || IsNil(o.ObjectProperties) {
		return nil, false
	}
	return o.ObjectProperties, true
}

// HasObjectProperties returns a boolean if a field has been set.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) HasObjectProperties() bool {
	if o != nil && !IsNil(o.ObjectProperties) {
		return true
	}

	return false
}

// SetObjectProperties gets a reference to the given DevicesettingsPutRequestEthDeviceProfilesValueObjectProperties and assigns it to the ObjectProperties field.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) SetObjectProperties(v DevicesettingsPutRequestEthDeviceProfilesValueObjectProperties) {
	o.ObjectProperties = &v
}

// GetHoldTimer returns the HoldTimer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetHoldTimer() int32 {
	if o == nil || IsNil(o.HoldTimer.Get()) {
		var ret int32
		return ret
	}
	return *o.HoldTimer.Get()
}

// GetHoldTimerOk returns a tuple with the HoldTimer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetHoldTimerOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.HoldTimer.Get(), o.HoldTimer.IsSet()
}

// HasHoldTimer returns a boolean if a field has been set.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) HasHoldTimer() bool {
	if o != nil && o.HoldTimer.IsSet() {
		return true
	}

	return false
}

// SetHoldTimer gets a reference to the given NullableInt32 and assigns it to the HoldTimer field.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) SetHoldTimer(v int32) {
	o.HoldTimer.Set(&v)
}
// SetHoldTimerNil sets the value for HoldTimer to be an explicit nil
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) SetHoldTimerNil() {
	o.HoldTimer.Set(nil)
}

// UnsetHoldTimer ensures that no value is present for HoldTimer, not even an explicit nil
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) UnsetHoldTimer() {
	o.HoldTimer.Unset()
}

// GetMacAgingTimerOverride returns the MacAgingTimerOverride field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetMacAgingTimerOverride() int32 {
	if o == nil || IsNil(o.MacAgingTimerOverride.Get()) {
		var ret int32
		return ret
	}
	return *o.MacAgingTimerOverride.Get()
}

// GetMacAgingTimerOverrideOk returns a tuple with the MacAgingTimerOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetMacAgingTimerOverrideOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MacAgingTimerOverride.Get(), o.MacAgingTimerOverride.IsSet()
}

// HasMacAgingTimerOverride returns a boolean if a field has been set.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) HasMacAgingTimerOverride() bool {
	if o != nil && o.MacAgingTimerOverride.IsSet() {
		return true
	}

	return false
}

// SetMacAgingTimerOverride gets a reference to the given NullableInt32 and assigns it to the MacAgingTimerOverride field.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) SetMacAgingTimerOverride(v int32) {
	o.MacAgingTimerOverride.Set(&v)
}
// SetMacAgingTimerOverrideNil sets the value for MacAgingTimerOverride to be an explicit nil
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) SetMacAgingTimerOverrideNil() {
	o.MacAgingTimerOverride.Set(nil)
}

// UnsetMacAgingTimerOverride ensures that no value is present for MacAgingTimerOverride, not even an explicit nil
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) UnsetMacAgingTimerOverride() {
	o.MacAgingTimerOverride.Unset()
}

// GetSpanningTreePriority returns the SpanningTreePriority field value if set, zero value otherwise.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetSpanningTreePriority() string {
	if o == nil || IsNil(o.SpanningTreePriority) {
		var ret string
		return ret
	}
	return *o.SpanningTreePriority
}

// GetSpanningTreePriorityOk returns a tuple with the SpanningTreePriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) GetSpanningTreePriorityOk() (*string, bool) {
	if o == nil || IsNil(o.SpanningTreePriority) {
		return nil, false
	}
	return o.SpanningTreePriority, true
}

// HasSpanningTreePriority returns a boolean if a field has been set.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) HasSpanningTreePriority() bool {
	if o != nil && !IsNil(o.SpanningTreePriority) {
		return true
	}

	return false
}

// SetSpanningTreePriority gets a reference to the given string and assigns it to the SpanningTreePriority field.
func (o *DevicesettingsPutRequestEthDeviceProfilesValue) SetSpanningTreePriority(v string) {
	o.SpanningTreePriority = &v
}

func (o DevicesettingsPutRequestEthDeviceProfilesValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DevicesettingsPutRequestEthDeviceProfilesValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	if !IsNil(o.UsageThreshold) {
		toSerialize["usage_threshold"] = o.UsageThreshold
	}
	if !IsNil(o.ExternalBatteryPowerAvailable) {
		toSerialize["external_battery_power_available"] = o.ExternalBatteryPowerAvailable
	}
	if !IsNil(o.ExternalPowerAvailable) {
		toSerialize["external_power_available"] = o.ExternalPowerAvailable
	}
	if !IsNil(o.DisableTcpUdpLearnedPacketAcceleration) {
		toSerialize["disable_tcp_udp_learned_packet_acceleration"] = o.DisableTcpUdpLearnedPacketAcceleration
	}
	if !IsNil(o.PacketQueueId) {
		toSerialize["packet_queue_id"] = o.PacketQueueId
	}
	if !IsNil(o.PacketQueueIdRefType) {
		toSerialize["packet_queue_id_ref_type_"] = o.PacketQueueIdRefType
	}
	if o.SecurityAuditInterval.IsSet() {
		toSerialize["security_audit_interval"] = o.SecurityAuditInterval.Get()
	}
	if o.CommitToFlashInterval.IsSet() {
		toSerialize["commit_to_flash_interval"] = o.CommitToFlashInterval.Get()
	}
	if !IsNil(o.Rocev2) {
		toSerialize["rocev2"] = o.Rocev2
	}
	if !IsNil(o.CutThroughSwitching) {
		toSerialize["cut_through_switching"] = o.CutThroughSwitching
	}
	if !IsNil(o.ObjectProperties) {
		toSerialize["object_properties"] = o.ObjectProperties
	}
	if o.HoldTimer.IsSet() {
		toSerialize["hold_timer"] = o.HoldTimer.Get()
	}
	if o.MacAgingTimerOverride.IsSet() {
		toSerialize["mac_aging_timer_override"] = o.MacAgingTimerOverride.Get()
	}
	if !IsNil(o.SpanningTreePriority) {
		toSerialize["spanning_tree_priority"] = o.SpanningTreePriority
	}
	return toSerialize, nil
}

type NullableDevicesettingsPutRequestEthDeviceProfilesValue struct {
	value *DevicesettingsPutRequestEthDeviceProfilesValue
	isSet bool
}

func (v NullableDevicesettingsPutRequestEthDeviceProfilesValue) Get() *DevicesettingsPutRequestEthDeviceProfilesValue {
	return v.value
}

func (v *NullableDevicesettingsPutRequestEthDeviceProfilesValue) Set(val *DevicesettingsPutRequestEthDeviceProfilesValue) {
	v.value = val
	v.isSet = true
}

func (v NullableDevicesettingsPutRequestEthDeviceProfilesValue) IsSet() bool {
	return v.isSet
}

func (v *NullableDevicesettingsPutRequestEthDeviceProfilesValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDevicesettingsPutRequestEthDeviceProfilesValue(val *DevicesettingsPutRequestEthDeviceProfilesValue) *NullableDevicesettingsPutRequestEthDeviceProfilesValue {
	return &NullableDevicesettingsPutRequestEthDeviceProfilesValue{value: val, isSet: true}
}

func (v NullableDevicesettingsPutRequestEthDeviceProfilesValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDevicesettingsPutRequestEthDeviceProfilesValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


