/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Ipv6prefixlistsPutRequestIpv6PrefixListValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Ipv6prefixlistsPutRequestIpv6PrefixListValue{}

// Ipv6prefixlistsPutRequestIpv6PrefixListValue struct for Ipv6prefixlistsPutRequestIpv6PrefixListValue
type Ipv6prefixlistsPutRequestIpv6PrefixListValue struct {
	// Object Name. Must be unique.
	Name *string `json:"name,omitempty"`
	// Enable object.
	Enable *bool `json:"enable,omitempty"`
	Lists []Ipv6prefixlistsPutRequestIpv6PrefixListValueListsInner `json:"lists,omitempty"`
	ObjectProperties *AclsPutRequestIpFilterValueObjectProperties `json:"object_properties,omitempty"`
}

// NewIpv6prefixlistsPutRequestIpv6PrefixListValue instantiates a new Ipv6prefixlistsPutRequestIpv6PrefixListValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpv6prefixlistsPutRequestIpv6PrefixListValue() *Ipv6prefixlistsPutRequestIpv6PrefixListValue {
	this := Ipv6prefixlistsPutRequestIpv6PrefixListValue{}
	var name string = ""
	this.Name = &name
	var enable bool = false
	this.Enable = &enable
	return &this
}

// NewIpv6prefixlistsPutRequestIpv6PrefixListValueWithDefaults instantiates a new Ipv6prefixlistsPutRequestIpv6PrefixListValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpv6prefixlistsPutRequestIpv6PrefixListValueWithDefaults() *Ipv6prefixlistsPutRequestIpv6PrefixListValue {
	this := Ipv6prefixlistsPutRequestIpv6PrefixListValue{}
	var name string = ""
	this.Name = &name
	var enable bool = false
	this.Enable = &enable
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Ipv6prefixlistsPutRequestIpv6PrefixListValue) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ipv6prefixlistsPutRequestIpv6PrefixListValue) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Ipv6prefixlistsPutRequestIpv6PrefixListValue) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Ipv6prefixlistsPutRequestIpv6PrefixListValue) SetName(v string) {
	o.Name = &v
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *Ipv6prefixlistsPutRequestIpv6PrefixListValue) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ipv6prefixlistsPutRequestIpv6PrefixListValue) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *Ipv6prefixlistsPutRequestIpv6PrefixListValue) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *Ipv6prefixlistsPutRequestIpv6PrefixListValue) SetEnable(v bool) {
	o.Enable = &v
}

// GetLists returns the Lists field value if set, zero value otherwise.
func (o *Ipv6prefixlistsPutRequestIpv6PrefixListValue) GetLists() []Ipv6prefixlistsPutRequestIpv6PrefixListValueListsInner {
	if o == nil || IsNil(o.Lists) {
		var ret []Ipv6prefixlistsPutRequestIpv6PrefixListValueListsInner
		return ret
	}
	return o.Lists
}

// GetListsOk returns a tuple with the Lists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ipv6prefixlistsPutRequestIpv6PrefixListValue) GetListsOk() ([]Ipv6prefixlistsPutRequestIpv6PrefixListValueListsInner, bool) {
	if o == nil || IsNil(o.Lists) {
		return nil, false
	}
	return o.Lists, true
}

// HasLists returns a boolean if a field has been set.
func (o *Ipv6prefixlistsPutRequestIpv6PrefixListValue) HasLists() bool {
	if o != nil && !IsNil(o.Lists) {
		return true
	}

	return false
}

// SetLists gets a reference to the given []Ipv6prefixlistsPutRequestIpv6PrefixListValueListsInner and assigns it to the Lists field.
func (o *Ipv6prefixlistsPutRequestIpv6PrefixListValue) SetLists(v []Ipv6prefixlistsPutRequestIpv6PrefixListValueListsInner) {
	o.Lists = v
}

// GetObjectProperties returns the ObjectProperties field value if set, zero value otherwise.
func (o *Ipv6prefixlistsPutRequestIpv6PrefixListValue) GetObjectProperties() AclsPutRequestIpFilterValueObjectProperties {
	if o == nil || IsNil(o.ObjectProperties) {
		var ret AclsPutRequestIpFilterValueObjectProperties
		return ret
	}
	return *o.ObjectProperties
}

// GetObjectPropertiesOk returns a tuple with the ObjectProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ipv6prefixlistsPutRequestIpv6PrefixListValue) GetObjectPropertiesOk() (*AclsPutRequestIpFilterValueObjectProperties, bool) {
	if o == nil || IsNil(o.ObjectProperties) {
		return nil, false
	}
	return o.ObjectProperties, true
}

// HasObjectProperties returns a boolean if a field has been set.
func (o *Ipv6prefixlistsPutRequestIpv6PrefixListValue) HasObjectProperties() bool {
	if o != nil && !IsNil(o.ObjectProperties) {
		return true
	}

	return false
}

// SetObjectProperties gets a reference to the given AclsPutRequestIpFilterValueObjectProperties and assigns it to the ObjectProperties field.
func (o *Ipv6prefixlistsPutRequestIpv6PrefixListValue) SetObjectProperties(v AclsPutRequestIpFilterValueObjectProperties) {
	o.ObjectProperties = &v
}

func (o Ipv6prefixlistsPutRequestIpv6PrefixListValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Ipv6prefixlistsPutRequestIpv6PrefixListValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.Lists) {
		toSerialize["lists"] = o.Lists
	}
	if !IsNil(o.ObjectProperties) {
		toSerialize["object_properties"] = o.ObjectProperties
	}
	return toSerialize, nil
}

type NullableIpv6prefixlistsPutRequestIpv6PrefixListValue struct {
	value *Ipv6prefixlistsPutRequestIpv6PrefixListValue
	isSet bool
}

func (v NullableIpv6prefixlistsPutRequestIpv6PrefixListValue) Get() *Ipv6prefixlistsPutRequestIpv6PrefixListValue {
	return v.value
}

func (v *NullableIpv6prefixlistsPutRequestIpv6PrefixListValue) Set(val *Ipv6prefixlistsPutRequestIpv6PrefixListValue) {
	v.value = val
	v.isSet = true
}

func (v NullableIpv6prefixlistsPutRequestIpv6PrefixListValue) IsSet() bool {
	return v.isSet
}

func (v *NullableIpv6prefixlistsPutRequestIpv6PrefixListValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpv6prefixlistsPutRequestIpv6PrefixListValue(val *Ipv6prefixlistsPutRequestIpv6PrefixListValue) *NullableIpv6prefixlistsPutRequestIpv6PrefixListValue {
	return &NullableIpv6prefixlistsPutRequestIpv6PrefixListValue{value: val, isSet: true}
}

func (v NullableIpv6prefixlistsPutRequestIpv6PrefixListValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpv6prefixlistsPutRequestIpv6PrefixListValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


