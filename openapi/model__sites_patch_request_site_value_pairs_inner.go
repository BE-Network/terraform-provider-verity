/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SitesPatchRequestSiteValuePairsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SitesPatchRequestSiteValuePairsInner{}

// SitesPatchRequestSiteValuePairsInner struct for SitesPatchRequestSiteValuePairsInner
type SitesPatchRequestSiteValuePairsInner struct {
	// Object Name. Must be unique.
	Name *string `json:"name,omitempty"`
	// Endpoint
	Switchpoint1 *string `json:"switchpoint_1,omitempty"`
	// Object type for switchpoint_1 field
	Switchpoint1RefType *string `json:"switchpoint_1_ref_type_,omitempty"`
	// Endpoint
	Switchpoint2 *string `json:"switchpoint_2,omitempty"`
	// Object type for switchpoint_2 field
	Switchpoint2RefType *string `json:"switchpoint_2_ref_type_,omitempty"`
	// LAG Group
	LagGroup *string `json:"lag_group,omitempty"`
	// Object type for lag_group field
	LagGroupRefType *string `json:"lag_group_ref_type_,omitempty"`
	// LAG Pair
	IsWhiteboxPair *bool `json:"is_whitebox_pair,omitempty"`
	// The index identifying the object. Zero if you want to add an object to the list.
	Index *int32 `json:"index,omitempty"`
}

// NewSitesPatchRequestSiteValuePairsInner instantiates a new SitesPatchRequestSiteValuePairsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSitesPatchRequestSiteValuePairsInner() *SitesPatchRequestSiteValuePairsInner {
	this := SitesPatchRequestSiteValuePairsInner{}
	var name string = ""
	this.Name = &name
	var switchpoint1 string = ""
	this.Switchpoint1 = &switchpoint1
	var switchpoint2 string = ""
	this.Switchpoint2 = &switchpoint2
	var lagGroup string = ""
	this.LagGroup = &lagGroup
	var isWhiteboxPair bool = false
	this.IsWhiteboxPair = &isWhiteboxPair
	return &this
}

// NewSitesPatchRequestSiteValuePairsInnerWithDefaults instantiates a new SitesPatchRequestSiteValuePairsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSitesPatchRequestSiteValuePairsInnerWithDefaults() *SitesPatchRequestSiteValuePairsInner {
	this := SitesPatchRequestSiteValuePairsInner{}
	var name string = ""
	this.Name = &name
	var switchpoint1 string = ""
	this.Switchpoint1 = &switchpoint1
	var switchpoint2 string = ""
	this.Switchpoint2 = &switchpoint2
	var lagGroup string = ""
	this.LagGroup = &lagGroup
	var isWhiteboxPair bool = false
	this.IsWhiteboxPair = &isWhiteboxPair
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SitesPatchRequestSiteValuePairsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SitesPatchRequestSiteValuePairsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SitesPatchRequestSiteValuePairsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SitesPatchRequestSiteValuePairsInner) SetName(v string) {
	o.Name = &v
}

// GetSwitchpoint1 returns the Switchpoint1 field value if set, zero value otherwise.
func (o *SitesPatchRequestSiteValuePairsInner) GetSwitchpoint1() string {
	if o == nil || IsNil(o.Switchpoint1) {
		var ret string
		return ret
	}
	return *o.Switchpoint1
}

// GetSwitchpoint1Ok returns a tuple with the Switchpoint1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SitesPatchRequestSiteValuePairsInner) GetSwitchpoint1Ok() (*string, bool) {
	if o == nil || IsNil(o.Switchpoint1) {
		return nil, false
	}
	return o.Switchpoint1, true
}

// HasSwitchpoint1 returns a boolean if a field has been set.
func (o *SitesPatchRequestSiteValuePairsInner) HasSwitchpoint1() bool {
	if o != nil && !IsNil(o.Switchpoint1) {
		return true
	}

	return false
}

// SetSwitchpoint1 gets a reference to the given string and assigns it to the Switchpoint1 field.
func (o *SitesPatchRequestSiteValuePairsInner) SetSwitchpoint1(v string) {
	o.Switchpoint1 = &v
}

// GetSwitchpoint1RefType returns the Switchpoint1RefType field value if set, zero value otherwise.
func (o *SitesPatchRequestSiteValuePairsInner) GetSwitchpoint1RefType() string {
	if o == nil || IsNil(o.Switchpoint1RefType) {
		var ret string
		return ret
	}
	return *o.Switchpoint1RefType
}

// GetSwitchpoint1RefTypeOk returns a tuple with the Switchpoint1RefType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SitesPatchRequestSiteValuePairsInner) GetSwitchpoint1RefTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Switchpoint1RefType) {
		return nil, false
	}
	return o.Switchpoint1RefType, true
}

// HasSwitchpoint1RefType returns a boolean if a field has been set.
func (o *SitesPatchRequestSiteValuePairsInner) HasSwitchpoint1RefType() bool {
	if o != nil && !IsNil(o.Switchpoint1RefType) {
		return true
	}

	return false
}

// SetSwitchpoint1RefType gets a reference to the given string and assigns it to the Switchpoint1RefType field.
func (o *SitesPatchRequestSiteValuePairsInner) SetSwitchpoint1RefType(v string) {
	o.Switchpoint1RefType = &v
}

// GetSwitchpoint2 returns the Switchpoint2 field value if set, zero value otherwise.
func (o *SitesPatchRequestSiteValuePairsInner) GetSwitchpoint2() string {
	if o == nil || IsNil(o.Switchpoint2) {
		var ret string
		return ret
	}
	return *o.Switchpoint2
}

// GetSwitchpoint2Ok returns a tuple with the Switchpoint2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SitesPatchRequestSiteValuePairsInner) GetSwitchpoint2Ok() (*string, bool) {
	if o == nil || IsNil(o.Switchpoint2) {
		return nil, false
	}
	return o.Switchpoint2, true
}

// HasSwitchpoint2 returns a boolean if a field has been set.
func (o *SitesPatchRequestSiteValuePairsInner) HasSwitchpoint2() bool {
	if o != nil && !IsNil(o.Switchpoint2) {
		return true
	}

	return false
}

// SetSwitchpoint2 gets a reference to the given string and assigns it to the Switchpoint2 field.
func (o *SitesPatchRequestSiteValuePairsInner) SetSwitchpoint2(v string) {
	o.Switchpoint2 = &v
}

// GetSwitchpoint2RefType returns the Switchpoint2RefType field value if set, zero value otherwise.
func (o *SitesPatchRequestSiteValuePairsInner) GetSwitchpoint2RefType() string {
	if o == nil || IsNil(o.Switchpoint2RefType) {
		var ret string
		return ret
	}
	return *o.Switchpoint2RefType
}

// GetSwitchpoint2RefTypeOk returns a tuple with the Switchpoint2RefType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SitesPatchRequestSiteValuePairsInner) GetSwitchpoint2RefTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Switchpoint2RefType) {
		return nil, false
	}
	return o.Switchpoint2RefType, true
}

// HasSwitchpoint2RefType returns a boolean if a field has been set.
func (o *SitesPatchRequestSiteValuePairsInner) HasSwitchpoint2RefType() bool {
	if o != nil && !IsNil(o.Switchpoint2RefType) {
		return true
	}

	return false
}

// SetSwitchpoint2RefType gets a reference to the given string and assigns it to the Switchpoint2RefType field.
func (o *SitesPatchRequestSiteValuePairsInner) SetSwitchpoint2RefType(v string) {
	o.Switchpoint2RefType = &v
}

// GetLagGroup returns the LagGroup field value if set, zero value otherwise.
func (o *SitesPatchRequestSiteValuePairsInner) GetLagGroup() string {
	if o == nil || IsNil(o.LagGroup) {
		var ret string
		return ret
	}
	return *o.LagGroup
}

// GetLagGroupOk returns a tuple with the LagGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SitesPatchRequestSiteValuePairsInner) GetLagGroupOk() (*string, bool) {
	if o == nil || IsNil(o.LagGroup) {
		return nil, false
	}
	return o.LagGroup, true
}

// HasLagGroup returns a boolean if a field has been set.
func (o *SitesPatchRequestSiteValuePairsInner) HasLagGroup() bool {
	if o != nil && !IsNil(o.LagGroup) {
		return true
	}

	return false
}

// SetLagGroup gets a reference to the given string and assigns it to the LagGroup field.
func (o *SitesPatchRequestSiteValuePairsInner) SetLagGroup(v string) {
	o.LagGroup = &v
}

// GetLagGroupRefType returns the LagGroupRefType field value if set, zero value otherwise.
func (o *SitesPatchRequestSiteValuePairsInner) GetLagGroupRefType() string {
	if o == nil || IsNil(o.LagGroupRefType) {
		var ret string
		return ret
	}
	return *o.LagGroupRefType
}

// GetLagGroupRefTypeOk returns a tuple with the LagGroupRefType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SitesPatchRequestSiteValuePairsInner) GetLagGroupRefTypeOk() (*string, bool) {
	if o == nil || IsNil(o.LagGroupRefType) {
		return nil, false
	}
	return o.LagGroupRefType, true
}

// HasLagGroupRefType returns a boolean if a field has been set.
func (o *SitesPatchRequestSiteValuePairsInner) HasLagGroupRefType() bool {
	if o != nil && !IsNil(o.LagGroupRefType) {
		return true
	}

	return false
}

// SetLagGroupRefType gets a reference to the given string and assigns it to the LagGroupRefType field.
func (o *SitesPatchRequestSiteValuePairsInner) SetLagGroupRefType(v string) {
	o.LagGroupRefType = &v
}

// GetIsWhiteboxPair returns the IsWhiteboxPair field value if set, zero value otherwise.
func (o *SitesPatchRequestSiteValuePairsInner) GetIsWhiteboxPair() bool {
	if o == nil || IsNil(o.IsWhiteboxPair) {
		var ret bool
		return ret
	}
	return *o.IsWhiteboxPair
}

// GetIsWhiteboxPairOk returns a tuple with the IsWhiteboxPair field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SitesPatchRequestSiteValuePairsInner) GetIsWhiteboxPairOk() (*bool, bool) {
	if o == nil || IsNil(o.IsWhiteboxPair) {
		return nil, false
	}
	return o.IsWhiteboxPair, true
}

// HasIsWhiteboxPair returns a boolean if a field has been set.
func (o *SitesPatchRequestSiteValuePairsInner) HasIsWhiteboxPair() bool {
	if o != nil && !IsNil(o.IsWhiteboxPair) {
		return true
	}

	return false
}

// SetIsWhiteboxPair gets a reference to the given bool and assigns it to the IsWhiteboxPair field.
func (o *SitesPatchRequestSiteValuePairsInner) SetIsWhiteboxPair(v bool) {
	o.IsWhiteboxPair = &v
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *SitesPatchRequestSiteValuePairsInner) GetIndex() int32 {
	if o == nil || IsNil(o.Index) {
		var ret int32
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SitesPatchRequestSiteValuePairsInner) GetIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.Index) {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *SitesPatchRequestSiteValuePairsInner) HasIndex() bool {
	if o != nil && !IsNil(o.Index) {
		return true
	}

	return false
}

// SetIndex gets a reference to the given int32 and assigns it to the Index field.
func (o *SitesPatchRequestSiteValuePairsInner) SetIndex(v int32) {
	o.Index = &v
}

func (o SitesPatchRequestSiteValuePairsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SitesPatchRequestSiteValuePairsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Switchpoint1) {
		toSerialize["switchpoint_1"] = o.Switchpoint1
	}
	if !IsNil(o.Switchpoint1RefType) {
		toSerialize["switchpoint_1_ref_type_"] = o.Switchpoint1RefType
	}
	if !IsNil(o.Switchpoint2) {
		toSerialize["switchpoint_2"] = o.Switchpoint2
	}
	if !IsNil(o.Switchpoint2RefType) {
		toSerialize["switchpoint_2_ref_type_"] = o.Switchpoint2RefType
	}
	if !IsNil(o.LagGroup) {
		toSerialize["lag_group"] = o.LagGroup
	}
	if !IsNil(o.LagGroupRefType) {
		toSerialize["lag_group_ref_type_"] = o.LagGroupRefType
	}
	if !IsNil(o.IsWhiteboxPair) {
		toSerialize["is_whitebox_pair"] = o.IsWhiteboxPair
	}
	if !IsNil(o.Index) {
		toSerialize["index"] = o.Index
	}
	return toSerialize, nil
}

type NullableSitesPatchRequestSiteValuePairsInner struct {
	value *SitesPatchRequestSiteValuePairsInner
	isSet bool
}

func (v NullableSitesPatchRequestSiteValuePairsInner) Get() *SitesPatchRequestSiteValuePairsInner {
	return v.value
}

func (v *NullableSitesPatchRequestSiteValuePairsInner) Set(val *SitesPatchRequestSiteValuePairsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSitesPatchRequestSiteValuePairsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSitesPatchRequestSiteValuePairsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSitesPatchRequestSiteValuePairsInner(val *SitesPatchRequestSiteValuePairsInner) *NullableSitesPatchRequestSiteValuePairsInner {
	return &NullableSitesPatchRequestSiteValuePairsInner{value: val, isSet: true}
}

func (v NullableSitesPatchRequestSiteValuePairsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSitesPatchRequestSiteValuePairsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


