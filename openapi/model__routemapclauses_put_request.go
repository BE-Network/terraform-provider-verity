/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RoutemapclausesPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutemapclausesPutRequest{}

// RoutemapclausesPutRequest struct for RoutemapclausesPutRequest
type RoutemapclausesPutRequest struct {
	RouteMapClause *map[string]RoutemapclausesPutRequestRouteMapClauseValue `json:"route_map_clause,omitempty"`
}

// NewRoutemapclausesPutRequest instantiates a new RoutemapclausesPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutemapclausesPutRequest() *RoutemapclausesPutRequest {
	this := RoutemapclausesPutRequest{}
	return &this
}

// NewRoutemapclausesPutRequestWithDefaults instantiates a new RoutemapclausesPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutemapclausesPutRequestWithDefaults() *RoutemapclausesPutRequest {
	this := RoutemapclausesPutRequest{}
	return &this
}

// GetRouteMapClause returns the RouteMapClause field value if set, zero value otherwise.
func (o *RoutemapclausesPutRequest) GetRouteMapClause() map[string]RoutemapclausesPutRequestRouteMapClauseValue {
	if o == nil || IsNil(o.RouteMapClause) {
		var ret map[string]RoutemapclausesPutRequestRouteMapClauseValue
		return ret
	}
	return *o.RouteMapClause
}

// GetRouteMapClauseOk returns a tuple with the RouteMapClause field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutemapclausesPutRequest) GetRouteMapClauseOk() (*map[string]RoutemapclausesPutRequestRouteMapClauseValue, bool) {
	if o == nil || IsNil(o.RouteMapClause) {
		return nil, false
	}
	return o.RouteMapClause, true
}

// HasRouteMapClause returns a boolean if a field has been set.
func (o *RoutemapclausesPutRequest) HasRouteMapClause() bool {
	if o != nil && !IsNil(o.RouteMapClause) {
		return true
	}

	return false
}

// SetRouteMapClause gets a reference to the given map[string]RoutemapclausesPutRequestRouteMapClauseValue and assigns it to the RouteMapClause field.
func (o *RoutemapclausesPutRequest) SetRouteMapClause(v map[string]RoutemapclausesPutRequestRouteMapClauseValue) {
	o.RouteMapClause = &v
}

func (o RoutemapclausesPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutemapclausesPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RouteMapClause) {
		toSerialize["route_map_clause"] = o.RouteMapClause
	}
	return toSerialize, nil
}

type NullableRoutemapclausesPutRequest struct {
	value *RoutemapclausesPutRequest
	isSet bool
}

func (v NullableRoutemapclausesPutRequest) Get() *RoutemapclausesPutRequest {
	return v.value
}

func (v *NullableRoutemapclausesPutRequest) Set(val *RoutemapclausesPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutemapclausesPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutemapclausesPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutemapclausesPutRequest(val *RoutemapclausesPutRequest) *NullableRoutemapclausesPutRequest {
	return &NullableRoutemapclausesPutRequest{value: val, isSet: true}
}

func (v NullableRoutemapclausesPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutemapclausesPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


