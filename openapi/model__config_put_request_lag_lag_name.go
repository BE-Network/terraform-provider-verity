/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConfigPutRequestLagLagName type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigPutRequestLagLagName{}

// ConfigPutRequestLagLagName struct for ConfigPutRequestLagLagName
type ConfigPutRequestLagLagName struct {
	// Object Name. Must be unique.
	Name *string `json:"name,omitempty"`
	// Enable object. It's highly recommended to set this value to true so that validation on the object will be ran.
	Enable *bool `json:"enable,omitempty"`
	// Indicates this LAG is used for peer-to-peer Peer-LAG/IDS link
	IsPeerLink *bool `json:"is_peer_link,omitempty"`
	// Choose the color to display the connectors on the network view
	Color *string `json:"color,omitempty"`
	// LACP
	Lacp *bool `json:"lacp,omitempty"`
	// Choose an Eth Port Profile
	EthPortProfile *string `json:"eth_port_profile,omitempty"`
	// Object type for eth_port_profile field
	EthPortProfileRefType *string `json:"eth_port_profile_ref_type_,omitempty"`
	// For peer-peer LAGs. The VLAN used for control
	PeerLinkVlan NullableInt32 `json:"peer_link_vlan,omitempty"`
	// Allows an active member interface to establish a connection with a peer interface before the port channel receives the LACP protocol negotiation from the peer.
	Fallback *bool `json:"fallback,omitempty"`
	// Send LACP packets every second (if disabled, packets are sent every 30 seconds)
	FastRate *bool `json:"fast_rate,omitempty"`
	ObjectProperties map[string]interface{} `json:"object_properties,omitempty"`
}

// NewConfigPutRequestLagLagName instantiates a new ConfigPutRequestLagLagName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigPutRequestLagLagName() *ConfigPutRequestLagLagName {
	this := ConfigPutRequestLagLagName{}
	var name string = ""
	this.Name = &name
	var enable bool = false
	this.Enable = &enable
	var isPeerLink bool = false
	this.IsPeerLink = &isPeerLink
	var color string = "anakiwa"
	this.Color = &color
	var lacp bool = true
	this.Lacp = &lacp
	var ethPortProfile string = ""
	this.EthPortProfile = &ethPortProfile
	var fallback bool = false
	this.Fallback = &fallback
	var fastRate bool = false
	this.FastRate = &fastRate
	return &this
}

// NewConfigPutRequestLagLagNameWithDefaults instantiates a new ConfigPutRequestLagLagName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigPutRequestLagLagNameWithDefaults() *ConfigPutRequestLagLagName {
	this := ConfigPutRequestLagLagName{}
	var name string = ""
	this.Name = &name
	var enable bool = false
	this.Enable = &enable
	var isPeerLink bool = false
	this.IsPeerLink = &isPeerLink
	var color string = "anakiwa"
	this.Color = &color
	var lacp bool = true
	this.Lacp = &lacp
	var ethPortProfile string = ""
	this.EthPortProfile = &ethPortProfile
	var fallback bool = false
	this.Fallback = &fallback
	var fastRate bool = false
	this.FastRate = &fastRate
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ConfigPutRequestLagLagName) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestLagLagName) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ConfigPutRequestLagLagName) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ConfigPutRequestLagLagName) SetName(v string) {
	o.Name = &v
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *ConfigPutRequestLagLagName) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestLagLagName) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *ConfigPutRequestLagLagName) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *ConfigPutRequestLagLagName) SetEnable(v bool) {
	o.Enable = &v
}

// GetIsPeerLink returns the IsPeerLink field value if set, zero value otherwise.
func (o *ConfigPutRequestLagLagName) GetIsPeerLink() bool {
	if o == nil || IsNil(o.IsPeerLink) {
		var ret bool
		return ret
	}
	return *o.IsPeerLink
}

// GetIsPeerLinkOk returns a tuple with the IsPeerLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestLagLagName) GetIsPeerLinkOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPeerLink) {
		return nil, false
	}
	return o.IsPeerLink, true
}

// HasIsPeerLink returns a boolean if a field has been set.
func (o *ConfigPutRequestLagLagName) HasIsPeerLink() bool {
	if o != nil && !IsNil(o.IsPeerLink) {
		return true
	}

	return false
}

// SetIsPeerLink gets a reference to the given bool and assigns it to the IsPeerLink field.
func (o *ConfigPutRequestLagLagName) SetIsPeerLink(v bool) {
	o.IsPeerLink = &v
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *ConfigPutRequestLagLagName) GetColor() string {
	if o == nil || IsNil(o.Color) {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestLagLagName) GetColorOk() (*string, bool) {
	if o == nil || IsNil(o.Color) {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *ConfigPutRequestLagLagName) HasColor() bool {
	if o != nil && !IsNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *ConfigPutRequestLagLagName) SetColor(v string) {
	o.Color = &v
}

// GetLacp returns the Lacp field value if set, zero value otherwise.
func (o *ConfigPutRequestLagLagName) GetLacp() bool {
	if o == nil || IsNil(o.Lacp) {
		var ret bool
		return ret
	}
	return *o.Lacp
}

// GetLacpOk returns a tuple with the Lacp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestLagLagName) GetLacpOk() (*bool, bool) {
	if o == nil || IsNil(o.Lacp) {
		return nil, false
	}
	return o.Lacp, true
}

// HasLacp returns a boolean if a field has been set.
func (o *ConfigPutRequestLagLagName) HasLacp() bool {
	if o != nil && !IsNil(o.Lacp) {
		return true
	}

	return false
}

// SetLacp gets a reference to the given bool and assigns it to the Lacp field.
func (o *ConfigPutRequestLagLagName) SetLacp(v bool) {
	o.Lacp = &v
}

// GetEthPortProfile returns the EthPortProfile field value if set, zero value otherwise.
func (o *ConfigPutRequestLagLagName) GetEthPortProfile() string {
	if o == nil || IsNil(o.EthPortProfile) {
		var ret string
		return ret
	}
	return *o.EthPortProfile
}

// GetEthPortProfileOk returns a tuple with the EthPortProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestLagLagName) GetEthPortProfileOk() (*string, bool) {
	if o == nil || IsNil(o.EthPortProfile) {
		return nil, false
	}
	return o.EthPortProfile, true
}

// HasEthPortProfile returns a boolean if a field has been set.
func (o *ConfigPutRequestLagLagName) HasEthPortProfile() bool {
	if o != nil && !IsNil(o.EthPortProfile) {
		return true
	}

	return false
}

// SetEthPortProfile gets a reference to the given string and assigns it to the EthPortProfile field.
func (o *ConfigPutRequestLagLagName) SetEthPortProfile(v string) {
	o.EthPortProfile = &v
}

// GetEthPortProfileRefType returns the EthPortProfileRefType field value if set, zero value otherwise.
func (o *ConfigPutRequestLagLagName) GetEthPortProfileRefType() string {
	if o == nil || IsNil(o.EthPortProfileRefType) {
		var ret string
		return ret
	}
	return *o.EthPortProfileRefType
}

// GetEthPortProfileRefTypeOk returns a tuple with the EthPortProfileRefType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestLagLagName) GetEthPortProfileRefTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EthPortProfileRefType) {
		return nil, false
	}
	return o.EthPortProfileRefType, true
}

// HasEthPortProfileRefType returns a boolean if a field has been set.
func (o *ConfigPutRequestLagLagName) HasEthPortProfileRefType() bool {
	if o != nil && !IsNil(o.EthPortProfileRefType) {
		return true
	}

	return false
}

// SetEthPortProfileRefType gets a reference to the given string and assigns it to the EthPortProfileRefType field.
func (o *ConfigPutRequestLagLagName) SetEthPortProfileRefType(v string) {
	o.EthPortProfileRefType = &v
}

// GetPeerLinkVlan returns the PeerLinkVlan field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigPutRequestLagLagName) GetPeerLinkVlan() int32 {
	if o == nil || IsNil(o.PeerLinkVlan.Get()) {
		var ret int32
		return ret
	}
	return *o.PeerLinkVlan.Get()
}

// GetPeerLinkVlanOk returns a tuple with the PeerLinkVlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigPutRequestLagLagName) GetPeerLinkVlanOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PeerLinkVlan.Get(), o.PeerLinkVlan.IsSet()
}

// HasPeerLinkVlan returns a boolean if a field has been set.
func (o *ConfigPutRequestLagLagName) HasPeerLinkVlan() bool {
	if o != nil && o.PeerLinkVlan.IsSet() {
		return true
	}

	return false
}

// SetPeerLinkVlan gets a reference to the given NullableInt32 and assigns it to the PeerLinkVlan field.
func (o *ConfigPutRequestLagLagName) SetPeerLinkVlan(v int32) {
	o.PeerLinkVlan.Set(&v)
}
// SetPeerLinkVlanNil sets the value for PeerLinkVlan to be an explicit nil
func (o *ConfigPutRequestLagLagName) SetPeerLinkVlanNil() {
	o.PeerLinkVlan.Set(nil)
}

// UnsetPeerLinkVlan ensures that no value is present for PeerLinkVlan, not even an explicit nil
func (o *ConfigPutRequestLagLagName) UnsetPeerLinkVlan() {
	o.PeerLinkVlan.Unset()
}

// GetFallback returns the Fallback field value if set, zero value otherwise.
func (o *ConfigPutRequestLagLagName) GetFallback() bool {
	if o == nil || IsNil(o.Fallback) {
		var ret bool
		return ret
	}
	return *o.Fallback
}

// GetFallbackOk returns a tuple with the Fallback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestLagLagName) GetFallbackOk() (*bool, bool) {
	if o == nil || IsNil(o.Fallback) {
		return nil, false
	}
	return o.Fallback, true
}

// HasFallback returns a boolean if a field has been set.
func (o *ConfigPutRequestLagLagName) HasFallback() bool {
	if o != nil && !IsNil(o.Fallback) {
		return true
	}

	return false
}

// SetFallback gets a reference to the given bool and assigns it to the Fallback field.
func (o *ConfigPutRequestLagLagName) SetFallback(v bool) {
	o.Fallback = &v
}

// GetFastRate returns the FastRate field value if set, zero value otherwise.
func (o *ConfigPutRequestLagLagName) GetFastRate() bool {
	if o == nil || IsNil(o.FastRate) {
		var ret bool
		return ret
	}
	return *o.FastRate
}

// GetFastRateOk returns a tuple with the FastRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestLagLagName) GetFastRateOk() (*bool, bool) {
	if o == nil || IsNil(o.FastRate) {
		return nil, false
	}
	return o.FastRate, true
}

// HasFastRate returns a boolean if a field has been set.
func (o *ConfigPutRequestLagLagName) HasFastRate() bool {
	if o != nil && !IsNil(o.FastRate) {
		return true
	}

	return false
}

// SetFastRate gets a reference to the given bool and assigns it to the FastRate field.
func (o *ConfigPutRequestLagLagName) SetFastRate(v bool) {
	o.FastRate = &v
}

// GetObjectProperties returns the ObjectProperties field value if set, zero value otherwise.
func (o *ConfigPutRequestLagLagName) GetObjectProperties() map[string]interface{} {
	if o == nil || IsNil(o.ObjectProperties) {
		var ret map[string]interface{}
		return ret
	}
	return o.ObjectProperties
}

// GetObjectPropertiesOk returns a tuple with the ObjectProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestLagLagName) GetObjectPropertiesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ObjectProperties) {
		return map[string]interface{}{}, false
	}
	return o.ObjectProperties, true
}

// HasObjectProperties returns a boolean if a field has been set.
func (o *ConfigPutRequestLagLagName) HasObjectProperties() bool {
	if o != nil && !IsNil(o.ObjectProperties) {
		return true
	}

	return false
}

// SetObjectProperties gets a reference to the given map[string]interface{} and assigns it to the ObjectProperties field.
func (o *ConfigPutRequestLagLagName) SetObjectProperties(v map[string]interface{}) {
	o.ObjectProperties = v
}

func (o ConfigPutRequestLagLagName) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigPutRequestLagLagName) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.IsPeerLink) {
		toSerialize["is_peer_link"] = o.IsPeerLink
	}
	if !IsNil(o.Color) {
		toSerialize["color"] = o.Color
	}
	if !IsNil(o.Lacp) {
		toSerialize["lacp"] = o.Lacp
	}
	if !IsNil(o.EthPortProfile) {
		toSerialize["eth_port_profile"] = o.EthPortProfile
	}
	if !IsNil(o.EthPortProfileRefType) {
		toSerialize["eth_port_profile_ref_type_"] = o.EthPortProfileRefType
	}
	if o.PeerLinkVlan.IsSet() {
		toSerialize["peer_link_vlan"] = o.PeerLinkVlan.Get()
	}
	if !IsNil(o.Fallback) {
		toSerialize["fallback"] = o.Fallback
	}
	if !IsNil(o.FastRate) {
		toSerialize["fast_rate"] = o.FastRate
	}
	if !IsNil(o.ObjectProperties) {
		toSerialize["object_properties"] = o.ObjectProperties
	}
	return toSerialize, nil
}

type NullableConfigPutRequestLagLagName struct {
	value *ConfigPutRequestLagLagName
	isSet bool
}

func (v NullableConfigPutRequestLagLagName) Get() *ConfigPutRequestLagLagName {
	return v.value
}

func (v *NullableConfigPutRequestLagLagName) Set(val *ConfigPutRequestLagLagName) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigPutRequestLagLagName) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigPutRequestLagLagName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigPutRequestLagLagName(val *ConfigPutRequestLagLagName) *NullableConfigPutRequestLagLagName {
	return &NullableConfigPutRequestLagLagName{value: val, isSet: true}
}

func (v NullableConfigPutRequestLagLagName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigPutRequestLagLagName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


