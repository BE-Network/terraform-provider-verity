/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConfigPutRequestSwitchpoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigPutRequestSwitchpoint{}

// ConfigPutRequestSwitchpoint struct for ConfigPutRequestSwitchpoint
type ConfigPutRequestSwitchpoint struct {
	SwitchpointName *ConfigPutRequestSwitchpointSwitchpointName `json:"switchpoint_name,omitempty"`
}

// NewConfigPutRequestSwitchpoint instantiates a new ConfigPutRequestSwitchpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigPutRequestSwitchpoint() *ConfigPutRequestSwitchpoint {
	this := ConfigPutRequestSwitchpoint{}
	return &this
}

// NewConfigPutRequestSwitchpointWithDefaults instantiates a new ConfigPutRequestSwitchpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigPutRequestSwitchpointWithDefaults() *ConfigPutRequestSwitchpoint {
	this := ConfigPutRequestSwitchpoint{}
	return &this
}

// GetSwitchpointName returns the SwitchpointName field value if set, zero value otherwise.
func (o *ConfigPutRequestSwitchpoint) GetSwitchpointName() ConfigPutRequestSwitchpointSwitchpointName {
	if o == nil || IsNil(o.SwitchpointName) {
		var ret ConfigPutRequestSwitchpointSwitchpointName
		return ret
	}
	return *o.SwitchpointName
}

// GetSwitchpointNameOk returns a tuple with the SwitchpointName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestSwitchpoint) GetSwitchpointNameOk() (*ConfigPutRequestSwitchpointSwitchpointName, bool) {
	if o == nil || IsNil(o.SwitchpointName) {
		return nil, false
	}
	return o.SwitchpointName, true
}

// HasSwitchpointName returns a boolean if a field has been set.
func (o *ConfigPutRequestSwitchpoint) HasSwitchpointName() bool {
	if o != nil && !IsNil(o.SwitchpointName) {
		return true
	}

	return false
}

// SetSwitchpointName gets a reference to the given ConfigPutRequestSwitchpointSwitchpointName and assigns it to the SwitchpointName field.
func (o *ConfigPutRequestSwitchpoint) SetSwitchpointName(v ConfigPutRequestSwitchpointSwitchpointName) {
	o.SwitchpointName = &v
}

func (o ConfigPutRequestSwitchpoint) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigPutRequestSwitchpoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SwitchpointName) {
		toSerialize["switchpoint_name"] = o.SwitchpointName
	}
	return toSerialize, nil
}

type NullableConfigPutRequestSwitchpoint struct {
	value *ConfigPutRequestSwitchpoint
	isSet bool
}

func (v NullableConfigPutRequestSwitchpoint) Get() *ConfigPutRequestSwitchpoint {
	return v.value
}

func (v *NullableConfigPutRequestSwitchpoint) Set(val *ConfigPutRequestSwitchpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigPutRequestSwitchpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigPutRequestSwitchpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigPutRequestSwitchpoint(val *ConfigPutRequestSwitchpoint) *NullableConfigPutRequestSwitchpoint {
	return &NullableConfigPutRequestSwitchpoint{value: val, isSet: true}
}

func (v NullableConfigPutRequestSwitchpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigPutRequestSwitchpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


