/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConfigPutRequestThresholds type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigPutRequestThresholds{}

// ConfigPutRequestThresholds struct for ConfigPutRequestThresholds
type ConfigPutRequestThresholds struct {
	ThresholdsName *ConfigPutRequestThresholdsThresholdsName `json:"thresholds_name,omitempty"`
}

// NewConfigPutRequestThresholds instantiates a new ConfigPutRequestThresholds object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigPutRequestThresholds() *ConfigPutRequestThresholds {
	this := ConfigPutRequestThresholds{}
	return &this
}

// NewConfigPutRequestThresholdsWithDefaults instantiates a new ConfigPutRequestThresholds object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigPutRequestThresholdsWithDefaults() *ConfigPutRequestThresholds {
	this := ConfigPutRequestThresholds{}
	return &this
}

// GetThresholdsName returns the ThresholdsName field value if set, zero value otherwise.
func (o *ConfigPutRequestThresholds) GetThresholdsName() ConfigPutRequestThresholdsThresholdsName {
	if o == nil || IsNil(o.ThresholdsName) {
		var ret ConfigPutRequestThresholdsThresholdsName
		return ret
	}
	return *o.ThresholdsName
}

// GetThresholdsNameOk returns a tuple with the ThresholdsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestThresholds) GetThresholdsNameOk() (*ConfigPutRequestThresholdsThresholdsName, bool) {
	if o == nil || IsNil(o.ThresholdsName) {
		return nil, false
	}
	return o.ThresholdsName, true
}

// HasThresholdsName returns a boolean if a field has been set.
func (o *ConfigPutRequestThresholds) HasThresholdsName() bool {
	if o != nil && !IsNil(o.ThresholdsName) {
		return true
	}

	return false
}

// SetThresholdsName gets a reference to the given ConfigPutRequestThresholdsThresholdsName and assigns it to the ThresholdsName field.
func (o *ConfigPutRequestThresholds) SetThresholdsName(v ConfigPutRequestThresholdsThresholdsName) {
	o.ThresholdsName = &v
}

func (o ConfigPutRequestThresholds) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigPutRequestThresholds) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ThresholdsName) {
		toSerialize["thresholds_name"] = o.ThresholdsName
	}
	return toSerialize, nil
}

type NullableConfigPutRequestThresholds struct {
	value *ConfigPutRequestThresholds
	isSet bool
}

func (v NullableConfigPutRequestThresholds) Get() *ConfigPutRequestThresholds {
	return v.value
}

func (v *NullableConfigPutRequestThresholds) Set(val *ConfigPutRequestThresholds) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigPutRequestThresholds) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigPutRequestThresholds) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigPutRequestThresholds(val *ConfigPutRequestThresholds) *NullableConfigPutRequestThresholds {
	return &NullableConfigPutRequestThresholds{value: val, isSet: true}
}

func (v NullableConfigPutRequestThresholds) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigPutRequestThresholds) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


