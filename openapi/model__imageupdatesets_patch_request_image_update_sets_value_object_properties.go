/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties{}

// ImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties struct for ImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties
type ImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties struct {
	// Firmware Count
	FirmwareCount NullableInt32 `json:"firmware_count,omitempty"`
}

// NewImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties instantiates a new ImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties() *ImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties {
	this := ImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties{}
	var firmwareCount int32 = 0
	this.FirmwareCount = *NewNullableInt32(&firmwareCount)
	return &this
}

// NewImageupdatesetsPatchRequestImageUpdateSetsValueObjectPropertiesWithDefaults instantiates a new ImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageupdatesetsPatchRequestImageUpdateSetsValueObjectPropertiesWithDefaults() *ImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties {
	this := ImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties{}
	var firmwareCount int32 = 0
	this.FirmwareCount = *NewNullableInt32(&firmwareCount)
	return &this
}

// GetFirmwareCount returns the FirmwareCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties) GetFirmwareCount() int32 {
	if o == nil || IsNil(o.FirmwareCount.Get()) {
		var ret int32
		return ret
	}
	return *o.FirmwareCount.Get()
}

// GetFirmwareCountOk returns a tuple with the FirmwareCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties) GetFirmwareCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirmwareCount.Get(), o.FirmwareCount.IsSet()
}

// HasFirmwareCount returns a boolean if a field has been set.
func (o *ImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties) HasFirmwareCount() bool {
	if o != nil && o.FirmwareCount.IsSet() {
		return true
	}

	return false
}

// SetFirmwareCount gets a reference to the given NullableInt32 and assigns it to the FirmwareCount field.
func (o *ImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties) SetFirmwareCount(v int32) {
	o.FirmwareCount.Set(&v)
}
// SetFirmwareCountNil sets the value for FirmwareCount to be an explicit nil
func (o *ImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties) SetFirmwareCountNil() {
	o.FirmwareCount.Set(nil)
}

// UnsetFirmwareCount ensures that no value is present for FirmwareCount, not even an explicit nil
func (o *ImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties) UnsetFirmwareCount() {
	o.FirmwareCount.Unset()
}

func (o ImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.FirmwareCount.IsSet() {
		toSerialize["firmware_count"] = o.FirmwareCount.Get()
	}
	return toSerialize, nil
}

type NullableImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties struct {
	value *ImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties
	isSet bool
}

func (v NullableImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties) Get() *ImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties {
	return v.value
}

func (v *NullableImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties) Set(val *ImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties(val *ImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties) *NullableImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties {
	return &NullableImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties{value: val, isSet: true}
}

func (v NullableImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageupdatesetsPatchRequestImageUpdateSetsValueObjectProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


