/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SflowcollectorsPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SflowcollectorsPutRequest{}

// SflowcollectorsPutRequest struct for SflowcollectorsPutRequest
type SflowcollectorsPutRequest struct {
	SflowCollector *map[string]SflowcollectorsPutRequestSflowCollectorValue `json:"sflow_collector,omitempty"`
}

// NewSflowcollectorsPutRequest instantiates a new SflowcollectorsPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSflowcollectorsPutRequest() *SflowcollectorsPutRequest {
	this := SflowcollectorsPutRequest{}
	return &this
}

// NewSflowcollectorsPutRequestWithDefaults instantiates a new SflowcollectorsPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSflowcollectorsPutRequestWithDefaults() *SflowcollectorsPutRequest {
	this := SflowcollectorsPutRequest{}
	return &this
}

// GetSflowCollector returns the SflowCollector field value if set, zero value otherwise.
func (o *SflowcollectorsPutRequest) GetSflowCollector() map[string]SflowcollectorsPutRequestSflowCollectorValue {
	if o == nil || IsNil(o.SflowCollector) {
		var ret map[string]SflowcollectorsPutRequestSflowCollectorValue
		return ret
	}
	return *o.SflowCollector
}

// GetSflowCollectorOk returns a tuple with the SflowCollector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SflowcollectorsPutRequest) GetSflowCollectorOk() (*map[string]SflowcollectorsPutRequestSflowCollectorValue, bool) {
	if o == nil || IsNil(o.SflowCollector) {
		return nil, false
	}
	return o.SflowCollector, true
}

// HasSflowCollector returns a boolean if a field has been set.
func (o *SflowcollectorsPutRequest) HasSflowCollector() bool {
	if o != nil && !IsNil(o.SflowCollector) {
		return true
	}

	return false
}

// SetSflowCollector gets a reference to the given map[string]SflowcollectorsPutRequestSflowCollectorValue and assigns it to the SflowCollector field.
func (o *SflowcollectorsPutRequest) SetSflowCollector(v map[string]SflowcollectorsPutRequestSflowCollectorValue) {
	o.SflowCollector = &v
}

func (o SflowcollectorsPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SflowcollectorsPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SflowCollector) {
		toSerialize["sflow_collector"] = o.SflowCollector
	}
	return toSerialize, nil
}

type NullableSflowcollectorsPutRequest struct {
	value *SflowcollectorsPutRequest
	isSet bool
}

func (v NullableSflowcollectorsPutRequest) Get() *SflowcollectorsPutRequest {
	return v.value
}

func (v *NullableSflowcollectorsPutRequest) Set(val *SflowcollectorsPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSflowcollectorsPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSflowcollectorsPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSflowcollectorsPutRequest(val *SflowcollectorsPutRequest) *NullableSflowcollectorsPutRequest {
	return &NullableSflowcollectorsPutRequest{value: val, isSet: true}
}

func (v NullableSflowcollectorsPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSflowcollectorsPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


