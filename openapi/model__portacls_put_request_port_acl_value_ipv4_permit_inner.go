/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PortaclsPutRequestPortAclValueIpv4PermitInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortaclsPutRequestPortAclValueIpv4PermitInner{}

// PortaclsPutRequestPortAclValueIpv4PermitInner struct for PortaclsPutRequestPortAclValueIpv4PermitInner
type PortaclsPutRequestPortAclValueIpv4PermitInner struct {
	// Enable
	Enable *bool `json:"enable,omitempty"`
	// Filter
	Filter *string `json:"filter,omitempty"`
	// Object type for filter field
	FilterRefType *string `json:"filter_ref_type_,omitempty"`
	// The index identifying the object. Zero if you want to add an object to the list.
	Index *int32 `json:"index,omitempty"`
}

// NewPortaclsPutRequestPortAclValueIpv4PermitInner instantiates a new PortaclsPutRequestPortAclValueIpv4PermitInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortaclsPutRequestPortAclValueIpv4PermitInner() *PortaclsPutRequestPortAclValueIpv4PermitInner {
	this := PortaclsPutRequestPortAclValueIpv4PermitInner{}
	var enable bool = false
	this.Enable = &enable
	var filter string = ""
	this.Filter = &filter
	return &this
}

// NewPortaclsPutRequestPortAclValueIpv4PermitInnerWithDefaults instantiates a new PortaclsPutRequestPortAclValueIpv4PermitInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortaclsPutRequestPortAclValueIpv4PermitInnerWithDefaults() *PortaclsPutRequestPortAclValueIpv4PermitInner {
	this := PortaclsPutRequestPortAclValueIpv4PermitInner{}
	var enable bool = false
	this.Enable = &enable
	var filter string = ""
	this.Filter = &filter
	return &this
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *PortaclsPutRequestPortAclValueIpv4PermitInner) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortaclsPutRequestPortAclValueIpv4PermitInner) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *PortaclsPutRequestPortAclValueIpv4PermitInner) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *PortaclsPutRequestPortAclValueIpv4PermitInner) SetEnable(v bool) {
	o.Enable = &v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *PortaclsPutRequestPortAclValueIpv4PermitInner) GetFilter() string {
	if o == nil || IsNil(o.Filter) {
		var ret string
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortaclsPutRequestPortAclValueIpv4PermitInner) GetFilterOk() (*string, bool) {
	if o == nil || IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *PortaclsPutRequestPortAclValueIpv4PermitInner) HasFilter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given string and assigns it to the Filter field.
func (o *PortaclsPutRequestPortAclValueIpv4PermitInner) SetFilter(v string) {
	o.Filter = &v
}

// GetFilterRefType returns the FilterRefType field value if set, zero value otherwise.
func (o *PortaclsPutRequestPortAclValueIpv4PermitInner) GetFilterRefType() string {
	if o == nil || IsNil(o.FilterRefType) {
		var ret string
		return ret
	}
	return *o.FilterRefType
}

// GetFilterRefTypeOk returns a tuple with the FilterRefType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortaclsPutRequestPortAclValueIpv4PermitInner) GetFilterRefTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FilterRefType) {
		return nil, false
	}
	return o.FilterRefType, true
}

// HasFilterRefType returns a boolean if a field has been set.
func (o *PortaclsPutRequestPortAclValueIpv4PermitInner) HasFilterRefType() bool {
	if o != nil && !IsNil(o.FilterRefType) {
		return true
	}

	return false
}

// SetFilterRefType gets a reference to the given string and assigns it to the FilterRefType field.
func (o *PortaclsPutRequestPortAclValueIpv4PermitInner) SetFilterRefType(v string) {
	o.FilterRefType = &v
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *PortaclsPutRequestPortAclValueIpv4PermitInner) GetIndex() int32 {
	if o == nil || IsNil(o.Index) {
		var ret int32
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortaclsPutRequestPortAclValueIpv4PermitInner) GetIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.Index) {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *PortaclsPutRequestPortAclValueIpv4PermitInner) HasIndex() bool {
	if o != nil && !IsNil(o.Index) {
		return true
	}

	return false
}

// SetIndex gets a reference to the given int32 and assigns it to the Index field.
func (o *PortaclsPutRequestPortAclValueIpv4PermitInner) SetIndex(v int32) {
	o.Index = &v
}

func (o PortaclsPutRequestPortAclValueIpv4PermitInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortaclsPutRequestPortAclValueIpv4PermitInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.Filter) {
		toSerialize["filter"] = o.Filter
	}
	if !IsNil(o.FilterRefType) {
		toSerialize["filter_ref_type_"] = o.FilterRefType
	}
	if !IsNil(o.Index) {
		toSerialize["index"] = o.Index
	}
	return toSerialize, nil
}

type NullablePortaclsPutRequestPortAclValueIpv4PermitInner struct {
	value *PortaclsPutRequestPortAclValueIpv4PermitInner
	isSet bool
}

func (v NullablePortaclsPutRequestPortAclValueIpv4PermitInner) Get() *PortaclsPutRequestPortAclValueIpv4PermitInner {
	return v.value
}

func (v *NullablePortaclsPutRequestPortAclValueIpv4PermitInner) Set(val *PortaclsPutRequestPortAclValueIpv4PermitInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePortaclsPutRequestPortAclValueIpv4PermitInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePortaclsPutRequestPortAclValueIpv4PermitInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortaclsPutRequestPortAclValueIpv4PermitInner(val *PortaclsPutRequestPortAclValueIpv4PermitInner) *NullablePortaclsPutRequestPortAclValueIpv4PermitInner {
	return &NullablePortaclsPutRequestPortAclValueIpv4PermitInner{value: val, isSet: true}
}

func (v NullablePortaclsPutRequestPortAclValueIpv4PermitInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortaclsPutRequestPortAclValueIpv4PermitInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


