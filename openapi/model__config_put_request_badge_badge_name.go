/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConfigPutRequestBadgeBadgeName type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigPutRequestBadgeBadgeName{}

// ConfigPutRequestBadgeBadgeName struct for ConfigPutRequestBadgeBadgeName
type ConfigPutRequestBadgeBadgeName struct {
	// Object Name. Must be unique.
	Name *string `json:"name,omitempty"`
	// Badge color
	Color *string `json:"color,omitempty"`
	// Badge number
	Number *int32 `json:"number,omitempty"`
	ObjectProperties *ConfigPutRequestIpv4PrefixListIpv4PrefixListNameObjectProperties `json:"object_properties,omitempty"`
}

// NewConfigPutRequestBadgeBadgeName instantiates a new ConfigPutRequestBadgeBadgeName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigPutRequestBadgeBadgeName() *ConfigPutRequestBadgeBadgeName {
	this := ConfigPutRequestBadgeBadgeName{}
	var name string = ""
	this.Name = &name
	return &this
}

// NewConfigPutRequestBadgeBadgeNameWithDefaults instantiates a new ConfigPutRequestBadgeBadgeName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigPutRequestBadgeBadgeNameWithDefaults() *ConfigPutRequestBadgeBadgeName {
	this := ConfigPutRequestBadgeBadgeName{}
	var name string = ""
	this.Name = &name
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ConfigPutRequestBadgeBadgeName) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestBadgeBadgeName) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ConfigPutRequestBadgeBadgeName) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ConfigPutRequestBadgeBadgeName) SetName(v string) {
	o.Name = &v
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *ConfigPutRequestBadgeBadgeName) GetColor() string {
	if o == nil || IsNil(o.Color) {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestBadgeBadgeName) GetColorOk() (*string, bool) {
	if o == nil || IsNil(o.Color) {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *ConfigPutRequestBadgeBadgeName) HasColor() bool {
	if o != nil && !IsNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *ConfigPutRequestBadgeBadgeName) SetColor(v string) {
	o.Color = &v
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *ConfigPutRequestBadgeBadgeName) GetNumber() int32 {
	if o == nil || IsNil(o.Number) {
		var ret int32
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestBadgeBadgeName) GetNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.Number) {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *ConfigPutRequestBadgeBadgeName) HasNumber() bool {
	if o != nil && !IsNil(o.Number) {
		return true
	}

	return false
}

// SetNumber gets a reference to the given int32 and assigns it to the Number field.
func (o *ConfigPutRequestBadgeBadgeName) SetNumber(v int32) {
	o.Number = &v
}

// GetObjectProperties returns the ObjectProperties field value if set, zero value otherwise.
func (o *ConfigPutRequestBadgeBadgeName) GetObjectProperties() ConfigPutRequestIpv4PrefixListIpv4PrefixListNameObjectProperties {
	if o == nil || IsNil(o.ObjectProperties) {
		var ret ConfigPutRequestIpv4PrefixListIpv4PrefixListNameObjectProperties
		return ret
	}
	return *o.ObjectProperties
}

// GetObjectPropertiesOk returns a tuple with the ObjectProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestBadgeBadgeName) GetObjectPropertiesOk() (*ConfigPutRequestIpv4PrefixListIpv4PrefixListNameObjectProperties, bool) {
	if o == nil || IsNil(o.ObjectProperties) {
		return nil, false
	}
	return o.ObjectProperties, true
}

// HasObjectProperties returns a boolean if a field has been set.
func (o *ConfigPutRequestBadgeBadgeName) HasObjectProperties() bool {
	if o != nil && !IsNil(o.ObjectProperties) {
		return true
	}

	return false
}

// SetObjectProperties gets a reference to the given ConfigPutRequestIpv4PrefixListIpv4PrefixListNameObjectProperties and assigns it to the ObjectProperties field.
func (o *ConfigPutRequestBadgeBadgeName) SetObjectProperties(v ConfigPutRequestIpv4PrefixListIpv4PrefixListNameObjectProperties) {
	o.ObjectProperties = &v
}

func (o ConfigPutRequestBadgeBadgeName) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigPutRequestBadgeBadgeName) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Color) {
		toSerialize["color"] = o.Color
	}
	if !IsNil(o.Number) {
		toSerialize["number"] = o.Number
	}
	if !IsNil(o.ObjectProperties) {
		toSerialize["object_properties"] = o.ObjectProperties
	}
	return toSerialize, nil
}

type NullableConfigPutRequestBadgeBadgeName struct {
	value *ConfigPutRequestBadgeBadgeName
	isSet bool
}

func (v NullableConfigPutRequestBadgeBadgeName) Get() *ConfigPutRequestBadgeBadgeName {
	return v.value
}

func (v *NullableConfigPutRequestBadgeBadgeName) Set(val *ConfigPutRequestBadgeBadgeName) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigPutRequestBadgeBadgeName) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigPutRequestBadgeBadgeName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigPutRequestBadgeBadgeName(val *ConfigPutRequestBadgeBadgeName) *NullableConfigPutRequestBadgeBadgeName {
	return &NullableConfigPutRequestBadgeBadgeName{value: val, isSet: true}
}

func (v NullableConfigPutRequestBadgeBadgeName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigPutRequestBadgeBadgeName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


