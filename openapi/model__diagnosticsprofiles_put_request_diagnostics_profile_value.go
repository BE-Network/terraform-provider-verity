/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DiagnosticsprofilesPutRequestDiagnosticsProfileValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DiagnosticsprofilesPutRequestDiagnosticsProfileValue{}

// DiagnosticsprofilesPutRequestDiagnosticsProfileValue struct for DiagnosticsprofilesPutRequestDiagnosticsProfileValue
type DiagnosticsprofilesPutRequestDiagnosticsProfileValue struct {
	// Object Name. Must be unique.
	Name *string `json:"name,omitempty"`
	// Enable object.
	Enable *bool `json:"enable,omitempty"`
	// Enable sFlow for this Diagnostics Profile 
	EnableSflow *bool `json:"enable_sflow,omitempty"`
	// Flow Collector for this Diagnostics Profile 
	FlowCollector *string `json:"flow_collector,omitempty"`
	// Object type for flow_collector field
	FlowCollectorRefType *string `json:"flow_collector_ref_type_,omitempty"`
	// The sampling rate for sFlow polling (seconds)
	PollInterval *int32 `json:"poll_interval,omitempty"`
	// Management or Underlay
	VrfType *string `json:"vrf_type,omitempty"`
}

// NewDiagnosticsprofilesPutRequestDiagnosticsProfileValue instantiates a new DiagnosticsprofilesPutRequestDiagnosticsProfileValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiagnosticsprofilesPutRequestDiagnosticsProfileValue() *DiagnosticsprofilesPutRequestDiagnosticsProfileValue {
	this := DiagnosticsprofilesPutRequestDiagnosticsProfileValue{}
	var name string = ""
	this.Name = &name
	var enable bool = false
	this.Enable = &enable
	var enableSflow bool = false
	this.EnableSflow = &enableSflow
	var flowCollector string = ""
	this.FlowCollector = &flowCollector
	var pollInterval int32 = 20
	this.PollInterval = &pollInterval
	var vrfType string = "management"
	this.VrfType = &vrfType
	return &this
}

// NewDiagnosticsprofilesPutRequestDiagnosticsProfileValueWithDefaults instantiates a new DiagnosticsprofilesPutRequestDiagnosticsProfileValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiagnosticsprofilesPutRequestDiagnosticsProfileValueWithDefaults() *DiagnosticsprofilesPutRequestDiagnosticsProfileValue {
	this := DiagnosticsprofilesPutRequestDiagnosticsProfileValue{}
	var name string = ""
	this.Name = &name
	var enable bool = false
	this.Enable = &enable
	var enableSflow bool = false
	this.EnableSflow = &enableSflow
	var flowCollector string = ""
	this.FlowCollector = &flowCollector
	var pollInterval int32 = 20
	this.PollInterval = &pollInterval
	var vrfType string = "management"
	this.VrfType = &vrfType
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DiagnosticsprofilesPutRequestDiagnosticsProfileValue) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiagnosticsprofilesPutRequestDiagnosticsProfileValue) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DiagnosticsprofilesPutRequestDiagnosticsProfileValue) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DiagnosticsprofilesPutRequestDiagnosticsProfileValue) SetName(v string) {
	o.Name = &v
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *DiagnosticsprofilesPutRequestDiagnosticsProfileValue) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiagnosticsprofilesPutRequestDiagnosticsProfileValue) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *DiagnosticsprofilesPutRequestDiagnosticsProfileValue) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *DiagnosticsprofilesPutRequestDiagnosticsProfileValue) SetEnable(v bool) {
	o.Enable = &v
}

// GetEnableSflow returns the EnableSflow field value if set, zero value otherwise.
func (o *DiagnosticsprofilesPutRequestDiagnosticsProfileValue) GetEnableSflow() bool {
	if o == nil || IsNil(o.EnableSflow) {
		var ret bool
		return ret
	}
	return *o.EnableSflow
}

// GetEnableSflowOk returns a tuple with the EnableSflow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiagnosticsprofilesPutRequestDiagnosticsProfileValue) GetEnableSflowOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableSflow) {
		return nil, false
	}
	return o.EnableSflow, true
}

// HasEnableSflow returns a boolean if a field has been set.
func (o *DiagnosticsprofilesPutRequestDiagnosticsProfileValue) HasEnableSflow() bool {
	if o != nil && !IsNil(o.EnableSflow) {
		return true
	}

	return false
}

// SetEnableSflow gets a reference to the given bool and assigns it to the EnableSflow field.
func (o *DiagnosticsprofilesPutRequestDiagnosticsProfileValue) SetEnableSflow(v bool) {
	o.EnableSflow = &v
}

// GetFlowCollector returns the FlowCollector field value if set, zero value otherwise.
func (o *DiagnosticsprofilesPutRequestDiagnosticsProfileValue) GetFlowCollector() string {
	if o == nil || IsNil(o.FlowCollector) {
		var ret string
		return ret
	}
	return *o.FlowCollector
}

// GetFlowCollectorOk returns a tuple with the FlowCollector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiagnosticsprofilesPutRequestDiagnosticsProfileValue) GetFlowCollectorOk() (*string, bool) {
	if o == nil || IsNil(o.FlowCollector) {
		return nil, false
	}
	return o.FlowCollector, true
}

// HasFlowCollector returns a boolean if a field has been set.
func (o *DiagnosticsprofilesPutRequestDiagnosticsProfileValue) HasFlowCollector() bool {
	if o != nil && !IsNil(o.FlowCollector) {
		return true
	}

	return false
}

// SetFlowCollector gets a reference to the given string and assigns it to the FlowCollector field.
func (o *DiagnosticsprofilesPutRequestDiagnosticsProfileValue) SetFlowCollector(v string) {
	o.FlowCollector = &v
}

// GetFlowCollectorRefType returns the FlowCollectorRefType field value if set, zero value otherwise.
func (o *DiagnosticsprofilesPutRequestDiagnosticsProfileValue) GetFlowCollectorRefType() string {
	if o == nil || IsNil(o.FlowCollectorRefType) {
		var ret string
		return ret
	}
	return *o.FlowCollectorRefType
}

// GetFlowCollectorRefTypeOk returns a tuple with the FlowCollectorRefType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiagnosticsprofilesPutRequestDiagnosticsProfileValue) GetFlowCollectorRefTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FlowCollectorRefType) {
		return nil, false
	}
	return o.FlowCollectorRefType, true
}

// HasFlowCollectorRefType returns a boolean if a field has been set.
func (o *DiagnosticsprofilesPutRequestDiagnosticsProfileValue) HasFlowCollectorRefType() bool {
	if o != nil && !IsNil(o.FlowCollectorRefType) {
		return true
	}

	return false
}

// SetFlowCollectorRefType gets a reference to the given string and assigns it to the FlowCollectorRefType field.
func (o *DiagnosticsprofilesPutRequestDiagnosticsProfileValue) SetFlowCollectorRefType(v string) {
	o.FlowCollectorRefType = &v
}

// GetPollInterval returns the PollInterval field value if set, zero value otherwise.
func (o *DiagnosticsprofilesPutRequestDiagnosticsProfileValue) GetPollInterval() int32 {
	if o == nil || IsNil(o.PollInterval) {
		var ret int32
		return ret
	}
	return *o.PollInterval
}

// GetPollIntervalOk returns a tuple with the PollInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiagnosticsprofilesPutRequestDiagnosticsProfileValue) GetPollIntervalOk() (*int32, bool) {
	if o == nil || IsNil(o.PollInterval) {
		return nil, false
	}
	return o.PollInterval, true
}

// HasPollInterval returns a boolean if a field has been set.
func (o *DiagnosticsprofilesPutRequestDiagnosticsProfileValue) HasPollInterval() bool {
	if o != nil && !IsNil(o.PollInterval) {
		return true
	}

	return false
}

// SetPollInterval gets a reference to the given int32 and assigns it to the PollInterval field.
func (o *DiagnosticsprofilesPutRequestDiagnosticsProfileValue) SetPollInterval(v int32) {
	o.PollInterval = &v
}

// GetVrfType returns the VrfType field value if set, zero value otherwise.
func (o *DiagnosticsprofilesPutRequestDiagnosticsProfileValue) GetVrfType() string {
	if o == nil || IsNil(o.VrfType) {
		var ret string
		return ret
	}
	return *o.VrfType
}

// GetVrfTypeOk returns a tuple with the VrfType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiagnosticsprofilesPutRequestDiagnosticsProfileValue) GetVrfTypeOk() (*string, bool) {
	if o == nil || IsNil(o.VrfType) {
		return nil, false
	}
	return o.VrfType, true
}

// HasVrfType returns a boolean if a field has been set.
func (o *DiagnosticsprofilesPutRequestDiagnosticsProfileValue) HasVrfType() bool {
	if o != nil && !IsNil(o.VrfType) {
		return true
	}

	return false
}

// SetVrfType gets a reference to the given string and assigns it to the VrfType field.
func (o *DiagnosticsprofilesPutRequestDiagnosticsProfileValue) SetVrfType(v string) {
	o.VrfType = &v
}

func (o DiagnosticsprofilesPutRequestDiagnosticsProfileValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DiagnosticsprofilesPutRequestDiagnosticsProfileValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.EnableSflow) {
		toSerialize["enable_sflow"] = o.EnableSflow
	}
	if !IsNil(o.FlowCollector) {
		toSerialize["flow_collector"] = o.FlowCollector
	}
	if !IsNil(o.FlowCollectorRefType) {
		toSerialize["flow_collector_ref_type_"] = o.FlowCollectorRefType
	}
	if !IsNil(o.PollInterval) {
		toSerialize["poll_interval"] = o.PollInterval
	}
	if !IsNil(o.VrfType) {
		toSerialize["vrf_type"] = o.VrfType
	}
	return toSerialize, nil
}

type NullableDiagnosticsprofilesPutRequestDiagnosticsProfileValue struct {
	value *DiagnosticsprofilesPutRequestDiagnosticsProfileValue
	isSet bool
}

func (v NullableDiagnosticsprofilesPutRequestDiagnosticsProfileValue) Get() *DiagnosticsprofilesPutRequestDiagnosticsProfileValue {
	return v.value
}

func (v *NullableDiagnosticsprofilesPutRequestDiagnosticsProfileValue) Set(val *DiagnosticsprofilesPutRequestDiagnosticsProfileValue) {
	v.value = val
	v.isSet = true
}

func (v NullableDiagnosticsprofilesPutRequestDiagnosticsProfileValue) IsSet() bool {
	return v.isSet
}

func (v *NullableDiagnosticsprofilesPutRequestDiagnosticsProfileValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiagnosticsprofilesPutRequestDiagnosticsProfileValue(val *DiagnosticsprofilesPutRequestDiagnosticsProfileValue) *NullableDiagnosticsprofilesPutRequestDiagnosticsProfileValue {
	return &NullableDiagnosticsprofilesPutRequestDiagnosticsProfileValue{value: val, isSet: true}
}

func (v NullableDiagnosticsprofilesPutRequestDiagnosticsProfileValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiagnosticsprofilesPutRequestDiagnosticsProfileValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


