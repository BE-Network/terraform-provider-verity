/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConfigPutRequestTenant type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigPutRequestTenant{}

// ConfigPutRequestTenant struct for ConfigPutRequestTenant
type ConfigPutRequestTenant struct {
	TenantName *ConfigPutRequestTenantTenantName `json:"tenant_name,omitempty"`
}

// NewConfigPutRequestTenant instantiates a new ConfigPutRequestTenant object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigPutRequestTenant() *ConfigPutRequestTenant {
	this := ConfigPutRequestTenant{}
	return &this
}

// NewConfigPutRequestTenantWithDefaults instantiates a new ConfigPutRequestTenant object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigPutRequestTenantWithDefaults() *ConfigPutRequestTenant {
	this := ConfigPutRequestTenant{}
	return &this
}

// GetTenantName returns the TenantName field value if set, zero value otherwise.
func (o *ConfigPutRequestTenant) GetTenantName() ConfigPutRequestTenantTenantName {
	if o == nil || IsNil(o.TenantName) {
		var ret ConfigPutRequestTenantTenantName
		return ret
	}
	return *o.TenantName
}

// GetTenantNameOk returns a tuple with the TenantName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestTenant) GetTenantNameOk() (*ConfigPutRequestTenantTenantName, bool) {
	if o == nil || IsNil(o.TenantName) {
		return nil, false
	}
	return o.TenantName, true
}

// HasTenantName returns a boolean if a field has been set.
func (o *ConfigPutRequestTenant) HasTenantName() bool {
	if o != nil && !IsNil(o.TenantName) {
		return true
	}

	return false
}

// SetTenantName gets a reference to the given ConfigPutRequestTenantTenantName and assigns it to the TenantName field.
func (o *ConfigPutRequestTenant) SetTenantName(v ConfigPutRequestTenantTenantName) {
	o.TenantName = &v
}

func (o ConfigPutRequestTenant) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigPutRequestTenant) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TenantName) {
		toSerialize["tenant_name"] = o.TenantName
	}
	return toSerialize, nil
}

type NullableConfigPutRequestTenant struct {
	value *ConfigPutRequestTenant
	isSet bool
}

func (v NullableConfigPutRequestTenant) Get() *ConfigPutRequestTenant {
	return v.value
}

func (v *NullableConfigPutRequestTenant) Set(val *ConfigPutRequestTenant) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigPutRequestTenant) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigPutRequestTenant) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigPutRequestTenant(val *ConfigPutRequestTenant) *NullableConfigPutRequestTenant {
	return &NullableConfigPutRequestTenant{value: val, isSet: true}
}

func (v NullableConfigPutRequestTenant) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigPutRequestTenant) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


