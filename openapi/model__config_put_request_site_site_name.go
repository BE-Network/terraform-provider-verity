/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConfigPutRequestSiteSiteName type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigPutRequestSiteSiteName{}

// ConfigPutRequestSiteSiteName struct for ConfigPutRequestSiteSiteName
type ConfigPutRequestSiteSiteName struct {
	// Object Name. Must be unique.
	Name *string `json:"name,omitempty"`
	// Enable object.
	Enable *bool `json:"enable,omitempty"`
	// Service for Site
	ServiceForSite *string `json:"service_for_site,omitempty"`
	// Object type for service_for_site field
	ServiceForSiteRefType *string `json:"service_for_site_ref_type_,omitempty"`
	// Sets the spanning tree type for all Ports in this Site with Spanning Tree enabled
	SpanningTreeType *string `json:"spanning_tree_type,omitempty"`
	// Defines the logical boundary of the network. All switches in an MSTP region must have the same configured region name
	RegionName *string `json:"region_name,omitempty"`
	// A logical number that signifies a revision for the MSTP configuration. All switches in an MSTP region must have the same revision number
	Revision NullableInt32 `json:"revision,omitempty"`
	// Enable spanning tree on all fabric connections.  This overrides the Eth Port Settings for Fabric ports
	ForceSpanningTreeOnFabricPorts *bool `json:"force_spanning_tree_on_fabric_ports,omitempty"`
	// When Read Only Mode is checked, vNetC will perform all functions except writing database updates to the target hardware
	ReadOnlyMode *bool `json:"read_only_mode,omitempty"`
	// For any Service that is using DSCP to p-bit map packet prioritization. A string of length 64 with a 0-7 in each position
	DscpToPBitMap *string `json:"dscp_to_p_bit_map,omitempty"`
	// Site Level MAC Address for Anycast
	AnycastMacAddress *string `json:"anycast_mac_address,omitempty"`
	// Whether or not the value in anycast_mac_address field has been automatically assigned or not. Set to false and change anycast_mac_address value to edit.
	AnycastMacAddressAutoAssigned *bool `json:"anycast_mac_address_auto_assigned_,omitempty"`
	// MAC Address Aging Time (between 1-100000)
	MacAddressAgingTime *int32 `json:"mac_address_aging_time,omitempty"`
	// MLAG Delay Restore Timer
	MlagDelayRestoreTimer *int32 `json:"mlag_delay_restore_timer,omitempty"`
	// Spine BGP Keepalive Timer
	BgpKeepaliveTimer *int32 `json:"bgp_keepalive_timer,omitempty"`
	// Spine BGP Hold Down Timer
	BgpHoldDownTimer *int32 `json:"bgp_hold_down_timer,omitempty"`
	// BGP Advertisement Interval for spines/superspines. Use \"0\" for immediate updates
	SpineBgpAdvertisementInterval *int32 `json:"spine_bgp_advertisement_interval,omitempty"`
	// BGP Connect Timer
	SpineBgpConnectTimer *int32 `json:"spine_bgp_connect_timer,omitempty"`
	// Leaf BGP Keep Alive Timer
	LeafBgpKeepAliveTimer *int32 `json:"leaf_bgp_keep_alive_timer,omitempty"`
	// Leaf BGP Hold Down Timer
	LeafBgpHoldDownTimer *int32 `json:"leaf_bgp_hold_down_timer,omitempty"`
	// BGP Advertisement Interval for leafs. Use \"0\" for immediate updates
	LeafBgpAdvertisementInterval *int32 `json:"leaf_bgp_advertisement_interval,omitempty"`
	// BGP Connect Timer
	LeafBgpConnectTimer *int32 `json:"leaf_bgp_connect_timer,omitempty"`
	// Link State Timeout Value
	LinkStateTimeoutValue NullableInt32 `json:"link_state_timeout_value,omitempty"`
	// Startup Delay
	EvpnMultihomingStartupDelay NullableInt32 `json:"evpn_multihoming_startup_delay,omitempty"`
	// MAC Holdtime
	EvpnMacHoldtime NullableInt32 `json:"evpn_mac_holdtime,omitempty"`
	// Fast Reporting of Switch Communications, Link Up/Down, and BGP Status
	AggressiveReporting *bool `json:"aggressive_reporting,omitempty"`
	// Threshold in Errors per second that when met will disable the links as part of LAGs
	CrcFailureThreshold NullableInt32 `json:"crc_failure_threshold,omitempty"`
	Islands []ConfigPutRequestSiteSiteNameIslandsInner `json:"islands,omitempty"`
	Pairs []ConfigPutRequestSiteSiteNamePairsInner `json:"pairs,omitempty"`
	ObjectProperties *ConfigPutRequestSiteSiteNameObjectProperties `json:"object_properties,omitempty"`
}

// NewConfigPutRequestSiteSiteName instantiates a new ConfigPutRequestSiteSiteName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigPutRequestSiteSiteName() *ConfigPutRequestSiteSiteName {
	this := ConfigPutRequestSiteSiteName{}
	var name string = ""
	this.Name = &name
	var enable bool = true
	this.Enable = &enable
	var serviceForSite string = "service|Management|"
	this.ServiceForSite = &serviceForSite
	var spanningTreeType string = "pvst"
	this.SpanningTreeType = &spanningTreeType
	var regionName string = ""
	this.RegionName = &regionName
	var revision int32 = 0
	this.Revision = *NewNullableInt32(&revision)
	var forceSpanningTreeOnFabricPorts bool = false
	this.ForceSpanningTreeOnFabricPorts = &forceSpanningTreeOnFabricPorts
	var readOnlyMode bool = false
	this.ReadOnlyMode = &readOnlyMode
	var dscpToPBitMap string = "0000000011111111222222223333333344444444555555556666666677777777"
	this.DscpToPBitMap = &dscpToPBitMap
	var anycastMacAddress string = "(auto)"
	this.AnycastMacAddress = &anycastMacAddress
	var macAddressAgingTime int32 = 600
	this.MacAddressAgingTime = &macAddressAgingTime
	var mlagDelayRestoreTimer int32 = 300
	this.MlagDelayRestoreTimer = &mlagDelayRestoreTimer
	var bgpKeepaliveTimer int32 = 60
	this.BgpKeepaliveTimer = &bgpKeepaliveTimer
	var bgpHoldDownTimer int32 = 180
	this.BgpHoldDownTimer = &bgpHoldDownTimer
	var spineBgpAdvertisementInterval int32 = 1
	this.SpineBgpAdvertisementInterval = &spineBgpAdvertisementInterval
	var spineBgpConnectTimer int32 = 120
	this.SpineBgpConnectTimer = &spineBgpConnectTimer
	var leafBgpKeepAliveTimer int32 = 60
	this.LeafBgpKeepAliveTimer = &leafBgpKeepAliveTimer
	var leafBgpHoldDownTimer int32 = 180
	this.LeafBgpHoldDownTimer = &leafBgpHoldDownTimer
	var leafBgpAdvertisementInterval int32 = 1
	this.LeafBgpAdvertisementInterval = &leafBgpAdvertisementInterval
	var leafBgpConnectTimer int32 = 120
	this.LeafBgpConnectTimer = &leafBgpConnectTimer
	var linkStateTimeoutValue int32 = 60
	this.LinkStateTimeoutValue = *NewNullableInt32(&linkStateTimeoutValue)
	var evpnMultihomingStartupDelay int32 = 300
	this.EvpnMultihomingStartupDelay = *NewNullableInt32(&evpnMultihomingStartupDelay)
	var evpnMacHoldtime int32 = 1080
	this.EvpnMacHoldtime = *NewNullableInt32(&evpnMacHoldtime)
	var aggressiveReporting bool = true
	this.AggressiveReporting = &aggressiveReporting
	var crcFailureThreshold int32 = 5
	this.CrcFailureThreshold = *NewNullableInt32(&crcFailureThreshold)
	return &this
}

// NewConfigPutRequestSiteSiteNameWithDefaults instantiates a new ConfigPutRequestSiteSiteName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigPutRequestSiteSiteNameWithDefaults() *ConfigPutRequestSiteSiteName {
	this := ConfigPutRequestSiteSiteName{}
	var name string = ""
	this.Name = &name
	var enable bool = true
	this.Enable = &enable
	var serviceForSite string = "service|Management|"
	this.ServiceForSite = &serviceForSite
	var spanningTreeType string = "pvst"
	this.SpanningTreeType = &spanningTreeType
	var regionName string = ""
	this.RegionName = &regionName
	var revision int32 = 0
	this.Revision = *NewNullableInt32(&revision)
	var forceSpanningTreeOnFabricPorts bool = false
	this.ForceSpanningTreeOnFabricPorts = &forceSpanningTreeOnFabricPorts
	var readOnlyMode bool = false
	this.ReadOnlyMode = &readOnlyMode
	var dscpToPBitMap string = "0000000011111111222222223333333344444444555555556666666677777777"
	this.DscpToPBitMap = &dscpToPBitMap
	var anycastMacAddress string = "(auto)"
	this.AnycastMacAddress = &anycastMacAddress
	var macAddressAgingTime int32 = 600
	this.MacAddressAgingTime = &macAddressAgingTime
	var mlagDelayRestoreTimer int32 = 300
	this.MlagDelayRestoreTimer = &mlagDelayRestoreTimer
	var bgpKeepaliveTimer int32 = 60
	this.BgpKeepaliveTimer = &bgpKeepaliveTimer
	var bgpHoldDownTimer int32 = 180
	this.BgpHoldDownTimer = &bgpHoldDownTimer
	var spineBgpAdvertisementInterval int32 = 1
	this.SpineBgpAdvertisementInterval = &spineBgpAdvertisementInterval
	var spineBgpConnectTimer int32 = 120
	this.SpineBgpConnectTimer = &spineBgpConnectTimer
	var leafBgpKeepAliveTimer int32 = 60
	this.LeafBgpKeepAliveTimer = &leafBgpKeepAliveTimer
	var leafBgpHoldDownTimer int32 = 180
	this.LeafBgpHoldDownTimer = &leafBgpHoldDownTimer
	var leafBgpAdvertisementInterval int32 = 1
	this.LeafBgpAdvertisementInterval = &leafBgpAdvertisementInterval
	var leafBgpConnectTimer int32 = 120
	this.LeafBgpConnectTimer = &leafBgpConnectTimer
	var linkStateTimeoutValue int32 = 60
	this.LinkStateTimeoutValue = *NewNullableInt32(&linkStateTimeoutValue)
	var evpnMultihomingStartupDelay int32 = 300
	this.EvpnMultihomingStartupDelay = *NewNullableInt32(&evpnMultihomingStartupDelay)
	var evpnMacHoldtime int32 = 1080
	this.EvpnMacHoldtime = *NewNullableInt32(&evpnMacHoldtime)
	var aggressiveReporting bool = true
	this.AggressiveReporting = &aggressiveReporting
	var crcFailureThreshold int32 = 5
	this.CrcFailureThreshold = *NewNullableInt32(&crcFailureThreshold)
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ConfigPutRequestSiteSiteName) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestSiteSiteName) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ConfigPutRequestSiteSiteName) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ConfigPutRequestSiteSiteName) SetName(v string) {
	o.Name = &v
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *ConfigPutRequestSiteSiteName) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestSiteSiteName) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *ConfigPutRequestSiteSiteName) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *ConfigPutRequestSiteSiteName) SetEnable(v bool) {
	o.Enable = &v
}

// GetServiceForSite returns the ServiceForSite field value if set, zero value otherwise.
func (o *ConfigPutRequestSiteSiteName) GetServiceForSite() string {
	if o == nil || IsNil(o.ServiceForSite) {
		var ret string
		return ret
	}
	return *o.ServiceForSite
}

// GetServiceForSiteOk returns a tuple with the ServiceForSite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestSiteSiteName) GetServiceForSiteOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceForSite) {
		return nil, false
	}
	return o.ServiceForSite, true
}

// HasServiceForSite returns a boolean if a field has been set.
func (o *ConfigPutRequestSiteSiteName) HasServiceForSite() bool {
	if o != nil && !IsNil(o.ServiceForSite) {
		return true
	}

	return false
}

// SetServiceForSite gets a reference to the given string and assigns it to the ServiceForSite field.
func (o *ConfigPutRequestSiteSiteName) SetServiceForSite(v string) {
	o.ServiceForSite = &v
}

// GetServiceForSiteRefType returns the ServiceForSiteRefType field value if set, zero value otherwise.
func (o *ConfigPutRequestSiteSiteName) GetServiceForSiteRefType() string {
	if o == nil || IsNil(o.ServiceForSiteRefType) {
		var ret string
		return ret
	}
	return *o.ServiceForSiteRefType
}

// GetServiceForSiteRefTypeOk returns a tuple with the ServiceForSiteRefType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestSiteSiteName) GetServiceForSiteRefTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceForSiteRefType) {
		return nil, false
	}
	return o.ServiceForSiteRefType, true
}

// HasServiceForSiteRefType returns a boolean if a field has been set.
func (o *ConfigPutRequestSiteSiteName) HasServiceForSiteRefType() bool {
	if o != nil && !IsNil(o.ServiceForSiteRefType) {
		return true
	}

	return false
}

// SetServiceForSiteRefType gets a reference to the given string and assigns it to the ServiceForSiteRefType field.
func (o *ConfigPutRequestSiteSiteName) SetServiceForSiteRefType(v string) {
	o.ServiceForSiteRefType = &v
}

// GetSpanningTreeType returns the SpanningTreeType field value if set, zero value otherwise.
func (o *ConfigPutRequestSiteSiteName) GetSpanningTreeType() string {
	if o == nil || IsNil(o.SpanningTreeType) {
		var ret string
		return ret
	}
	return *o.SpanningTreeType
}

// GetSpanningTreeTypeOk returns a tuple with the SpanningTreeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestSiteSiteName) GetSpanningTreeTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SpanningTreeType) {
		return nil, false
	}
	return o.SpanningTreeType, true
}

// HasSpanningTreeType returns a boolean if a field has been set.
func (o *ConfigPutRequestSiteSiteName) HasSpanningTreeType() bool {
	if o != nil && !IsNil(o.SpanningTreeType) {
		return true
	}

	return false
}

// SetSpanningTreeType gets a reference to the given string and assigns it to the SpanningTreeType field.
func (o *ConfigPutRequestSiteSiteName) SetSpanningTreeType(v string) {
	o.SpanningTreeType = &v
}

// GetRegionName returns the RegionName field value if set, zero value otherwise.
func (o *ConfigPutRequestSiteSiteName) GetRegionName() string {
	if o == nil || IsNil(o.RegionName) {
		var ret string
		return ret
	}
	return *o.RegionName
}

// GetRegionNameOk returns a tuple with the RegionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestSiteSiteName) GetRegionNameOk() (*string, bool) {
	if o == nil || IsNil(o.RegionName) {
		return nil, false
	}
	return o.RegionName, true
}

// HasRegionName returns a boolean if a field has been set.
func (o *ConfigPutRequestSiteSiteName) HasRegionName() bool {
	if o != nil && !IsNil(o.RegionName) {
		return true
	}

	return false
}

// SetRegionName gets a reference to the given string and assigns it to the RegionName field.
func (o *ConfigPutRequestSiteSiteName) SetRegionName(v string) {
	o.RegionName = &v
}

// GetRevision returns the Revision field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigPutRequestSiteSiteName) GetRevision() int32 {
	if o == nil || IsNil(o.Revision.Get()) {
		var ret int32
		return ret
	}
	return *o.Revision.Get()
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigPutRequestSiteSiteName) GetRevisionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Revision.Get(), o.Revision.IsSet()
}

// HasRevision returns a boolean if a field has been set.
func (o *ConfigPutRequestSiteSiteName) HasRevision() bool {
	if o != nil && o.Revision.IsSet() {
		return true
	}

	return false
}

// SetRevision gets a reference to the given NullableInt32 and assigns it to the Revision field.
func (o *ConfigPutRequestSiteSiteName) SetRevision(v int32) {
	o.Revision.Set(&v)
}
// SetRevisionNil sets the value for Revision to be an explicit nil
func (o *ConfigPutRequestSiteSiteName) SetRevisionNil() {
	o.Revision.Set(nil)
}

// UnsetRevision ensures that no value is present for Revision, not even an explicit nil
func (o *ConfigPutRequestSiteSiteName) UnsetRevision() {
	o.Revision.Unset()
}

// GetForceSpanningTreeOnFabricPorts returns the ForceSpanningTreeOnFabricPorts field value if set, zero value otherwise.
func (o *ConfigPutRequestSiteSiteName) GetForceSpanningTreeOnFabricPorts() bool {
	if o == nil || IsNil(o.ForceSpanningTreeOnFabricPorts) {
		var ret bool
		return ret
	}
	return *o.ForceSpanningTreeOnFabricPorts
}

// GetForceSpanningTreeOnFabricPortsOk returns a tuple with the ForceSpanningTreeOnFabricPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestSiteSiteName) GetForceSpanningTreeOnFabricPortsOk() (*bool, bool) {
	if o == nil || IsNil(o.ForceSpanningTreeOnFabricPorts) {
		return nil, false
	}
	return o.ForceSpanningTreeOnFabricPorts, true
}

// HasForceSpanningTreeOnFabricPorts returns a boolean if a field has been set.
func (o *ConfigPutRequestSiteSiteName) HasForceSpanningTreeOnFabricPorts() bool {
	if o != nil && !IsNil(o.ForceSpanningTreeOnFabricPorts) {
		return true
	}

	return false
}

// SetForceSpanningTreeOnFabricPorts gets a reference to the given bool and assigns it to the ForceSpanningTreeOnFabricPorts field.
func (o *ConfigPutRequestSiteSiteName) SetForceSpanningTreeOnFabricPorts(v bool) {
	o.ForceSpanningTreeOnFabricPorts = &v
}

// GetReadOnlyMode returns the ReadOnlyMode field value if set, zero value otherwise.
func (o *ConfigPutRequestSiteSiteName) GetReadOnlyMode() bool {
	if o == nil || IsNil(o.ReadOnlyMode) {
		var ret bool
		return ret
	}
	return *o.ReadOnlyMode
}

// GetReadOnlyModeOk returns a tuple with the ReadOnlyMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestSiteSiteName) GetReadOnlyModeOk() (*bool, bool) {
	if o == nil || IsNil(o.ReadOnlyMode) {
		return nil, false
	}
	return o.ReadOnlyMode, true
}

// HasReadOnlyMode returns a boolean if a field has been set.
func (o *ConfigPutRequestSiteSiteName) HasReadOnlyMode() bool {
	if o != nil && !IsNil(o.ReadOnlyMode) {
		return true
	}

	return false
}

// SetReadOnlyMode gets a reference to the given bool and assigns it to the ReadOnlyMode field.
func (o *ConfigPutRequestSiteSiteName) SetReadOnlyMode(v bool) {
	o.ReadOnlyMode = &v
}

// GetDscpToPBitMap returns the DscpToPBitMap field value if set, zero value otherwise.
func (o *ConfigPutRequestSiteSiteName) GetDscpToPBitMap() string {
	if o == nil || IsNil(o.DscpToPBitMap) {
		var ret string
		return ret
	}
	return *o.DscpToPBitMap
}

// GetDscpToPBitMapOk returns a tuple with the DscpToPBitMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestSiteSiteName) GetDscpToPBitMapOk() (*string, bool) {
	if o == nil || IsNil(o.DscpToPBitMap) {
		return nil, false
	}
	return o.DscpToPBitMap, true
}

// HasDscpToPBitMap returns a boolean if a field has been set.
func (o *ConfigPutRequestSiteSiteName) HasDscpToPBitMap() bool {
	if o != nil && !IsNil(o.DscpToPBitMap) {
		return true
	}

	return false
}

// SetDscpToPBitMap gets a reference to the given string and assigns it to the DscpToPBitMap field.
func (o *ConfigPutRequestSiteSiteName) SetDscpToPBitMap(v string) {
	o.DscpToPBitMap = &v
}

// GetAnycastMacAddress returns the AnycastMacAddress field value if set, zero value otherwise.
func (o *ConfigPutRequestSiteSiteName) GetAnycastMacAddress() string {
	if o == nil || IsNil(o.AnycastMacAddress) {
		var ret string
		return ret
	}
	return *o.AnycastMacAddress
}

// GetAnycastMacAddressOk returns a tuple with the AnycastMacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestSiteSiteName) GetAnycastMacAddressOk() (*string, bool) {
	if o == nil || IsNil(o.AnycastMacAddress) {
		return nil, false
	}
	return o.AnycastMacAddress, true
}

// HasAnycastMacAddress returns a boolean if a field has been set.
func (o *ConfigPutRequestSiteSiteName) HasAnycastMacAddress() bool {
	if o != nil && !IsNil(o.AnycastMacAddress) {
		return true
	}

	return false
}

// SetAnycastMacAddress gets a reference to the given string and assigns it to the AnycastMacAddress field.
func (o *ConfigPutRequestSiteSiteName) SetAnycastMacAddress(v string) {
	o.AnycastMacAddress = &v
}

// GetAnycastMacAddressAutoAssigned returns the AnycastMacAddressAutoAssigned field value if set, zero value otherwise.
func (o *ConfigPutRequestSiteSiteName) GetAnycastMacAddressAutoAssigned() bool {
	if o == nil || IsNil(o.AnycastMacAddressAutoAssigned) {
		var ret bool
		return ret
	}
	return *o.AnycastMacAddressAutoAssigned
}

// GetAnycastMacAddressAutoAssignedOk returns a tuple with the AnycastMacAddressAutoAssigned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestSiteSiteName) GetAnycastMacAddressAutoAssignedOk() (*bool, bool) {
	if o == nil || IsNil(o.AnycastMacAddressAutoAssigned) {
		return nil, false
	}
	return o.AnycastMacAddressAutoAssigned, true
}

// HasAnycastMacAddressAutoAssigned returns a boolean if a field has been set.
func (o *ConfigPutRequestSiteSiteName) HasAnycastMacAddressAutoAssigned() bool {
	if o != nil && !IsNil(o.AnycastMacAddressAutoAssigned) {
		return true
	}

	return false
}

// SetAnycastMacAddressAutoAssigned gets a reference to the given bool and assigns it to the AnycastMacAddressAutoAssigned field.
func (o *ConfigPutRequestSiteSiteName) SetAnycastMacAddressAutoAssigned(v bool) {
	o.AnycastMacAddressAutoAssigned = &v
}

// GetMacAddressAgingTime returns the MacAddressAgingTime field value if set, zero value otherwise.
func (o *ConfigPutRequestSiteSiteName) GetMacAddressAgingTime() int32 {
	if o == nil || IsNil(o.MacAddressAgingTime) {
		var ret int32
		return ret
	}
	return *o.MacAddressAgingTime
}

// GetMacAddressAgingTimeOk returns a tuple with the MacAddressAgingTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestSiteSiteName) GetMacAddressAgingTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.MacAddressAgingTime) {
		return nil, false
	}
	return o.MacAddressAgingTime, true
}

// HasMacAddressAgingTime returns a boolean if a field has been set.
func (o *ConfigPutRequestSiteSiteName) HasMacAddressAgingTime() bool {
	if o != nil && !IsNil(o.MacAddressAgingTime) {
		return true
	}

	return false
}

// SetMacAddressAgingTime gets a reference to the given int32 and assigns it to the MacAddressAgingTime field.
func (o *ConfigPutRequestSiteSiteName) SetMacAddressAgingTime(v int32) {
	o.MacAddressAgingTime = &v
}

// GetMlagDelayRestoreTimer returns the MlagDelayRestoreTimer field value if set, zero value otherwise.
func (o *ConfigPutRequestSiteSiteName) GetMlagDelayRestoreTimer() int32 {
	if o == nil || IsNil(o.MlagDelayRestoreTimer) {
		var ret int32
		return ret
	}
	return *o.MlagDelayRestoreTimer
}

// GetMlagDelayRestoreTimerOk returns a tuple with the MlagDelayRestoreTimer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestSiteSiteName) GetMlagDelayRestoreTimerOk() (*int32, bool) {
	if o == nil || IsNil(o.MlagDelayRestoreTimer) {
		return nil, false
	}
	return o.MlagDelayRestoreTimer, true
}

// HasMlagDelayRestoreTimer returns a boolean if a field has been set.
func (o *ConfigPutRequestSiteSiteName) HasMlagDelayRestoreTimer() bool {
	if o != nil && !IsNil(o.MlagDelayRestoreTimer) {
		return true
	}

	return false
}

// SetMlagDelayRestoreTimer gets a reference to the given int32 and assigns it to the MlagDelayRestoreTimer field.
func (o *ConfigPutRequestSiteSiteName) SetMlagDelayRestoreTimer(v int32) {
	o.MlagDelayRestoreTimer = &v
}

// GetBgpKeepaliveTimer returns the BgpKeepaliveTimer field value if set, zero value otherwise.
func (o *ConfigPutRequestSiteSiteName) GetBgpKeepaliveTimer() int32 {
	if o == nil || IsNil(o.BgpKeepaliveTimer) {
		var ret int32
		return ret
	}
	return *o.BgpKeepaliveTimer
}

// GetBgpKeepaliveTimerOk returns a tuple with the BgpKeepaliveTimer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestSiteSiteName) GetBgpKeepaliveTimerOk() (*int32, bool) {
	if o == nil || IsNil(o.BgpKeepaliveTimer) {
		return nil, false
	}
	return o.BgpKeepaliveTimer, true
}

// HasBgpKeepaliveTimer returns a boolean if a field has been set.
func (o *ConfigPutRequestSiteSiteName) HasBgpKeepaliveTimer() bool {
	if o != nil && !IsNil(o.BgpKeepaliveTimer) {
		return true
	}

	return false
}

// SetBgpKeepaliveTimer gets a reference to the given int32 and assigns it to the BgpKeepaliveTimer field.
func (o *ConfigPutRequestSiteSiteName) SetBgpKeepaliveTimer(v int32) {
	o.BgpKeepaliveTimer = &v
}

// GetBgpHoldDownTimer returns the BgpHoldDownTimer field value if set, zero value otherwise.
func (o *ConfigPutRequestSiteSiteName) GetBgpHoldDownTimer() int32 {
	if o == nil || IsNil(o.BgpHoldDownTimer) {
		var ret int32
		return ret
	}
	return *o.BgpHoldDownTimer
}

// GetBgpHoldDownTimerOk returns a tuple with the BgpHoldDownTimer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestSiteSiteName) GetBgpHoldDownTimerOk() (*int32, bool) {
	if o == nil || IsNil(o.BgpHoldDownTimer) {
		return nil, false
	}
	return o.BgpHoldDownTimer, true
}

// HasBgpHoldDownTimer returns a boolean if a field has been set.
func (o *ConfigPutRequestSiteSiteName) HasBgpHoldDownTimer() bool {
	if o != nil && !IsNil(o.BgpHoldDownTimer) {
		return true
	}

	return false
}

// SetBgpHoldDownTimer gets a reference to the given int32 and assigns it to the BgpHoldDownTimer field.
func (o *ConfigPutRequestSiteSiteName) SetBgpHoldDownTimer(v int32) {
	o.BgpHoldDownTimer = &v
}

// GetSpineBgpAdvertisementInterval returns the SpineBgpAdvertisementInterval field value if set, zero value otherwise.
func (o *ConfigPutRequestSiteSiteName) GetSpineBgpAdvertisementInterval() int32 {
	if o == nil || IsNil(o.SpineBgpAdvertisementInterval) {
		var ret int32
		return ret
	}
	return *o.SpineBgpAdvertisementInterval
}

// GetSpineBgpAdvertisementIntervalOk returns a tuple with the SpineBgpAdvertisementInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestSiteSiteName) GetSpineBgpAdvertisementIntervalOk() (*int32, bool) {
	if o == nil || IsNil(o.SpineBgpAdvertisementInterval) {
		return nil, false
	}
	return o.SpineBgpAdvertisementInterval, true
}

// HasSpineBgpAdvertisementInterval returns a boolean if a field has been set.
func (o *ConfigPutRequestSiteSiteName) HasSpineBgpAdvertisementInterval() bool {
	if o != nil && !IsNil(o.SpineBgpAdvertisementInterval) {
		return true
	}

	return false
}

// SetSpineBgpAdvertisementInterval gets a reference to the given int32 and assigns it to the SpineBgpAdvertisementInterval field.
func (o *ConfigPutRequestSiteSiteName) SetSpineBgpAdvertisementInterval(v int32) {
	o.SpineBgpAdvertisementInterval = &v
}

// GetSpineBgpConnectTimer returns the SpineBgpConnectTimer field value if set, zero value otherwise.
func (o *ConfigPutRequestSiteSiteName) GetSpineBgpConnectTimer() int32 {
	if o == nil || IsNil(o.SpineBgpConnectTimer) {
		var ret int32
		return ret
	}
	return *o.SpineBgpConnectTimer
}

// GetSpineBgpConnectTimerOk returns a tuple with the SpineBgpConnectTimer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestSiteSiteName) GetSpineBgpConnectTimerOk() (*int32, bool) {
	if o == nil || IsNil(o.SpineBgpConnectTimer) {
		return nil, false
	}
	return o.SpineBgpConnectTimer, true
}

// HasSpineBgpConnectTimer returns a boolean if a field has been set.
func (o *ConfigPutRequestSiteSiteName) HasSpineBgpConnectTimer() bool {
	if o != nil && !IsNil(o.SpineBgpConnectTimer) {
		return true
	}

	return false
}

// SetSpineBgpConnectTimer gets a reference to the given int32 and assigns it to the SpineBgpConnectTimer field.
func (o *ConfigPutRequestSiteSiteName) SetSpineBgpConnectTimer(v int32) {
	o.SpineBgpConnectTimer = &v
}

// GetLeafBgpKeepAliveTimer returns the LeafBgpKeepAliveTimer field value if set, zero value otherwise.
func (o *ConfigPutRequestSiteSiteName) GetLeafBgpKeepAliveTimer() int32 {
	if o == nil || IsNil(o.LeafBgpKeepAliveTimer) {
		var ret int32
		return ret
	}
	return *o.LeafBgpKeepAliveTimer
}

// GetLeafBgpKeepAliveTimerOk returns a tuple with the LeafBgpKeepAliveTimer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestSiteSiteName) GetLeafBgpKeepAliveTimerOk() (*int32, bool) {
	if o == nil || IsNil(o.LeafBgpKeepAliveTimer) {
		return nil, false
	}
	return o.LeafBgpKeepAliveTimer, true
}

// HasLeafBgpKeepAliveTimer returns a boolean if a field has been set.
func (o *ConfigPutRequestSiteSiteName) HasLeafBgpKeepAliveTimer() bool {
	if o != nil && !IsNil(o.LeafBgpKeepAliveTimer) {
		return true
	}

	return false
}

// SetLeafBgpKeepAliveTimer gets a reference to the given int32 and assigns it to the LeafBgpKeepAliveTimer field.
func (o *ConfigPutRequestSiteSiteName) SetLeafBgpKeepAliveTimer(v int32) {
	o.LeafBgpKeepAliveTimer = &v
}

// GetLeafBgpHoldDownTimer returns the LeafBgpHoldDownTimer field value if set, zero value otherwise.
func (o *ConfigPutRequestSiteSiteName) GetLeafBgpHoldDownTimer() int32 {
	if o == nil || IsNil(o.LeafBgpHoldDownTimer) {
		var ret int32
		return ret
	}
	return *o.LeafBgpHoldDownTimer
}

// GetLeafBgpHoldDownTimerOk returns a tuple with the LeafBgpHoldDownTimer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestSiteSiteName) GetLeafBgpHoldDownTimerOk() (*int32, bool) {
	if o == nil || IsNil(o.LeafBgpHoldDownTimer) {
		return nil, false
	}
	return o.LeafBgpHoldDownTimer, true
}

// HasLeafBgpHoldDownTimer returns a boolean if a field has been set.
func (o *ConfigPutRequestSiteSiteName) HasLeafBgpHoldDownTimer() bool {
	if o != nil && !IsNil(o.LeafBgpHoldDownTimer) {
		return true
	}

	return false
}

// SetLeafBgpHoldDownTimer gets a reference to the given int32 and assigns it to the LeafBgpHoldDownTimer field.
func (o *ConfigPutRequestSiteSiteName) SetLeafBgpHoldDownTimer(v int32) {
	o.LeafBgpHoldDownTimer = &v
}

// GetLeafBgpAdvertisementInterval returns the LeafBgpAdvertisementInterval field value if set, zero value otherwise.
func (o *ConfigPutRequestSiteSiteName) GetLeafBgpAdvertisementInterval() int32 {
	if o == nil || IsNil(o.LeafBgpAdvertisementInterval) {
		var ret int32
		return ret
	}
	return *o.LeafBgpAdvertisementInterval
}

// GetLeafBgpAdvertisementIntervalOk returns a tuple with the LeafBgpAdvertisementInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestSiteSiteName) GetLeafBgpAdvertisementIntervalOk() (*int32, bool) {
	if o == nil || IsNil(o.LeafBgpAdvertisementInterval) {
		return nil, false
	}
	return o.LeafBgpAdvertisementInterval, true
}

// HasLeafBgpAdvertisementInterval returns a boolean if a field has been set.
func (o *ConfigPutRequestSiteSiteName) HasLeafBgpAdvertisementInterval() bool {
	if o != nil && !IsNil(o.LeafBgpAdvertisementInterval) {
		return true
	}

	return false
}

// SetLeafBgpAdvertisementInterval gets a reference to the given int32 and assigns it to the LeafBgpAdvertisementInterval field.
func (o *ConfigPutRequestSiteSiteName) SetLeafBgpAdvertisementInterval(v int32) {
	o.LeafBgpAdvertisementInterval = &v
}

// GetLeafBgpConnectTimer returns the LeafBgpConnectTimer field value if set, zero value otherwise.
func (o *ConfigPutRequestSiteSiteName) GetLeafBgpConnectTimer() int32 {
	if o == nil || IsNil(o.LeafBgpConnectTimer) {
		var ret int32
		return ret
	}
	return *o.LeafBgpConnectTimer
}

// GetLeafBgpConnectTimerOk returns a tuple with the LeafBgpConnectTimer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestSiteSiteName) GetLeafBgpConnectTimerOk() (*int32, bool) {
	if o == nil || IsNil(o.LeafBgpConnectTimer) {
		return nil, false
	}
	return o.LeafBgpConnectTimer, true
}

// HasLeafBgpConnectTimer returns a boolean if a field has been set.
func (o *ConfigPutRequestSiteSiteName) HasLeafBgpConnectTimer() bool {
	if o != nil && !IsNil(o.LeafBgpConnectTimer) {
		return true
	}

	return false
}

// SetLeafBgpConnectTimer gets a reference to the given int32 and assigns it to the LeafBgpConnectTimer field.
func (o *ConfigPutRequestSiteSiteName) SetLeafBgpConnectTimer(v int32) {
	o.LeafBgpConnectTimer = &v
}

// GetLinkStateTimeoutValue returns the LinkStateTimeoutValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigPutRequestSiteSiteName) GetLinkStateTimeoutValue() int32 {
	if o == nil || IsNil(o.LinkStateTimeoutValue.Get()) {
		var ret int32
		return ret
	}
	return *o.LinkStateTimeoutValue.Get()
}

// GetLinkStateTimeoutValueOk returns a tuple with the LinkStateTimeoutValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigPutRequestSiteSiteName) GetLinkStateTimeoutValueOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LinkStateTimeoutValue.Get(), o.LinkStateTimeoutValue.IsSet()
}

// HasLinkStateTimeoutValue returns a boolean if a field has been set.
func (o *ConfigPutRequestSiteSiteName) HasLinkStateTimeoutValue() bool {
	if o != nil && o.LinkStateTimeoutValue.IsSet() {
		return true
	}

	return false
}

// SetLinkStateTimeoutValue gets a reference to the given NullableInt32 and assigns it to the LinkStateTimeoutValue field.
func (o *ConfigPutRequestSiteSiteName) SetLinkStateTimeoutValue(v int32) {
	o.LinkStateTimeoutValue.Set(&v)
}
// SetLinkStateTimeoutValueNil sets the value for LinkStateTimeoutValue to be an explicit nil
func (o *ConfigPutRequestSiteSiteName) SetLinkStateTimeoutValueNil() {
	o.LinkStateTimeoutValue.Set(nil)
}

// UnsetLinkStateTimeoutValue ensures that no value is present for LinkStateTimeoutValue, not even an explicit nil
func (o *ConfigPutRequestSiteSiteName) UnsetLinkStateTimeoutValue() {
	o.LinkStateTimeoutValue.Unset()
}

// GetEvpnMultihomingStartupDelay returns the EvpnMultihomingStartupDelay field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigPutRequestSiteSiteName) GetEvpnMultihomingStartupDelay() int32 {
	if o == nil || IsNil(o.EvpnMultihomingStartupDelay.Get()) {
		var ret int32
		return ret
	}
	return *o.EvpnMultihomingStartupDelay.Get()
}

// GetEvpnMultihomingStartupDelayOk returns a tuple with the EvpnMultihomingStartupDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigPutRequestSiteSiteName) GetEvpnMultihomingStartupDelayOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.EvpnMultihomingStartupDelay.Get(), o.EvpnMultihomingStartupDelay.IsSet()
}

// HasEvpnMultihomingStartupDelay returns a boolean if a field has been set.
func (o *ConfigPutRequestSiteSiteName) HasEvpnMultihomingStartupDelay() bool {
	if o != nil && o.EvpnMultihomingStartupDelay.IsSet() {
		return true
	}

	return false
}

// SetEvpnMultihomingStartupDelay gets a reference to the given NullableInt32 and assigns it to the EvpnMultihomingStartupDelay field.
func (o *ConfigPutRequestSiteSiteName) SetEvpnMultihomingStartupDelay(v int32) {
	o.EvpnMultihomingStartupDelay.Set(&v)
}
// SetEvpnMultihomingStartupDelayNil sets the value for EvpnMultihomingStartupDelay to be an explicit nil
func (o *ConfigPutRequestSiteSiteName) SetEvpnMultihomingStartupDelayNil() {
	o.EvpnMultihomingStartupDelay.Set(nil)
}

// UnsetEvpnMultihomingStartupDelay ensures that no value is present for EvpnMultihomingStartupDelay, not even an explicit nil
func (o *ConfigPutRequestSiteSiteName) UnsetEvpnMultihomingStartupDelay() {
	o.EvpnMultihomingStartupDelay.Unset()
}

// GetEvpnMacHoldtime returns the EvpnMacHoldtime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigPutRequestSiteSiteName) GetEvpnMacHoldtime() int32 {
	if o == nil || IsNil(o.EvpnMacHoldtime.Get()) {
		var ret int32
		return ret
	}
	return *o.EvpnMacHoldtime.Get()
}

// GetEvpnMacHoldtimeOk returns a tuple with the EvpnMacHoldtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigPutRequestSiteSiteName) GetEvpnMacHoldtimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.EvpnMacHoldtime.Get(), o.EvpnMacHoldtime.IsSet()
}

// HasEvpnMacHoldtime returns a boolean if a field has been set.
func (o *ConfigPutRequestSiteSiteName) HasEvpnMacHoldtime() bool {
	if o != nil && o.EvpnMacHoldtime.IsSet() {
		return true
	}

	return false
}

// SetEvpnMacHoldtime gets a reference to the given NullableInt32 and assigns it to the EvpnMacHoldtime field.
func (o *ConfigPutRequestSiteSiteName) SetEvpnMacHoldtime(v int32) {
	o.EvpnMacHoldtime.Set(&v)
}
// SetEvpnMacHoldtimeNil sets the value for EvpnMacHoldtime to be an explicit nil
func (o *ConfigPutRequestSiteSiteName) SetEvpnMacHoldtimeNil() {
	o.EvpnMacHoldtime.Set(nil)
}

// UnsetEvpnMacHoldtime ensures that no value is present for EvpnMacHoldtime, not even an explicit nil
func (o *ConfigPutRequestSiteSiteName) UnsetEvpnMacHoldtime() {
	o.EvpnMacHoldtime.Unset()
}

// GetAggressiveReporting returns the AggressiveReporting field value if set, zero value otherwise.
func (o *ConfigPutRequestSiteSiteName) GetAggressiveReporting() bool {
	if o == nil || IsNil(o.AggressiveReporting) {
		var ret bool
		return ret
	}
	return *o.AggressiveReporting
}

// GetAggressiveReportingOk returns a tuple with the AggressiveReporting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestSiteSiteName) GetAggressiveReportingOk() (*bool, bool) {
	if o == nil || IsNil(o.AggressiveReporting) {
		return nil, false
	}
	return o.AggressiveReporting, true
}

// HasAggressiveReporting returns a boolean if a field has been set.
func (o *ConfigPutRequestSiteSiteName) HasAggressiveReporting() bool {
	if o != nil && !IsNil(o.AggressiveReporting) {
		return true
	}

	return false
}

// SetAggressiveReporting gets a reference to the given bool and assigns it to the AggressiveReporting field.
func (o *ConfigPutRequestSiteSiteName) SetAggressiveReporting(v bool) {
	o.AggressiveReporting = &v
}

// GetCrcFailureThreshold returns the CrcFailureThreshold field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigPutRequestSiteSiteName) GetCrcFailureThreshold() int32 {
	if o == nil || IsNil(o.CrcFailureThreshold.Get()) {
		var ret int32
		return ret
	}
	return *o.CrcFailureThreshold.Get()
}

// GetCrcFailureThresholdOk returns a tuple with the CrcFailureThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigPutRequestSiteSiteName) GetCrcFailureThresholdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CrcFailureThreshold.Get(), o.CrcFailureThreshold.IsSet()
}

// HasCrcFailureThreshold returns a boolean if a field has been set.
func (o *ConfigPutRequestSiteSiteName) HasCrcFailureThreshold() bool {
	if o != nil && o.CrcFailureThreshold.IsSet() {
		return true
	}

	return false
}

// SetCrcFailureThreshold gets a reference to the given NullableInt32 and assigns it to the CrcFailureThreshold field.
func (o *ConfigPutRequestSiteSiteName) SetCrcFailureThreshold(v int32) {
	o.CrcFailureThreshold.Set(&v)
}
// SetCrcFailureThresholdNil sets the value for CrcFailureThreshold to be an explicit nil
func (o *ConfigPutRequestSiteSiteName) SetCrcFailureThresholdNil() {
	o.CrcFailureThreshold.Set(nil)
}

// UnsetCrcFailureThreshold ensures that no value is present for CrcFailureThreshold, not even an explicit nil
func (o *ConfigPutRequestSiteSiteName) UnsetCrcFailureThreshold() {
	o.CrcFailureThreshold.Unset()
}

// GetIslands returns the Islands field value if set, zero value otherwise.
func (o *ConfigPutRequestSiteSiteName) GetIslands() []ConfigPutRequestSiteSiteNameIslandsInner {
	if o == nil || IsNil(o.Islands) {
		var ret []ConfigPutRequestSiteSiteNameIslandsInner
		return ret
	}
	return o.Islands
}

// GetIslandsOk returns a tuple with the Islands field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestSiteSiteName) GetIslandsOk() ([]ConfigPutRequestSiteSiteNameIslandsInner, bool) {
	if o == nil || IsNil(o.Islands) {
		return nil, false
	}
	return o.Islands, true
}

// HasIslands returns a boolean if a field has been set.
func (o *ConfigPutRequestSiteSiteName) HasIslands() bool {
	if o != nil && !IsNil(o.Islands) {
		return true
	}

	return false
}

// SetIslands gets a reference to the given []ConfigPutRequestSiteSiteNameIslandsInner and assigns it to the Islands field.
func (o *ConfigPutRequestSiteSiteName) SetIslands(v []ConfigPutRequestSiteSiteNameIslandsInner) {
	o.Islands = v
}

// GetPairs returns the Pairs field value if set, zero value otherwise.
func (o *ConfigPutRequestSiteSiteName) GetPairs() []ConfigPutRequestSiteSiteNamePairsInner {
	if o == nil || IsNil(o.Pairs) {
		var ret []ConfigPutRequestSiteSiteNamePairsInner
		return ret
	}
	return o.Pairs
}

// GetPairsOk returns a tuple with the Pairs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestSiteSiteName) GetPairsOk() ([]ConfigPutRequestSiteSiteNamePairsInner, bool) {
	if o == nil || IsNil(o.Pairs) {
		return nil, false
	}
	return o.Pairs, true
}

// HasPairs returns a boolean if a field has been set.
func (o *ConfigPutRequestSiteSiteName) HasPairs() bool {
	if o != nil && !IsNil(o.Pairs) {
		return true
	}

	return false
}

// SetPairs gets a reference to the given []ConfigPutRequestSiteSiteNamePairsInner and assigns it to the Pairs field.
func (o *ConfigPutRequestSiteSiteName) SetPairs(v []ConfigPutRequestSiteSiteNamePairsInner) {
	o.Pairs = v
}

// GetObjectProperties returns the ObjectProperties field value if set, zero value otherwise.
func (o *ConfigPutRequestSiteSiteName) GetObjectProperties() ConfigPutRequestSiteSiteNameObjectProperties {
	if o == nil || IsNil(o.ObjectProperties) {
		var ret ConfigPutRequestSiteSiteNameObjectProperties
		return ret
	}
	return *o.ObjectProperties
}

// GetObjectPropertiesOk returns a tuple with the ObjectProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestSiteSiteName) GetObjectPropertiesOk() (*ConfigPutRequestSiteSiteNameObjectProperties, bool) {
	if o == nil || IsNil(o.ObjectProperties) {
		return nil, false
	}
	return o.ObjectProperties, true
}

// HasObjectProperties returns a boolean if a field has been set.
func (o *ConfigPutRequestSiteSiteName) HasObjectProperties() bool {
	if o != nil && !IsNil(o.ObjectProperties) {
		return true
	}

	return false
}

// SetObjectProperties gets a reference to the given ConfigPutRequestSiteSiteNameObjectProperties and assigns it to the ObjectProperties field.
func (o *ConfigPutRequestSiteSiteName) SetObjectProperties(v ConfigPutRequestSiteSiteNameObjectProperties) {
	o.ObjectProperties = &v
}

func (o ConfigPutRequestSiteSiteName) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigPutRequestSiteSiteName) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.ServiceForSite) {
		toSerialize["service_for_site"] = o.ServiceForSite
	}
	if !IsNil(o.ServiceForSiteRefType) {
		toSerialize["service_for_site_ref_type_"] = o.ServiceForSiteRefType
	}
	if !IsNil(o.SpanningTreeType) {
		toSerialize["spanning_tree_type"] = o.SpanningTreeType
	}
	if !IsNil(o.RegionName) {
		toSerialize["region_name"] = o.RegionName
	}
	if o.Revision.IsSet() {
		toSerialize["revision"] = o.Revision.Get()
	}
	if !IsNil(o.ForceSpanningTreeOnFabricPorts) {
		toSerialize["force_spanning_tree_on_fabric_ports"] = o.ForceSpanningTreeOnFabricPorts
	}
	if !IsNil(o.ReadOnlyMode) {
		toSerialize["read_only_mode"] = o.ReadOnlyMode
	}
	if !IsNil(o.DscpToPBitMap) {
		toSerialize["dscp_to_p_bit_map"] = o.DscpToPBitMap
	}
	if !IsNil(o.AnycastMacAddress) {
		toSerialize["anycast_mac_address"] = o.AnycastMacAddress
	}
	if !IsNil(o.AnycastMacAddressAutoAssigned) {
		toSerialize["anycast_mac_address_auto_assigned_"] = o.AnycastMacAddressAutoAssigned
	}
	if !IsNil(o.MacAddressAgingTime) {
		toSerialize["mac_address_aging_time"] = o.MacAddressAgingTime
	}
	if !IsNil(o.MlagDelayRestoreTimer) {
		toSerialize["mlag_delay_restore_timer"] = o.MlagDelayRestoreTimer
	}
	if !IsNil(o.BgpKeepaliveTimer) {
		toSerialize["bgp_keepalive_timer"] = o.BgpKeepaliveTimer
	}
	if !IsNil(o.BgpHoldDownTimer) {
		toSerialize["bgp_hold_down_timer"] = o.BgpHoldDownTimer
	}
	if !IsNil(o.SpineBgpAdvertisementInterval) {
		toSerialize["spine_bgp_advertisement_interval"] = o.SpineBgpAdvertisementInterval
	}
	if !IsNil(o.SpineBgpConnectTimer) {
		toSerialize["spine_bgp_connect_timer"] = o.SpineBgpConnectTimer
	}
	if !IsNil(o.LeafBgpKeepAliveTimer) {
		toSerialize["leaf_bgp_keep_alive_timer"] = o.LeafBgpKeepAliveTimer
	}
	if !IsNil(o.LeafBgpHoldDownTimer) {
		toSerialize["leaf_bgp_hold_down_timer"] = o.LeafBgpHoldDownTimer
	}
	if !IsNil(o.LeafBgpAdvertisementInterval) {
		toSerialize["leaf_bgp_advertisement_interval"] = o.LeafBgpAdvertisementInterval
	}
	if !IsNil(o.LeafBgpConnectTimer) {
		toSerialize["leaf_bgp_connect_timer"] = o.LeafBgpConnectTimer
	}
	if o.LinkStateTimeoutValue.IsSet() {
		toSerialize["link_state_timeout_value"] = o.LinkStateTimeoutValue.Get()
	}
	if o.EvpnMultihomingStartupDelay.IsSet() {
		toSerialize["evpn_multihoming_startup_delay"] = o.EvpnMultihomingStartupDelay.Get()
	}
	if o.EvpnMacHoldtime.IsSet() {
		toSerialize["evpn_mac_holdtime"] = o.EvpnMacHoldtime.Get()
	}
	if !IsNil(o.AggressiveReporting) {
		toSerialize["aggressive_reporting"] = o.AggressiveReporting
	}
	if o.CrcFailureThreshold.IsSet() {
		toSerialize["crc_failure_threshold"] = o.CrcFailureThreshold.Get()
	}
	if !IsNil(o.Islands) {
		toSerialize["islands"] = o.Islands
	}
	if !IsNil(o.Pairs) {
		toSerialize["pairs"] = o.Pairs
	}
	if !IsNil(o.ObjectProperties) {
		toSerialize["object_properties"] = o.ObjectProperties
	}
	return toSerialize, nil
}

type NullableConfigPutRequestSiteSiteName struct {
	value *ConfigPutRequestSiteSiteName
	isSet bool
}

func (v NullableConfigPutRequestSiteSiteName) Get() *ConfigPutRequestSiteSiteName {
	return v.value
}

func (v *NullableConfigPutRequestSiteSiteName) Set(val *ConfigPutRequestSiteSiteName) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigPutRequestSiteSiteName) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigPutRequestSiteSiteName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigPutRequestSiteSiteName(val *ConfigPutRequestSiteSiteName) *NullableConfigPutRequestSiteSiteName {
	return &NullableConfigPutRequestSiteSiteName{value: val, isSet: true}
}

func (v NullableConfigPutRequestSiteSiteName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigPutRequestSiteSiteName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


