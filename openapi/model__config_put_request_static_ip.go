/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConfigPutRequestStaticIp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigPutRequestStaticIp{}

// ConfigPutRequestStaticIp struct for ConfigPutRequestStaticIp
type ConfigPutRequestStaticIp struct {
	StaticIpName *ConfigPutRequestStaticIpStaticIpName `json:"static_ip_name,omitempty"`
}

// NewConfigPutRequestStaticIp instantiates a new ConfigPutRequestStaticIp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigPutRequestStaticIp() *ConfigPutRequestStaticIp {
	this := ConfigPutRequestStaticIp{}
	return &this
}

// NewConfigPutRequestStaticIpWithDefaults instantiates a new ConfigPutRequestStaticIp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigPutRequestStaticIpWithDefaults() *ConfigPutRequestStaticIp {
	this := ConfigPutRequestStaticIp{}
	return &this
}

// GetStaticIpName returns the StaticIpName field value if set, zero value otherwise.
func (o *ConfigPutRequestStaticIp) GetStaticIpName() ConfigPutRequestStaticIpStaticIpName {
	if o == nil || IsNil(o.StaticIpName) {
		var ret ConfigPutRequestStaticIpStaticIpName
		return ret
	}
	return *o.StaticIpName
}

// GetStaticIpNameOk returns a tuple with the StaticIpName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestStaticIp) GetStaticIpNameOk() (*ConfigPutRequestStaticIpStaticIpName, bool) {
	if o == nil || IsNil(o.StaticIpName) {
		return nil, false
	}
	return o.StaticIpName, true
}

// HasStaticIpName returns a boolean if a field has been set.
func (o *ConfigPutRequestStaticIp) HasStaticIpName() bool {
	if o != nil && !IsNil(o.StaticIpName) {
		return true
	}

	return false
}

// SetStaticIpName gets a reference to the given ConfigPutRequestStaticIpStaticIpName and assigns it to the StaticIpName field.
func (o *ConfigPutRequestStaticIp) SetStaticIpName(v ConfigPutRequestStaticIpStaticIpName) {
	o.StaticIpName = &v
}

func (o ConfigPutRequestStaticIp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigPutRequestStaticIp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StaticIpName) {
		toSerialize["static_ip_name"] = o.StaticIpName
	}
	return toSerialize, nil
}

type NullableConfigPutRequestStaticIp struct {
	value *ConfigPutRequestStaticIp
	isSet bool
}

func (v NullableConfigPutRequestStaticIp) Get() *ConfigPutRequestStaticIp {
	return v.value
}

func (v *NullableConfigPutRequestStaticIp) Set(val *ConfigPutRequestStaticIp) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigPutRequestStaticIp) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigPutRequestStaticIp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigPutRequestStaticIp(val *ConfigPutRequestStaticIp) *NullableConfigPutRequestStaticIp {
	return &NullableConfigPutRequestStaticIp{value: val, isSet: true}
}

func (v NullableConfigPutRequestStaticIp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigPutRequestStaticIp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


