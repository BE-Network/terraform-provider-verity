/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConfigPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigPutRequest{}

// ConfigPutRequest struct for ConfigPutRequest
type ConfigPutRequest struct {
	DeviceController *ConfigPutRequestDeviceController `json:"device_controller,omitempty"`
	SfpBreakouts *ConfigPutRequestSfpBreakouts `json:"sfp_breakouts,omitempty"`
	Site *ConfigPutRequestSite `json:"site,omitempty"`
	Ipv4PrefixList *ConfigPutRequestIpv4PrefixList `json:"ipv4_prefix_list,omitempty"`
	EthDeviceProfiles *ConfigPutRequestEthDeviceProfiles `json:"eth_device_profiles,omitempty"`
	Ipv4Filter *ConfigPutRequestIpv4Filter `json:"ipv4_filter,omitempty"`
	GatewayProfile *ConfigPutRequestGatewayProfile `json:"gateway_profile,omitempty"`
	EndpointView *ConfigPutRequestEndpointView `json:"endpoint_view,omitempty"`
	Gateway *ConfigPutRequestGateway `json:"gateway,omitempty"`
	Ipv6Filter *ConfigPutRequestIpv6Filter `json:"ipv6_filter,omitempty"`
	RouteMapClause *ConfigPutRequestRouteMapClause `json:"route_map_clause,omitempty"`
	Service *ConfigPutRequestService `json:"service,omitempty"`
	RouteMap *ConfigPutRequestRouteMap `json:"route_map,omitempty"`
	BizdConfig *ConfigPutRequestBizdConfig `json:"bizd_config,omitempty"`
	PbEgressProfile *ConfigPutRequestPbEgressProfile `json:"pb_egress_profile,omitempty"`
	Badge *ConfigPutRequestBadge `json:"badge,omitempty"`
	Lag *ConfigPutRequestLag `json:"lag,omitempty"`
	StaticIp *ConfigPutRequestStaticIp `json:"static_ip,omitempty"`
	CommunityList *ConfigPutRequestCommunityList `json:"community_list,omitempty"`
	Tenant *ConfigPutRequestTenant `json:"tenant,omitempty"`
	Ipv6PrefixList *ConfigPutRequestIpv6PrefixList `json:"ipv6_prefix_list,omitempty"`
	Ipv4ListFilter *ConfigPutRequestIpv4ListFilter `json:"ipv4_list_filter,omitempty"`
	AsPathAccessList *ConfigPutRequestAsPathAccessList `json:"as_path_access_list,omitempty"`
	Ipv6ListFilter *ConfigPutRequestIpv6ListFilter `json:"ipv6_list_filter,omitempty"`
	EthPortProfile *ConfigPutRequestEthPortProfile `json:"eth_port_profile_,omitempty"`
	EthPortSettings *ConfigPutRequestEthPortSettings `json:"eth_port_settings,omitempty"`
	EndpointBundle *ConfigPutRequestEndpointBundle `json:"endpoint_bundle,omitempty"`
	StaticConnections *ConfigPutRequestStaticConnections `json:"static_connections,omitempty"`
	Switchpoint *ConfigPutRequestSwitchpoint `json:"switchpoint,omitempty"`
	ExtendedCommunityList *ConfigPutRequestExtendedCommunityList `json:"extended_community_list,omitempty"`
	ImageUpdateSets *ConfigPutRequestImageUpdateSets `json:"image_update_sets,omitempty"`
	IpFilter *ConfigPutRequestIpFilter `json:"ip_filter,omitempty"`
	FeatureFlag *ConfigPutRequestFeatureFlag `json:"feature_flag,omitempty"`
	PacketQueue *ConfigPutRequestPacketQueue `json:"packet_queue,omitempty"`
	ServicePortProfile *ConfigPutRequestServicePortProfile `json:"service_port_profile,omitempty"`
	DeviceVoiceSettings *ConfigPutRequestDeviceVoiceSettings `json:"device_voice_settings,omitempty"`
	AuthenticatedEthPort *ConfigPutRequestAuthenticatedEthPort `json:"authenticated_eth_port,omitempty"`
	VoicePortProfiles *ConfigPutRequestVoicePortProfiles `json:"voice_port_profiles,omitempty"`
	Endpoint *ConfigPutRequestEndpoint `json:"endpoint,omitempty"`
	MacFilter *ConfigPutRequestMacFilter `json:"mac_filter,omitempty"`
}

// NewConfigPutRequest instantiates a new ConfigPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigPutRequest() *ConfigPutRequest {
	this := ConfigPutRequest{}
	return &this
}

// NewConfigPutRequestWithDefaults instantiates a new ConfigPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigPutRequestWithDefaults() *ConfigPutRequest {
	this := ConfigPutRequest{}
	return &this
}

// GetDeviceController returns the DeviceController field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetDeviceController() ConfigPutRequestDeviceController {
	if o == nil || IsNil(o.DeviceController) {
		var ret ConfigPutRequestDeviceController
		return ret
	}
	return *o.DeviceController
}

// GetDeviceControllerOk returns a tuple with the DeviceController field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetDeviceControllerOk() (*ConfigPutRequestDeviceController, bool) {
	if o == nil || IsNil(o.DeviceController) {
		return nil, false
	}
	return o.DeviceController, true
}

// HasDeviceController returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasDeviceController() bool {
	if o != nil && !IsNil(o.DeviceController) {
		return true
	}

	return false
}

// SetDeviceController gets a reference to the given ConfigPutRequestDeviceController and assigns it to the DeviceController field.
func (o *ConfigPutRequest) SetDeviceController(v ConfigPutRequestDeviceController) {
	o.DeviceController = &v
}

// GetSfpBreakouts returns the SfpBreakouts field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetSfpBreakouts() ConfigPutRequestSfpBreakouts {
	if o == nil || IsNil(o.SfpBreakouts) {
		var ret ConfigPutRequestSfpBreakouts
		return ret
	}
	return *o.SfpBreakouts
}

// GetSfpBreakoutsOk returns a tuple with the SfpBreakouts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetSfpBreakoutsOk() (*ConfigPutRequestSfpBreakouts, bool) {
	if o == nil || IsNil(o.SfpBreakouts) {
		return nil, false
	}
	return o.SfpBreakouts, true
}

// HasSfpBreakouts returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasSfpBreakouts() bool {
	if o != nil && !IsNil(o.SfpBreakouts) {
		return true
	}

	return false
}

// SetSfpBreakouts gets a reference to the given ConfigPutRequestSfpBreakouts and assigns it to the SfpBreakouts field.
func (o *ConfigPutRequest) SetSfpBreakouts(v ConfigPutRequestSfpBreakouts) {
	o.SfpBreakouts = &v
}

// GetSite returns the Site field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetSite() ConfigPutRequestSite {
	if o == nil || IsNil(o.Site) {
		var ret ConfigPutRequestSite
		return ret
	}
	return *o.Site
}

// GetSiteOk returns a tuple with the Site field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetSiteOk() (*ConfigPutRequestSite, bool) {
	if o == nil || IsNil(o.Site) {
		return nil, false
	}
	return o.Site, true
}

// HasSite returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasSite() bool {
	if o != nil && !IsNil(o.Site) {
		return true
	}

	return false
}

// SetSite gets a reference to the given ConfigPutRequestSite and assigns it to the Site field.
func (o *ConfigPutRequest) SetSite(v ConfigPutRequestSite) {
	o.Site = &v
}

// GetIpv4PrefixList returns the Ipv4PrefixList field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetIpv4PrefixList() ConfigPutRequestIpv4PrefixList {
	if o == nil || IsNil(o.Ipv4PrefixList) {
		var ret ConfigPutRequestIpv4PrefixList
		return ret
	}
	return *o.Ipv4PrefixList
}

// GetIpv4PrefixListOk returns a tuple with the Ipv4PrefixList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetIpv4PrefixListOk() (*ConfigPutRequestIpv4PrefixList, bool) {
	if o == nil || IsNil(o.Ipv4PrefixList) {
		return nil, false
	}
	return o.Ipv4PrefixList, true
}

// HasIpv4PrefixList returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasIpv4PrefixList() bool {
	if o != nil && !IsNil(o.Ipv4PrefixList) {
		return true
	}

	return false
}

// SetIpv4PrefixList gets a reference to the given ConfigPutRequestIpv4PrefixList and assigns it to the Ipv4PrefixList field.
func (o *ConfigPutRequest) SetIpv4PrefixList(v ConfigPutRequestIpv4PrefixList) {
	o.Ipv4PrefixList = &v
}

// GetEthDeviceProfiles returns the EthDeviceProfiles field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetEthDeviceProfiles() ConfigPutRequestEthDeviceProfiles {
	if o == nil || IsNil(o.EthDeviceProfiles) {
		var ret ConfigPutRequestEthDeviceProfiles
		return ret
	}
	return *o.EthDeviceProfiles
}

// GetEthDeviceProfilesOk returns a tuple with the EthDeviceProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetEthDeviceProfilesOk() (*ConfigPutRequestEthDeviceProfiles, bool) {
	if o == nil || IsNil(o.EthDeviceProfiles) {
		return nil, false
	}
	return o.EthDeviceProfiles, true
}

// HasEthDeviceProfiles returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasEthDeviceProfiles() bool {
	if o != nil && !IsNil(o.EthDeviceProfiles) {
		return true
	}

	return false
}

// SetEthDeviceProfiles gets a reference to the given ConfigPutRequestEthDeviceProfiles and assigns it to the EthDeviceProfiles field.
func (o *ConfigPutRequest) SetEthDeviceProfiles(v ConfigPutRequestEthDeviceProfiles) {
	o.EthDeviceProfiles = &v
}

// GetIpv4Filter returns the Ipv4Filter field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetIpv4Filter() ConfigPutRequestIpv4Filter {
	if o == nil || IsNil(o.Ipv4Filter) {
		var ret ConfigPutRequestIpv4Filter
		return ret
	}
	return *o.Ipv4Filter
}

// GetIpv4FilterOk returns a tuple with the Ipv4Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetIpv4FilterOk() (*ConfigPutRequestIpv4Filter, bool) {
	if o == nil || IsNil(o.Ipv4Filter) {
		return nil, false
	}
	return o.Ipv4Filter, true
}

// HasIpv4Filter returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasIpv4Filter() bool {
	if o != nil && !IsNil(o.Ipv4Filter) {
		return true
	}

	return false
}

// SetIpv4Filter gets a reference to the given ConfigPutRequestIpv4Filter and assigns it to the Ipv4Filter field.
func (o *ConfigPutRequest) SetIpv4Filter(v ConfigPutRequestIpv4Filter) {
	o.Ipv4Filter = &v
}

// GetGatewayProfile returns the GatewayProfile field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetGatewayProfile() ConfigPutRequestGatewayProfile {
	if o == nil || IsNil(o.GatewayProfile) {
		var ret ConfigPutRequestGatewayProfile
		return ret
	}
	return *o.GatewayProfile
}

// GetGatewayProfileOk returns a tuple with the GatewayProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetGatewayProfileOk() (*ConfigPutRequestGatewayProfile, bool) {
	if o == nil || IsNil(o.GatewayProfile) {
		return nil, false
	}
	return o.GatewayProfile, true
}

// HasGatewayProfile returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasGatewayProfile() bool {
	if o != nil && !IsNil(o.GatewayProfile) {
		return true
	}

	return false
}

// SetGatewayProfile gets a reference to the given ConfigPutRequestGatewayProfile and assigns it to the GatewayProfile field.
func (o *ConfigPutRequest) SetGatewayProfile(v ConfigPutRequestGatewayProfile) {
	o.GatewayProfile = &v
}

// GetEndpointView returns the EndpointView field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetEndpointView() ConfigPutRequestEndpointView {
	if o == nil || IsNil(o.EndpointView) {
		var ret ConfigPutRequestEndpointView
		return ret
	}
	return *o.EndpointView
}

// GetEndpointViewOk returns a tuple with the EndpointView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetEndpointViewOk() (*ConfigPutRequestEndpointView, bool) {
	if o == nil || IsNil(o.EndpointView) {
		return nil, false
	}
	return o.EndpointView, true
}

// HasEndpointView returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasEndpointView() bool {
	if o != nil && !IsNil(o.EndpointView) {
		return true
	}

	return false
}

// SetEndpointView gets a reference to the given ConfigPutRequestEndpointView and assigns it to the EndpointView field.
func (o *ConfigPutRequest) SetEndpointView(v ConfigPutRequestEndpointView) {
	o.EndpointView = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetGateway() ConfigPutRequestGateway {
	if o == nil || IsNil(o.Gateway) {
		var ret ConfigPutRequestGateway
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetGatewayOk() (*ConfigPutRequestGateway, bool) {
	if o == nil || IsNil(o.Gateway) {
		return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasGateway() bool {
	if o != nil && !IsNil(o.Gateway) {
		return true
	}

	return false
}

// SetGateway gets a reference to the given ConfigPutRequestGateway and assigns it to the Gateway field.
func (o *ConfigPutRequest) SetGateway(v ConfigPutRequestGateway) {
	o.Gateway = &v
}

// GetIpv6Filter returns the Ipv6Filter field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetIpv6Filter() ConfigPutRequestIpv6Filter {
	if o == nil || IsNil(o.Ipv6Filter) {
		var ret ConfigPutRequestIpv6Filter
		return ret
	}
	return *o.Ipv6Filter
}

// GetIpv6FilterOk returns a tuple with the Ipv6Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetIpv6FilterOk() (*ConfigPutRequestIpv6Filter, bool) {
	if o == nil || IsNil(o.Ipv6Filter) {
		return nil, false
	}
	return o.Ipv6Filter, true
}

// HasIpv6Filter returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasIpv6Filter() bool {
	if o != nil && !IsNil(o.Ipv6Filter) {
		return true
	}

	return false
}

// SetIpv6Filter gets a reference to the given ConfigPutRequestIpv6Filter and assigns it to the Ipv6Filter field.
func (o *ConfigPutRequest) SetIpv6Filter(v ConfigPutRequestIpv6Filter) {
	o.Ipv6Filter = &v
}

// GetRouteMapClause returns the RouteMapClause field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetRouteMapClause() ConfigPutRequestRouteMapClause {
	if o == nil || IsNil(o.RouteMapClause) {
		var ret ConfigPutRequestRouteMapClause
		return ret
	}
	return *o.RouteMapClause
}

// GetRouteMapClauseOk returns a tuple with the RouteMapClause field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetRouteMapClauseOk() (*ConfigPutRequestRouteMapClause, bool) {
	if o == nil || IsNil(o.RouteMapClause) {
		return nil, false
	}
	return o.RouteMapClause, true
}

// HasRouteMapClause returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasRouteMapClause() bool {
	if o != nil && !IsNil(o.RouteMapClause) {
		return true
	}

	return false
}

// SetRouteMapClause gets a reference to the given ConfigPutRequestRouteMapClause and assigns it to the RouteMapClause field.
func (o *ConfigPutRequest) SetRouteMapClause(v ConfigPutRequestRouteMapClause) {
	o.RouteMapClause = &v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetService() ConfigPutRequestService {
	if o == nil || IsNil(o.Service) {
		var ret ConfigPutRequestService
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetServiceOk() (*ConfigPutRequestService, bool) {
	if o == nil || IsNil(o.Service) {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasService() bool {
	if o != nil && !IsNil(o.Service) {
		return true
	}

	return false
}

// SetService gets a reference to the given ConfigPutRequestService and assigns it to the Service field.
func (o *ConfigPutRequest) SetService(v ConfigPutRequestService) {
	o.Service = &v
}

// GetRouteMap returns the RouteMap field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetRouteMap() ConfigPutRequestRouteMap {
	if o == nil || IsNil(o.RouteMap) {
		var ret ConfigPutRequestRouteMap
		return ret
	}
	return *o.RouteMap
}

// GetRouteMapOk returns a tuple with the RouteMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetRouteMapOk() (*ConfigPutRequestRouteMap, bool) {
	if o == nil || IsNil(o.RouteMap) {
		return nil, false
	}
	return o.RouteMap, true
}

// HasRouteMap returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasRouteMap() bool {
	if o != nil && !IsNil(o.RouteMap) {
		return true
	}

	return false
}

// SetRouteMap gets a reference to the given ConfigPutRequestRouteMap and assigns it to the RouteMap field.
func (o *ConfigPutRequest) SetRouteMap(v ConfigPutRequestRouteMap) {
	o.RouteMap = &v
}

// GetBizdConfig returns the BizdConfig field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetBizdConfig() ConfigPutRequestBizdConfig {
	if o == nil || IsNil(o.BizdConfig) {
		var ret ConfigPutRequestBizdConfig
		return ret
	}
	return *o.BizdConfig
}

// GetBizdConfigOk returns a tuple with the BizdConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetBizdConfigOk() (*ConfigPutRequestBizdConfig, bool) {
	if o == nil || IsNil(o.BizdConfig) {
		return nil, false
	}
	return o.BizdConfig, true
}

// HasBizdConfig returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasBizdConfig() bool {
	if o != nil && !IsNil(o.BizdConfig) {
		return true
	}

	return false
}

// SetBizdConfig gets a reference to the given ConfigPutRequestBizdConfig and assigns it to the BizdConfig field.
func (o *ConfigPutRequest) SetBizdConfig(v ConfigPutRequestBizdConfig) {
	o.BizdConfig = &v
}

// GetPbEgressProfile returns the PbEgressProfile field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetPbEgressProfile() ConfigPutRequestPbEgressProfile {
	if o == nil || IsNil(o.PbEgressProfile) {
		var ret ConfigPutRequestPbEgressProfile
		return ret
	}
	return *o.PbEgressProfile
}

// GetPbEgressProfileOk returns a tuple with the PbEgressProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetPbEgressProfileOk() (*ConfigPutRequestPbEgressProfile, bool) {
	if o == nil || IsNil(o.PbEgressProfile) {
		return nil, false
	}
	return o.PbEgressProfile, true
}

// HasPbEgressProfile returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasPbEgressProfile() bool {
	if o != nil && !IsNil(o.PbEgressProfile) {
		return true
	}

	return false
}

// SetPbEgressProfile gets a reference to the given ConfigPutRequestPbEgressProfile and assigns it to the PbEgressProfile field.
func (o *ConfigPutRequest) SetPbEgressProfile(v ConfigPutRequestPbEgressProfile) {
	o.PbEgressProfile = &v
}

// GetBadge returns the Badge field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetBadge() ConfigPutRequestBadge {
	if o == nil || IsNil(o.Badge) {
		var ret ConfigPutRequestBadge
		return ret
	}
	return *o.Badge
}

// GetBadgeOk returns a tuple with the Badge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetBadgeOk() (*ConfigPutRequestBadge, bool) {
	if o == nil || IsNil(o.Badge) {
		return nil, false
	}
	return o.Badge, true
}

// HasBadge returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasBadge() bool {
	if o != nil && !IsNil(o.Badge) {
		return true
	}

	return false
}

// SetBadge gets a reference to the given ConfigPutRequestBadge and assigns it to the Badge field.
func (o *ConfigPutRequest) SetBadge(v ConfigPutRequestBadge) {
	o.Badge = &v
}

// GetLag returns the Lag field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetLag() ConfigPutRequestLag {
	if o == nil || IsNil(o.Lag) {
		var ret ConfigPutRequestLag
		return ret
	}
	return *o.Lag
}

// GetLagOk returns a tuple with the Lag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetLagOk() (*ConfigPutRequestLag, bool) {
	if o == nil || IsNil(o.Lag) {
		return nil, false
	}
	return o.Lag, true
}

// HasLag returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasLag() bool {
	if o != nil && !IsNil(o.Lag) {
		return true
	}

	return false
}

// SetLag gets a reference to the given ConfigPutRequestLag and assigns it to the Lag field.
func (o *ConfigPutRequest) SetLag(v ConfigPutRequestLag) {
	o.Lag = &v
}

// GetStaticIp returns the StaticIp field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetStaticIp() ConfigPutRequestStaticIp {
	if o == nil || IsNil(o.StaticIp) {
		var ret ConfigPutRequestStaticIp
		return ret
	}
	return *o.StaticIp
}

// GetStaticIpOk returns a tuple with the StaticIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetStaticIpOk() (*ConfigPutRequestStaticIp, bool) {
	if o == nil || IsNil(o.StaticIp) {
		return nil, false
	}
	return o.StaticIp, true
}

// HasStaticIp returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasStaticIp() bool {
	if o != nil && !IsNil(o.StaticIp) {
		return true
	}

	return false
}

// SetStaticIp gets a reference to the given ConfigPutRequestStaticIp and assigns it to the StaticIp field.
func (o *ConfigPutRequest) SetStaticIp(v ConfigPutRequestStaticIp) {
	o.StaticIp = &v
}

// GetCommunityList returns the CommunityList field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetCommunityList() ConfigPutRequestCommunityList {
	if o == nil || IsNil(o.CommunityList) {
		var ret ConfigPutRequestCommunityList
		return ret
	}
	return *o.CommunityList
}

// GetCommunityListOk returns a tuple with the CommunityList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetCommunityListOk() (*ConfigPutRequestCommunityList, bool) {
	if o == nil || IsNil(o.CommunityList) {
		return nil, false
	}
	return o.CommunityList, true
}

// HasCommunityList returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasCommunityList() bool {
	if o != nil && !IsNil(o.CommunityList) {
		return true
	}

	return false
}

// SetCommunityList gets a reference to the given ConfigPutRequestCommunityList and assigns it to the CommunityList field.
func (o *ConfigPutRequest) SetCommunityList(v ConfigPutRequestCommunityList) {
	o.CommunityList = &v
}

// GetTenant returns the Tenant field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetTenant() ConfigPutRequestTenant {
	if o == nil || IsNil(o.Tenant) {
		var ret ConfigPutRequestTenant
		return ret
	}
	return *o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetTenantOk() (*ConfigPutRequestTenant, bool) {
	if o == nil || IsNil(o.Tenant) {
		return nil, false
	}
	return o.Tenant, true
}

// HasTenant returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasTenant() bool {
	if o != nil && !IsNil(o.Tenant) {
		return true
	}

	return false
}

// SetTenant gets a reference to the given ConfigPutRequestTenant and assigns it to the Tenant field.
func (o *ConfigPutRequest) SetTenant(v ConfigPutRequestTenant) {
	o.Tenant = &v
}

// GetIpv6PrefixList returns the Ipv6PrefixList field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetIpv6PrefixList() ConfigPutRequestIpv6PrefixList {
	if o == nil || IsNil(o.Ipv6PrefixList) {
		var ret ConfigPutRequestIpv6PrefixList
		return ret
	}
	return *o.Ipv6PrefixList
}

// GetIpv6PrefixListOk returns a tuple with the Ipv6PrefixList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetIpv6PrefixListOk() (*ConfigPutRequestIpv6PrefixList, bool) {
	if o == nil || IsNil(o.Ipv6PrefixList) {
		return nil, false
	}
	return o.Ipv6PrefixList, true
}

// HasIpv6PrefixList returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasIpv6PrefixList() bool {
	if o != nil && !IsNil(o.Ipv6PrefixList) {
		return true
	}

	return false
}

// SetIpv6PrefixList gets a reference to the given ConfigPutRequestIpv6PrefixList and assigns it to the Ipv6PrefixList field.
func (o *ConfigPutRequest) SetIpv6PrefixList(v ConfigPutRequestIpv6PrefixList) {
	o.Ipv6PrefixList = &v
}

// GetIpv4ListFilter returns the Ipv4ListFilter field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetIpv4ListFilter() ConfigPutRequestIpv4ListFilter {
	if o == nil || IsNil(o.Ipv4ListFilter) {
		var ret ConfigPutRequestIpv4ListFilter
		return ret
	}
	return *o.Ipv4ListFilter
}

// GetIpv4ListFilterOk returns a tuple with the Ipv4ListFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetIpv4ListFilterOk() (*ConfigPutRequestIpv4ListFilter, bool) {
	if o == nil || IsNil(o.Ipv4ListFilter) {
		return nil, false
	}
	return o.Ipv4ListFilter, true
}

// HasIpv4ListFilter returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasIpv4ListFilter() bool {
	if o != nil && !IsNil(o.Ipv4ListFilter) {
		return true
	}

	return false
}

// SetIpv4ListFilter gets a reference to the given ConfigPutRequestIpv4ListFilter and assigns it to the Ipv4ListFilter field.
func (o *ConfigPutRequest) SetIpv4ListFilter(v ConfigPutRequestIpv4ListFilter) {
	o.Ipv4ListFilter = &v
}

// GetAsPathAccessList returns the AsPathAccessList field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetAsPathAccessList() ConfigPutRequestAsPathAccessList {
	if o == nil || IsNil(o.AsPathAccessList) {
		var ret ConfigPutRequestAsPathAccessList
		return ret
	}
	return *o.AsPathAccessList
}

// GetAsPathAccessListOk returns a tuple with the AsPathAccessList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetAsPathAccessListOk() (*ConfigPutRequestAsPathAccessList, bool) {
	if o == nil || IsNil(o.AsPathAccessList) {
		return nil, false
	}
	return o.AsPathAccessList, true
}

// HasAsPathAccessList returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasAsPathAccessList() bool {
	if o != nil && !IsNil(o.AsPathAccessList) {
		return true
	}

	return false
}

// SetAsPathAccessList gets a reference to the given ConfigPutRequestAsPathAccessList and assigns it to the AsPathAccessList field.
func (o *ConfigPutRequest) SetAsPathAccessList(v ConfigPutRequestAsPathAccessList) {
	o.AsPathAccessList = &v
}

// GetIpv6ListFilter returns the Ipv6ListFilter field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetIpv6ListFilter() ConfigPutRequestIpv6ListFilter {
	if o == nil || IsNil(o.Ipv6ListFilter) {
		var ret ConfigPutRequestIpv6ListFilter
		return ret
	}
	return *o.Ipv6ListFilter
}

// GetIpv6ListFilterOk returns a tuple with the Ipv6ListFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetIpv6ListFilterOk() (*ConfigPutRequestIpv6ListFilter, bool) {
	if o == nil || IsNil(o.Ipv6ListFilter) {
		return nil, false
	}
	return o.Ipv6ListFilter, true
}

// HasIpv6ListFilter returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasIpv6ListFilter() bool {
	if o != nil && !IsNil(o.Ipv6ListFilter) {
		return true
	}

	return false
}

// SetIpv6ListFilter gets a reference to the given ConfigPutRequestIpv6ListFilter and assigns it to the Ipv6ListFilter field.
func (o *ConfigPutRequest) SetIpv6ListFilter(v ConfigPutRequestIpv6ListFilter) {
	o.Ipv6ListFilter = &v
}

// GetEthPortProfile returns the EthPortProfile field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetEthPortProfile() ConfigPutRequestEthPortProfile {
	if o == nil || IsNil(o.EthPortProfile) {
		var ret ConfigPutRequestEthPortProfile
		return ret
	}
	return *o.EthPortProfile
}

// GetEthPortProfileOk returns a tuple with the EthPortProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetEthPortProfileOk() (*ConfigPutRequestEthPortProfile, bool) {
	if o == nil || IsNil(o.EthPortProfile) {
		return nil, false
	}
	return o.EthPortProfile, true
}

// HasEthPortProfile returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasEthPortProfile() bool {
	if o != nil && !IsNil(o.EthPortProfile) {
		return true
	}

	return false
}

// SetEthPortProfile gets a reference to the given ConfigPutRequestEthPortProfile and assigns it to the EthPortProfile field.
func (o *ConfigPutRequest) SetEthPortProfile(v ConfigPutRequestEthPortProfile) {
	o.EthPortProfile = &v
}

// GetEthPortSettings returns the EthPortSettings field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetEthPortSettings() ConfigPutRequestEthPortSettings {
	if o == nil || IsNil(o.EthPortSettings) {
		var ret ConfigPutRequestEthPortSettings
		return ret
	}
	return *o.EthPortSettings
}

// GetEthPortSettingsOk returns a tuple with the EthPortSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetEthPortSettingsOk() (*ConfigPutRequestEthPortSettings, bool) {
	if o == nil || IsNil(o.EthPortSettings) {
		return nil, false
	}
	return o.EthPortSettings, true
}

// HasEthPortSettings returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasEthPortSettings() bool {
	if o != nil && !IsNil(o.EthPortSettings) {
		return true
	}

	return false
}

// SetEthPortSettings gets a reference to the given ConfigPutRequestEthPortSettings and assigns it to the EthPortSettings field.
func (o *ConfigPutRequest) SetEthPortSettings(v ConfigPutRequestEthPortSettings) {
	o.EthPortSettings = &v
}

// GetEndpointBundle returns the EndpointBundle field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetEndpointBundle() ConfigPutRequestEndpointBundle {
	if o == nil || IsNil(o.EndpointBundle) {
		var ret ConfigPutRequestEndpointBundle
		return ret
	}
	return *o.EndpointBundle
}

// GetEndpointBundleOk returns a tuple with the EndpointBundle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetEndpointBundleOk() (*ConfigPutRequestEndpointBundle, bool) {
	if o == nil || IsNil(o.EndpointBundle) {
		return nil, false
	}
	return o.EndpointBundle, true
}

// HasEndpointBundle returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasEndpointBundle() bool {
	if o != nil && !IsNil(o.EndpointBundle) {
		return true
	}

	return false
}

// SetEndpointBundle gets a reference to the given ConfigPutRequestEndpointBundle and assigns it to the EndpointBundle field.
func (o *ConfigPutRequest) SetEndpointBundle(v ConfigPutRequestEndpointBundle) {
	o.EndpointBundle = &v
}

// GetStaticConnections returns the StaticConnections field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetStaticConnections() ConfigPutRequestStaticConnections {
	if o == nil || IsNil(o.StaticConnections) {
		var ret ConfigPutRequestStaticConnections
		return ret
	}
	return *o.StaticConnections
}

// GetStaticConnectionsOk returns a tuple with the StaticConnections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetStaticConnectionsOk() (*ConfigPutRequestStaticConnections, bool) {
	if o == nil || IsNil(o.StaticConnections) {
		return nil, false
	}
	return o.StaticConnections, true
}

// HasStaticConnections returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasStaticConnections() bool {
	if o != nil && !IsNil(o.StaticConnections) {
		return true
	}

	return false
}

// SetStaticConnections gets a reference to the given ConfigPutRequestStaticConnections and assigns it to the StaticConnections field.
func (o *ConfigPutRequest) SetStaticConnections(v ConfigPutRequestStaticConnections) {
	o.StaticConnections = &v
}

// GetSwitchpoint returns the Switchpoint field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetSwitchpoint() ConfigPutRequestSwitchpoint {
	if o == nil || IsNil(o.Switchpoint) {
		var ret ConfigPutRequestSwitchpoint
		return ret
	}
	return *o.Switchpoint
}

// GetSwitchpointOk returns a tuple with the Switchpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetSwitchpointOk() (*ConfigPutRequestSwitchpoint, bool) {
	if o == nil || IsNil(o.Switchpoint) {
		return nil, false
	}
	return o.Switchpoint, true
}

// HasSwitchpoint returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasSwitchpoint() bool {
	if o != nil && !IsNil(o.Switchpoint) {
		return true
	}

	return false
}

// SetSwitchpoint gets a reference to the given ConfigPutRequestSwitchpoint and assigns it to the Switchpoint field.
func (o *ConfigPutRequest) SetSwitchpoint(v ConfigPutRequestSwitchpoint) {
	o.Switchpoint = &v
}

// GetExtendedCommunityList returns the ExtendedCommunityList field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetExtendedCommunityList() ConfigPutRequestExtendedCommunityList {
	if o == nil || IsNil(o.ExtendedCommunityList) {
		var ret ConfigPutRequestExtendedCommunityList
		return ret
	}
	return *o.ExtendedCommunityList
}

// GetExtendedCommunityListOk returns a tuple with the ExtendedCommunityList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetExtendedCommunityListOk() (*ConfigPutRequestExtendedCommunityList, bool) {
	if o == nil || IsNil(o.ExtendedCommunityList) {
		return nil, false
	}
	return o.ExtendedCommunityList, true
}

// HasExtendedCommunityList returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasExtendedCommunityList() bool {
	if o != nil && !IsNil(o.ExtendedCommunityList) {
		return true
	}

	return false
}

// SetExtendedCommunityList gets a reference to the given ConfigPutRequestExtendedCommunityList and assigns it to the ExtendedCommunityList field.
func (o *ConfigPutRequest) SetExtendedCommunityList(v ConfigPutRequestExtendedCommunityList) {
	o.ExtendedCommunityList = &v
}

// GetImageUpdateSets returns the ImageUpdateSets field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetImageUpdateSets() ConfigPutRequestImageUpdateSets {
	if o == nil || IsNil(o.ImageUpdateSets) {
		var ret ConfigPutRequestImageUpdateSets
		return ret
	}
	return *o.ImageUpdateSets
}

// GetImageUpdateSetsOk returns a tuple with the ImageUpdateSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetImageUpdateSetsOk() (*ConfigPutRequestImageUpdateSets, bool) {
	if o == nil || IsNil(o.ImageUpdateSets) {
		return nil, false
	}
	return o.ImageUpdateSets, true
}

// HasImageUpdateSets returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasImageUpdateSets() bool {
	if o != nil && !IsNil(o.ImageUpdateSets) {
		return true
	}

	return false
}

// SetImageUpdateSets gets a reference to the given ConfigPutRequestImageUpdateSets and assigns it to the ImageUpdateSets field.
func (o *ConfigPutRequest) SetImageUpdateSets(v ConfigPutRequestImageUpdateSets) {
	o.ImageUpdateSets = &v
}

// GetIpFilter returns the IpFilter field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetIpFilter() ConfigPutRequestIpFilter {
	if o == nil || IsNil(o.IpFilter) {
		var ret ConfigPutRequestIpFilter
		return ret
	}
	return *o.IpFilter
}

// GetIpFilterOk returns a tuple with the IpFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetIpFilterOk() (*ConfigPutRequestIpFilter, bool) {
	if o == nil || IsNil(o.IpFilter) {
		return nil, false
	}
	return o.IpFilter, true
}

// HasIpFilter returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasIpFilter() bool {
	if o != nil && !IsNil(o.IpFilter) {
		return true
	}

	return false
}

// SetIpFilter gets a reference to the given ConfigPutRequestIpFilter and assigns it to the IpFilter field.
func (o *ConfigPutRequest) SetIpFilter(v ConfigPutRequestIpFilter) {
	o.IpFilter = &v
}

// GetFeatureFlag returns the FeatureFlag field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetFeatureFlag() ConfigPutRequestFeatureFlag {
	if o == nil || IsNil(o.FeatureFlag) {
		var ret ConfigPutRequestFeatureFlag
		return ret
	}
	return *o.FeatureFlag
}

// GetFeatureFlagOk returns a tuple with the FeatureFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetFeatureFlagOk() (*ConfigPutRequestFeatureFlag, bool) {
	if o == nil || IsNil(o.FeatureFlag) {
		return nil, false
	}
	return o.FeatureFlag, true
}

// HasFeatureFlag returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasFeatureFlag() bool {
	if o != nil && !IsNil(o.FeatureFlag) {
		return true
	}

	return false
}

// SetFeatureFlag gets a reference to the given ConfigPutRequestFeatureFlag and assigns it to the FeatureFlag field.
func (o *ConfigPutRequest) SetFeatureFlag(v ConfigPutRequestFeatureFlag) {
	o.FeatureFlag = &v
}

// GetPacketQueue returns the PacketQueue field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetPacketQueue() ConfigPutRequestPacketQueue {
	if o == nil || IsNil(o.PacketQueue) {
		var ret ConfigPutRequestPacketQueue
		return ret
	}
	return *o.PacketQueue
}

// GetPacketQueueOk returns a tuple with the PacketQueue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetPacketQueueOk() (*ConfigPutRequestPacketQueue, bool) {
	if o == nil || IsNil(o.PacketQueue) {
		return nil, false
	}
	return o.PacketQueue, true
}

// HasPacketQueue returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasPacketQueue() bool {
	if o != nil && !IsNil(o.PacketQueue) {
		return true
	}

	return false
}

// SetPacketQueue gets a reference to the given ConfigPutRequestPacketQueue and assigns it to the PacketQueue field.
func (o *ConfigPutRequest) SetPacketQueue(v ConfigPutRequestPacketQueue) {
	o.PacketQueue = &v
}

// GetServicePortProfile returns the ServicePortProfile field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetServicePortProfile() ConfigPutRequestServicePortProfile {
	if o == nil || IsNil(o.ServicePortProfile) {
		var ret ConfigPutRequestServicePortProfile
		return ret
	}
	return *o.ServicePortProfile
}

// GetServicePortProfileOk returns a tuple with the ServicePortProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetServicePortProfileOk() (*ConfigPutRequestServicePortProfile, bool) {
	if o == nil || IsNil(o.ServicePortProfile) {
		return nil, false
	}
	return o.ServicePortProfile, true
}

// HasServicePortProfile returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasServicePortProfile() bool {
	if o != nil && !IsNil(o.ServicePortProfile) {
		return true
	}

	return false
}

// SetServicePortProfile gets a reference to the given ConfigPutRequestServicePortProfile and assigns it to the ServicePortProfile field.
func (o *ConfigPutRequest) SetServicePortProfile(v ConfigPutRequestServicePortProfile) {
	o.ServicePortProfile = &v
}

// GetDeviceVoiceSettings returns the DeviceVoiceSettings field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetDeviceVoiceSettings() ConfigPutRequestDeviceVoiceSettings {
	if o == nil || IsNil(o.DeviceVoiceSettings) {
		var ret ConfigPutRequestDeviceVoiceSettings
		return ret
	}
	return *o.DeviceVoiceSettings
}

// GetDeviceVoiceSettingsOk returns a tuple with the DeviceVoiceSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetDeviceVoiceSettingsOk() (*ConfigPutRequestDeviceVoiceSettings, bool) {
	if o == nil || IsNil(o.DeviceVoiceSettings) {
		return nil, false
	}
	return o.DeviceVoiceSettings, true
}

// HasDeviceVoiceSettings returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasDeviceVoiceSettings() bool {
	if o != nil && !IsNil(o.DeviceVoiceSettings) {
		return true
	}

	return false
}

// SetDeviceVoiceSettings gets a reference to the given ConfigPutRequestDeviceVoiceSettings and assigns it to the DeviceVoiceSettings field.
func (o *ConfigPutRequest) SetDeviceVoiceSettings(v ConfigPutRequestDeviceVoiceSettings) {
	o.DeviceVoiceSettings = &v
}

// GetAuthenticatedEthPort returns the AuthenticatedEthPort field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetAuthenticatedEthPort() ConfigPutRequestAuthenticatedEthPort {
	if o == nil || IsNil(o.AuthenticatedEthPort) {
		var ret ConfigPutRequestAuthenticatedEthPort
		return ret
	}
	return *o.AuthenticatedEthPort
}

// GetAuthenticatedEthPortOk returns a tuple with the AuthenticatedEthPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetAuthenticatedEthPortOk() (*ConfigPutRequestAuthenticatedEthPort, bool) {
	if o == nil || IsNil(o.AuthenticatedEthPort) {
		return nil, false
	}
	return o.AuthenticatedEthPort, true
}

// HasAuthenticatedEthPort returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasAuthenticatedEthPort() bool {
	if o != nil && !IsNil(o.AuthenticatedEthPort) {
		return true
	}

	return false
}

// SetAuthenticatedEthPort gets a reference to the given ConfigPutRequestAuthenticatedEthPort and assigns it to the AuthenticatedEthPort field.
func (o *ConfigPutRequest) SetAuthenticatedEthPort(v ConfigPutRequestAuthenticatedEthPort) {
	o.AuthenticatedEthPort = &v
}

// GetVoicePortProfiles returns the VoicePortProfiles field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetVoicePortProfiles() ConfigPutRequestVoicePortProfiles {
	if o == nil || IsNil(o.VoicePortProfiles) {
		var ret ConfigPutRequestVoicePortProfiles
		return ret
	}
	return *o.VoicePortProfiles
}

// GetVoicePortProfilesOk returns a tuple with the VoicePortProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetVoicePortProfilesOk() (*ConfigPutRequestVoicePortProfiles, bool) {
	if o == nil || IsNil(o.VoicePortProfiles) {
		return nil, false
	}
	return o.VoicePortProfiles, true
}

// HasVoicePortProfiles returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasVoicePortProfiles() bool {
	if o != nil && !IsNil(o.VoicePortProfiles) {
		return true
	}

	return false
}

// SetVoicePortProfiles gets a reference to the given ConfigPutRequestVoicePortProfiles and assigns it to the VoicePortProfiles field.
func (o *ConfigPutRequest) SetVoicePortProfiles(v ConfigPutRequestVoicePortProfiles) {
	o.VoicePortProfiles = &v
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetEndpoint() ConfigPutRequestEndpoint {
	if o == nil || IsNil(o.Endpoint) {
		var ret ConfigPutRequestEndpoint
		return ret
	}
	return *o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetEndpointOk() (*ConfigPutRequestEndpoint, bool) {
	if o == nil || IsNil(o.Endpoint) {
		return nil, false
	}
	return o.Endpoint, true
}

// HasEndpoint returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasEndpoint() bool {
	if o != nil && !IsNil(o.Endpoint) {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given ConfigPutRequestEndpoint and assigns it to the Endpoint field.
func (o *ConfigPutRequest) SetEndpoint(v ConfigPutRequestEndpoint) {
	o.Endpoint = &v
}

// GetMacFilter returns the MacFilter field value if set, zero value otherwise.
func (o *ConfigPutRequest) GetMacFilter() ConfigPutRequestMacFilter {
	if o == nil || IsNil(o.MacFilter) {
		var ret ConfigPutRequestMacFilter
		return ret
	}
	return *o.MacFilter
}

// GetMacFilterOk returns a tuple with the MacFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequest) GetMacFilterOk() (*ConfigPutRequestMacFilter, bool) {
	if o == nil || IsNil(o.MacFilter) {
		return nil, false
	}
	return o.MacFilter, true
}

// HasMacFilter returns a boolean if a field has been set.
func (o *ConfigPutRequest) HasMacFilter() bool {
	if o != nil && !IsNil(o.MacFilter) {
		return true
	}

	return false
}

// SetMacFilter gets a reference to the given ConfigPutRequestMacFilter and assigns it to the MacFilter field.
func (o *ConfigPutRequest) SetMacFilter(v ConfigPutRequestMacFilter) {
	o.MacFilter = &v
}

func (o ConfigPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeviceController) {
		toSerialize["device_controller"] = o.DeviceController
	}
	if !IsNil(o.SfpBreakouts) {
		toSerialize["sfp_breakouts"] = o.SfpBreakouts
	}
	if !IsNil(o.Site) {
		toSerialize["site"] = o.Site
	}
	if !IsNil(o.Ipv4PrefixList) {
		toSerialize["ipv4_prefix_list"] = o.Ipv4PrefixList
	}
	if !IsNil(o.EthDeviceProfiles) {
		toSerialize["eth_device_profiles"] = o.EthDeviceProfiles
	}
	if !IsNil(o.Ipv4Filter) {
		toSerialize["ipv4_filter"] = o.Ipv4Filter
	}
	if !IsNil(o.GatewayProfile) {
		toSerialize["gateway_profile"] = o.GatewayProfile
	}
	if !IsNil(o.EndpointView) {
		toSerialize["endpoint_view"] = o.EndpointView
	}
	if !IsNil(o.Gateway) {
		toSerialize["gateway"] = o.Gateway
	}
	if !IsNil(o.Ipv6Filter) {
		toSerialize["ipv6_filter"] = o.Ipv6Filter
	}
	if !IsNil(o.RouteMapClause) {
		toSerialize["route_map_clause"] = o.RouteMapClause
	}
	if !IsNil(o.Service) {
		toSerialize["service"] = o.Service
	}
	if !IsNil(o.RouteMap) {
		toSerialize["route_map"] = o.RouteMap
	}
	if !IsNil(o.BizdConfig) {
		toSerialize["bizd_config"] = o.BizdConfig
	}
	if !IsNil(o.PbEgressProfile) {
		toSerialize["pb_egress_profile"] = o.PbEgressProfile
	}
	if !IsNil(o.Badge) {
		toSerialize["badge"] = o.Badge
	}
	if !IsNil(o.Lag) {
		toSerialize["lag"] = o.Lag
	}
	if !IsNil(o.StaticIp) {
		toSerialize["static_ip"] = o.StaticIp
	}
	if !IsNil(o.CommunityList) {
		toSerialize["community_list"] = o.CommunityList
	}
	if !IsNil(o.Tenant) {
		toSerialize["tenant"] = o.Tenant
	}
	if !IsNil(o.Ipv6PrefixList) {
		toSerialize["ipv6_prefix_list"] = o.Ipv6PrefixList
	}
	if !IsNil(o.Ipv4ListFilter) {
		toSerialize["ipv4_list_filter"] = o.Ipv4ListFilter
	}
	if !IsNil(o.AsPathAccessList) {
		toSerialize["as_path_access_list"] = o.AsPathAccessList
	}
	if !IsNil(o.Ipv6ListFilter) {
		toSerialize["ipv6_list_filter"] = o.Ipv6ListFilter
	}
	if !IsNil(o.EthPortProfile) {
		toSerialize["eth_port_profile_"] = o.EthPortProfile
	}
	if !IsNil(o.EthPortSettings) {
		toSerialize["eth_port_settings"] = o.EthPortSettings
	}
	if !IsNil(o.EndpointBundle) {
		toSerialize["endpoint_bundle"] = o.EndpointBundle
	}
	if !IsNil(o.StaticConnections) {
		toSerialize["static_connections"] = o.StaticConnections
	}
	if !IsNil(o.Switchpoint) {
		toSerialize["switchpoint"] = o.Switchpoint
	}
	if !IsNil(o.ExtendedCommunityList) {
		toSerialize["extended_community_list"] = o.ExtendedCommunityList
	}
	if !IsNil(o.ImageUpdateSets) {
		toSerialize["image_update_sets"] = o.ImageUpdateSets
	}
	if !IsNil(o.IpFilter) {
		toSerialize["ip_filter"] = o.IpFilter
	}
	if !IsNil(o.FeatureFlag) {
		toSerialize["feature_flag"] = o.FeatureFlag
	}
	if !IsNil(o.PacketQueue) {
		toSerialize["packet_queue"] = o.PacketQueue
	}
	if !IsNil(o.ServicePortProfile) {
		toSerialize["service_port_profile"] = o.ServicePortProfile
	}
	if !IsNil(o.DeviceVoiceSettings) {
		toSerialize["device_voice_settings"] = o.DeviceVoiceSettings
	}
	if !IsNil(o.AuthenticatedEthPort) {
		toSerialize["authenticated_eth_port"] = o.AuthenticatedEthPort
	}
	if !IsNil(o.VoicePortProfiles) {
		toSerialize["voice_port_profiles"] = o.VoicePortProfiles
	}
	if !IsNil(o.Endpoint) {
		toSerialize["endpoint"] = o.Endpoint
	}
	if !IsNil(o.MacFilter) {
		toSerialize["mac_filter"] = o.MacFilter
	}
	return toSerialize, nil
}

type NullableConfigPutRequest struct {
	value *ConfigPutRequest
	isSet bool
}

func (v NullableConfigPutRequest) Get() *ConfigPutRequest {
	return v.value
}

func (v *NullableConfigPutRequest) Set(val *ConfigPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigPutRequest(val *ConfigPutRequest) *NullableConfigPutRequest {
	return &NullableConfigPutRequest{value: val, isSet: true}
}

func (v NullableConfigPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


