/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Ipv6prefixlistsPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Ipv6prefixlistsPutRequest{}

// Ipv6prefixlistsPutRequest struct for Ipv6prefixlistsPutRequest
type Ipv6prefixlistsPutRequest struct {
	Ipv6PrefixList *map[string]Ipv6prefixlistsPutRequestIpv6PrefixListValue `json:"ipv6_prefix_list,omitempty"`
}

// NewIpv6prefixlistsPutRequest instantiates a new Ipv6prefixlistsPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpv6prefixlistsPutRequest() *Ipv6prefixlistsPutRequest {
	this := Ipv6prefixlistsPutRequest{}
	return &this
}

// NewIpv6prefixlistsPutRequestWithDefaults instantiates a new Ipv6prefixlistsPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpv6prefixlistsPutRequestWithDefaults() *Ipv6prefixlistsPutRequest {
	this := Ipv6prefixlistsPutRequest{}
	return &this
}

// GetIpv6PrefixList returns the Ipv6PrefixList field value if set, zero value otherwise.
func (o *Ipv6prefixlistsPutRequest) GetIpv6PrefixList() map[string]Ipv6prefixlistsPutRequestIpv6PrefixListValue {
	if o == nil || IsNil(o.Ipv6PrefixList) {
		var ret map[string]Ipv6prefixlistsPutRequestIpv6PrefixListValue
		return ret
	}
	return *o.Ipv6PrefixList
}

// GetIpv6PrefixListOk returns a tuple with the Ipv6PrefixList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ipv6prefixlistsPutRequest) GetIpv6PrefixListOk() (*map[string]Ipv6prefixlistsPutRequestIpv6PrefixListValue, bool) {
	if o == nil || IsNil(o.Ipv6PrefixList) {
		return nil, false
	}
	return o.Ipv6PrefixList, true
}

// HasIpv6PrefixList returns a boolean if a field has been set.
func (o *Ipv6prefixlistsPutRequest) HasIpv6PrefixList() bool {
	if o != nil && !IsNil(o.Ipv6PrefixList) {
		return true
	}

	return false
}

// SetIpv6PrefixList gets a reference to the given map[string]Ipv6prefixlistsPutRequestIpv6PrefixListValue and assigns it to the Ipv6PrefixList field.
func (o *Ipv6prefixlistsPutRequest) SetIpv6PrefixList(v map[string]Ipv6prefixlistsPutRequestIpv6PrefixListValue) {
	o.Ipv6PrefixList = &v
}

func (o Ipv6prefixlistsPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Ipv6prefixlistsPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ipv6PrefixList) {
		toSerialize["ipv6_prefix_list"] = o.Ipv6PrefixList
	}
	return toSerialize, nil
}

type NullableIpv6prefixlistsPutRequest struct {
	value *Ipv6prefixlistsPutRequest
	isSet bool
}

func (v NullableIpv6prefixlistsPutRequest) Get() *Ipv6prefixlistsPutRequest {
	return v.value
}

func (v *NullableIpv6prefixlistsPutRequest) Set(val *Ipv6prefixlistsPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIpv6prefixlistsPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIpv6prefixlistsPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpv6prefixlistsPutRequest(val *Ipv6prefixlistsPutRequest) *NullableIpv6prefixlistsPutRequest {
	return &NullableIpv6prefixlistsPutRequest{value: val, isSet: true}
}

func (v NullableIpv6prefixlistsPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpv6prefixlistsPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


