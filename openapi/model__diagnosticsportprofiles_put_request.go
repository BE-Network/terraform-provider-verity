/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DiagnosticsportprofilesPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DiagnosticsportprofilesPutRequest{}

// DiagnosticsportprofilesPutRequest struct for DiagnosticsportprofilesPutRequest
type DiagnosticsportprofilesPutRequest struct {
	DiagnosticsPortProfile *map[string]DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue `json:"diagnostics_port_profile,omitempty"`
}

// NewDiagnosticsportprofilesPutRequest instantiates a new DiagnosticsportprofilesPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiagnosticsportprofilesPutRequest() *DiagnosticsportprofilesPutRequest {
	this := DiagnosticsportprofilesPutRequest{}
	return &this
}

// NewDiagnosticsportprofilesPutRequestWithDefaults instantiates a new DiagnosticsportprofilesPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiagnosticsportprofilesPutRequestWithDefaults() *DiagnosticsportprofilesPutRequest {
	this := DiagnosticsportprofilesPutRequest{}
	return &this
}

// GetDiagnosticsPortProfile returns the DiagnosticsPortProfile field value if set, zero value otherwise.
func (o *DiagnosticsportprofilesPutRequest) GetDiagnosticsPortProfile() map[string]DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue {
	if o == nil || IsNil(o.DiagnosticsPortProfile) {
		var ret map[string]DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue
		return ret
	}
	return *o.DiagnosticsPortProfile
}

// GetDiagnosticsPortProfileOk returns a tuple with the DiagnosticsPortProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiagnosticsportprofilesPutRequest) GetDiagnosticsPortProfileOk() (*map[string]DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue, bool) {
	if o == nil || IsNil(o.DiagnosticsPortProfile) {
		return nil, false
	}
	return o.DiagnosticsPortProfile, true
}

// HasDiagnosticsPortProfile returns a boolean if a field has been set.
func (o *DiagnosticsportprofilesPutRequest) HasDiagnosticsPortProfile() bool {
	if o != nil && !IsNil(o.DiagnosticsPortProfile) {
		return true
	}

	return false
}

// SetDiagnosticsPortProfile gets a reference to the given map[string]DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue and assigns it to the DiagnosticsPortProfile field.
func (o *DiagnosticsportprofilesPutRequest) SetDiagnosticsPortProfile(v map[string]DiagnosticsportprofilesPutRequestDiagnosticsPortProfileValue) {
	o.DiagnosticsPortProfile = &v
}

func (o DiagnosticsportprofilesPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DiagnosticsportprofilesPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DiagnosticsPortProfile) {
		toSerialize["diagnostics_port_profile"] = o.DiagnosticsPortProfile
	}
	return toSerialize, nil
}

type NullableDiagnosticsportprofilesPutRequest struct {
	value *DiagnosticsportprofilesPutRequest
	isSet bool
}

func (v NullableDiagnosticsportprofilesPutRequest) Get() *DiagnosticsportprofilesPutRequest {
	return v.value
}

func (v *NullableDiagnosticsportprofilesPutRequest) Set(val *DiagnosticsportprofilesPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDiagnosticsportprofilesPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDiagnosticsportprofilesPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiagnosticsportprofilesPutRequest(val *DiagnosticsportprofilesPutRequest) *NullableDiagnosticsportprofilesPutRequest {
	return &NullableDiagnosticsportprofilesPutRequest{value: val, isSet: true}
}

func (v NullableDiagnosticsportprofilesPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiagnosticsportprofilesPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


