/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SwitchpointsPutRequestSwitchpointValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SwitchpointsPutRequestSwitchpointValue{}

// SwitchpointsPutRequestSwitchpointValue struct for SwitchpointsPutRequestSwitchpointValue
type SwitchpointsPutRequestSwitchpointValue struct {
	// Object Name. Must be unique.
	Name *string `json:"name,omitempty"`
	// Device Serial Number
	DeviceSerialNumber *string `json:"device_serial_number,omitempty"`
	// Connected Bundle
	ConnectedBundle *string `json:"connected_bundle,omitempty"`
	// Object type for connected_bundle field
	ConnectedBundleRefType *string `json:"connected_bundle_ref_type_,omitempty"`
	// When Read Only Mode is checked, vNetC will perform all functions except writing database updates to the target hardware
	ReadOnlyMode *bool `json:"read_only_mode,omitempty"`
	// Permission lock
	Locked *bool `json:"locked,omitempty"`
	// Disabled Ports It's a comma separated list of ports to disable.
	DisabledPorts *string `json:"disabled_ports,omitempty"`
	// For Switch Endpoints. Denotes a Switch is managed out of band via the management port
	OutOfBandManagement *bool `json:"out_of_band_management,omitempty"`
	// Type of Switchpoint
	Type *string `json:"type,omitempty"`
	// Super Pod  subgrouping of super spines and pods
	SuperPod *string `json:"super_pod,omitempty"`
	// Pod  subgrouping of spine and leaf switches 
	Pod *string `json:"pod,omitempty"`
	// Physical Rack location of the Switch 
	Rack *string `json:"rack,omitempty"`
	// Switch BGP Router Identifier
	SwitchRouterIdIpMask *string `json:"switch_router_id_ip_mask,omitempty"`
	// Whether or not the value in switch_router_id_ip_mask field has been automatically assigned or not. Set to false and change switch_router_id_ip_mask value to edit.
	SwitchRouterIdIpMaskAutoAssigned *bool `json:"switch_router_id_ip_mask_auto_assigned_,omitempty"`
	// Switch VETP Identifier
	SwitchVtepIdIpMask *string `json:"switch_vtep_id_ip_mask,omitempty"`
	// Whether or not the value in switch_vtep_id_ip_mask field has been automatically assigned or not. Set to false and change switch_vtep_id_ip_mask value to edit.
	SwitchVtepIdIpMaskAutoAssigned *bool `json:"switch_vtep_id_ip_mask_auto_assigned_,omitempty"`
	// BGP Autonomous System Number for the site underlay 
	BgpAsNumber *int32 `json:"bgp_as_number,omitempty"`
	// Whether or not the value in bgp_as_number field has been automatically assigned or not. Set to false and change bgp_as_number value to edit.
	BgpAsNumberAutoAssigned *bool `json:"bgp_as_number_auto_assigned_,omitempty"`
	Badges []SwitchpointsPutRequestSwitchpointValueBadgesInner `json:"badges,omitempty"`
	Children []SwitchpointsPutRequestSwitchpointValueChildrenInner `json:"children,omitempty"`
	TrafficMirrors []SwitchpointsPutRequestSwitchpointValueTrafficMirrorsInner `json:"traffic_mirrors,omitempty"`
	Eths []SwitchpointsPutRequestSwitchpointValueEthsInner `json:"eths,omitempty"`
	ObjectProperties *SwitchpointsPutRequestSwitchpointValueObjectProperties `json:"object_properties,omitempty"`
}

// NewSwitchpointsPutRequestSwitchpointValue instantiates a new SwitchpointsPutRequestSwitchpointValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSwitchpointsPutRequestSwitchpointValue() *SwitchpointsPutRequestSwitchpointValue {
	this := SwitchpointsPutRequestSwitchpointValue{}
	var name string = ""
	this.Name = &name
	var deviceSerialNumber string = ""
	this.DeviceSerialNumber = &deviceSerialNumber
	var connectedBundle string = ""
	this.ConnectedBundle = &connectedBundle
	var readOnlyMode bool = false
	this.ReadOnlyMode = &readOnlyMode
	var locked bool = false
	this.Locked = &locked
	var disabledPorts string = ""
	this.DisabledPorts = &disabledPorts
	var outOfBandManagement bool = false
	this.OutOfBandManagement = &outOfBandManagement
	var type_ string = "leaf"
	this.Type = &type_
	var superPod string = ""
	this.SuperPod = &superPod
	var pod string = ""
	this.Pod = &pod
	var rack string = ""
	this.Rack = &rack
	var switchRouterIdIpMask string = "(auto)"
	this.SwitchRouterIdIpMask = &switchRouterIdIpMask
	var switchVtepIdIpMask string = "(auto)"
	this.SwitchVtepIdIpMask = &switchVtepIdIpMask
	return &this
}

// NewSwitchpointsPutRequestSwitchpointValueWithDefaults instantiates a new SwitchpointsPutRequestSwitchpointValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSwitchpointsPutRequestSwitchpointValueWithDefaults() *SwitchpointsPutRequestSwitchpointValue {
	this := SwitchpointsPutRequestSwitchpointValue{}
	var name string = ""
	this.Name = &name
	var deviceSerialNumber string = ""
	this.DeviceSerialNumber = &deviceSerialNumber
	var connectedBundle string = ""
	this.ConnectedBundle = &connectedBundle
	var readOnlyMode bool = false
	this.ReadOnlyMode = &readOnlyMode
	var locked bool = false
	this.Locked = &locked
	var disabledPorts string = ""
	this.DisabledPorts = &disabledPorts
	var outOfBandManagement bool = false
	this.OutOfBandManagement = &outOfBandManagement
	var type_ string = "leaf"
	this.Type = &type_
	var superPod string = ""
	this.SuperPod = &superPod
	var pod string = ""
	this.Pod = &pod
	var rack string = ""
	this.Rack = &rack
	var switchRouterIdIpMask string = "(auto)"
	this.SwitchRouterIdIpMask = &switchRouterIdIpMask
	var switchVtepIdIpMask string = "(auto)"
	this.SwitchVtepIdIpMask = &switchVtepIdIpMask
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SwitchpointsPutRequestSwitchpointValue) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SwitchpointsPutRequestSwitchpointValue) SetName(v string) {
	o.Name = &v
}

// GetDeviceSerialNumber returns the DeviceSerialNumber field value if set, zero value otherwise.
func (o *SwitchpointsPutRequestSwitchpointValue) GetDeviceSerialNumber() string {
	if o == nil || IsNil(o.DeviceSerialNumber) {
		var ret string
		return ret
	}
	return *o.DeviceSerialNumber
}

// GetDeviceSerialNumberOk returns a tuple with the DeviceSerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) GetDeviceSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceSerialNumber) {
		return nil, false
	}
	return o.DeviceSerialNumber, true
}

// HasDeviceSerialNumber returns a boolean if a field has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) HasDeviceSerialNumber() bool {
	if o != nil && !IsNil(o.DeviceSerialNumber) {
		return true
	}

	return false
}

// SetDeviceSerialNumber gets a reference to the given string and assigns it to the DeviceSerialNumber field.
func (o *SwitchpointsPutRequestSwitchpointValue) SetDeviceSerialNumber(v string) {
	o.DeviceSerialNumber = &v
}

// GetConnectedBundle returns the ConnectedBundle field value if set, zero value otherwise.
func (o *SwitchpointsPutRequestSwitchpointValue) GetConnectedBundle() string {
	if o == nil || IsNil(o.ConnectedBundle) {
		var ret string
		return ret
	}
	return *o.ConnectedBundle
}

// GetConnectedBundleOk returns a tuple with the ConnectedBundle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) GetConnectedBundleOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectedBundle) {
		return nil, false
	}
	return o.ConnectedBundle, true
}

// HasConnectedBundle returns a boolean if a field has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) HasConnectedBundle() bool {
	if o != nil && !IsNil(o.ConnectedBundle) {
		return true
	}

	return false
}

// SetConnectedBundle gets a reference to the given string and assigns it to the ConnectedBundle field.
func (o *SwitchpointsPutRequestSwitchpointValue) SetConnectedBundle(v string) {
	o.ConnectedBundle = &v
}

// GetConnectedBundleRefType returns the ConnectedBundleRefType field value if set, zero value otherwise.
func (o *SwitchpointsPutRequestSwitchpointValue) GetConnectedBundleRefType() string {
	if o == nil || IsNil(o.ConnectedBundleRefType) {
		var ret string
		return ret
	}
	return *o.ConnectedBundleRefType
}

// GetConnectedBundleRefTypeOk returns a tuple with the ConnectedBundleRefType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) GetConnectedBundleRefTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectedBundleRefType) {
		return nil, false
	}
	return o.ConnectedBundleRefType, true
}

// HasConnectedBundleRefType returns a boolean if a field has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) HasConnectedBundleRefType() bool {
	if o != nil && !IsNil(o.ConnectedBundleRefType) {
		return true
	}

	return false
}

// SetConnectedBundleRefType gets a reference to the given string and assigns it to the ConnectedBundleRefType field.
func (o *SwitchpointsPutRequestSwitchpointValue) SetConnectedBundleRefType(v string) {
	o.ConnectedBundleRefType = &v
}

// GetReadOnlyMode returns the ReadOnlyMode field value if set, zero value otherwise.
func (o *SwitchpointsPutRequestSwitchpointValue) GetReadOnlyMode() bool {
	if o == nil || IsNil(o.ReadOnlyMode) {
		var ret bool
		return ret
	}
	return *o.ReadOnlyMode
}

// GetReadOnlyModeOk returns a tuple with the ReadOnlyMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) GetReadOnlyModeOk() (*bool, bool) {
	if o == nil || IsNil(o.ReadOnlyMode) {
		return nil, false
	}
	return o.ReadOnlyMode, true
}

// HasReadOnlyMode returns a boolean if a field has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) HasReadOnlyMode() bool {
	if o != nil && !IsNil(o.ReadOnlyMode) {
		return true
	}

	return false
}

// SetReadOnlyMode gets a reference to the given bool and assigns it to the ReadOnlyMode field.
func (o *SwitchpointsPutRequestSwitchpointValue) SetReadOnlyMode(v bool) {
	o.ReadOnlyMode = &v
}

// GetLocked returns the Locked field value if set, zero value otherwise.
func (o *SwitchpointsPutRequestSwitchpointValue) GetLocked() bool {
	if o == nil || IsNil(o.Locked) {
		var ret bool
		return ret
	}
	return *o.Locked
}

// GetLockedOk returns a tuple with the Locked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) GetLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.Locked) {
		return nil, false
	}
	return o.Locked, true
}

// HasLocked returns a boolean if a field has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) HasLocked() bool {
	if o != nil && !IsNil(o.Locked) {
		return true
	}

	return false
}

// SetLocked gets a reference to the given bool and assigns it to the Locked field.
func (o *SwitchpointsPutRequestSwitchpointValue) SetLocked(v bool) {
	o.Locked = &v
}

// GetDisabledPorts returns the DisabledPorts field value if set, zero value otherwise.
func (o *SwitchpointsPutRequestSwitchpointValue) GetDisabledPorts() string {
	if o == nil || IsNil(o.DisabledPorts) {
		var ret string
		return ret
	}
	return *o.DisabledPorts
}

// GetDisabledPortsOk returns a tuple with the DisabledPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) GetDisabledPortsOk() (*string, bool) {
	if o == nil || IsNil(o.DisabledPorts) {
		return nil, false
	}
	return o.DisabledPorts, true
}

// HasDisabledPorts returns a boolean if a field has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) HasDisabledPorts() bool {
	if o != nil && !IsNil(o.DisabledPorts) {
		return true
	}

	return false
}

// SetDisabledPorts gets a reference to the given string and assigns it to the DisabledPorts field.
func (o *SwitchpointsPutRequestSwitchpointValue) SetDisabledPorts(v string) {
	o.DisabledPorts = &v
}

// GetOutOfBandManagement returns the OutOfBandManagement field value if set, zero value otherwise.
func (o *SwitchpointsPutRequestSwitchpointValue) GetOutOfBandManagement() bool {
	if o == nil || IsNil(o.OutOfBandManagement) {
		var ret bool
		return ret
	}
	return *o.OutOfBandManagement
}

// GetOutOfBandManagementOk returns a tuple with the OutOfBandManagement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) GetOutOfBandManagementOk() (*bool, bool) {
	if o == nil || IsNil(o.OutOfBandManagement) {
		return nil, false
	}
	return o.OutOfBandManagement, true
}

// HasOutOfBandManagement returns a boolean if a field has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) HasOutOfBandManagement() bool {
	if o != nil && !IsNil(o.OutOfBandManagement) {
		return true
	}

	return false
}

// SetOutOfBandManagement gets a reference to the given bool and assigns it to the OutOfBandManagement field.
func (o *SwitchpointsPutRequestSwitchpointValue) SetOutOfBandManagement(v bool) {
	o.OutOfBandManagement = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SwitchpointsPutRequestSwitchpointValue) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *SwitchpointsPutRequestSwitchpointValue) SetType(v string) {
	o.Type = &v
}

// GetSuperPod returns the SuperPod field value if set, zero value otherwise.
func (o *SwitchpointsPutRequestSwitchpointValue) GetSuperPod() string {
	if o == nil || IsNil(o.SuperPod) {
		var ret string
		return ret
	}
	return *o.SuperPod
}

// GetSuperPodOk returns a tuple with the SuperPod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) GetSuperPodOk() (*string, bool) {
	if o == nil || IsNil(o.SuperPod) {
		return nil, false
	}
	return o.SuperPod, true
}

// HasSuperPod returns a boolean if a field has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) HasSuperPod() bool {
	if o != nil && !IsNil(o.SuperPod) {
		return true
	}

	return false
}

// SetSuperPod gets a reference to the given string and assigns it to the SuperPod field.
func (o *SwitchpointsPutRequestSwitchpointValue) SetSuperPod(v string) {
	o.SuperPod = &v
}

// GetPod returns the Pod field value if set, zero value otherwise.
func (o *SwitchpointsPutRequestSwitchpointValue) GetPod() string {
	if o == nil || IsNil(o.Pod) {
		var ret string
		return ret
	}
	return *o.Pod
}

// GetPodOk returns a tuple with the Pod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) GetPodOk() (*string, bool) {
	if o == nil || IsNil(o.Pod) {
		return nil, false
	}
	return o.Pod, true
}

// HasPod returns a boolean if a field has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) HasPod() bool {
	if o != nil && !IsNil(o.Pod) {
		return true
	}

	return false
}

// SetPod gets a reference to the given string and assigns it to the Pod field.
func (o *SwitchpointsPutRequestSwitchpointValue) SetPod(v string) {
	o.Pod = &v
}

// GetRack returns the Rack field value if set, zero value otherwise.
func (o *SwitchpointsPutRequestSwitchpointValue) GetRack() string {
	if o == nil || IsNil(o.Rack) {
		var ret string
		return ret
	}
	return *o.Rack
}

// GetRackOk returns a tuple with the Rack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) GetRackOk() (*string, bool) {
	if o == nil || IsNil(o.Rack) {
		return nil, false
	}
	return o.Rack, true
}

// HasRack returns a boolean if a field has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) HasRack() bool {
	if o != nil && !IsNil(o.Rack) {
		return true
	}

	return false
}

// SetRack gets a reference to the given string and assigns it to the Rack field.
func (o *SwitchpointsPutRequestSwitchpointValue) SetRack(v string) {
	o.Rack = &v
}

// GetSwitchRouterIdIpMask returns the SwitchRouterIdIpMask field value if set, zero value otherwise.
func (o *SwitchpointsPutRequestSwitchpointValue) GetSwitchRouterIdIpMask() string {
	if o == nil || IsNil(o.SwitchRouterIdIpMask) {
		var ret string
		return ret
	}
	return *o.SwitchRouterIdIpMask
}

// GetSwitchRouterIdIpMaskOk returns a tuple with the SwitchRouterIdIpMask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) GetSwitchRouterIdIpMaskOk() (*string, bool) {
	if o == nil || IsNil(o.SwitchRouterIdIpMask) {
		return nil, false
	}
	return o.SwitchRouterIdIpMask, true
}

// HasSwitchRouterIdIpMask returns a boolean if a field has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) HasSwitchRouterIdIpMask() bool {
	if o != nil && !IsNil(o.SwitchRouterIdIpMask) {
		return true
	}

	return false
}

// SetSwitchRouterIdIpMask gets a reference to the given string and assigns it to the SwitchRouterIdIpMask field.
func (o *SwitchpointsPutRequestSwitchpointValue) SetSwitchRouterIdIpMask(v string) {
	o.SwitchRouterIdIpMask = &v
}

// GetSwitchRouterIdIpMaskAutoAssigned returns the SwitchRouterIdIpMaskAutoAssigned field value if set, zero value otherwise.
func (o *SwitchpointsPutRequestSwitchpointValue) GetSwitchRouterIdIpMaskAutoAssigned() bool {
	if o == nil || IsNil(o.SwitchRouterIdIpMaskAutoAssigned) {
		var ret bool
		return ret
	}
	return *o.SwitchRouterIdIpMaskAutoAssigned
}

// GetSwitchRouterIdIpMaskAutoAssignedOk returns a tuple with the SwitchRouterIdIpMaskAutoAssigned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) GetSwitchRouterIdIpMaskAutoAssignedOk() (*bool, bool) {
	if o == nil || IsNil(o.SwitchRouterIdIpMaskAutoAssigned) {
		return nil, false
	}
	return o.SwitchRouterIdIpMaskAutoAssigned, true
}

// HasSwitchRouterIdIpMaskAutoAssigned returns a boolean if a field has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) HasSwitchRouterIdIpMaskAutoAssigned() bool {
	if o != nil && !IsNil(o.SwitchRouterIdIpMaskAutoAssigned) {
		return true
	}

	return false
}

// SetSwitchRouterIdIpMaskAutoAssigned gets a reference to the given bool and assigns it to the SwitchRouterIdIpMaskAutoAssigned field.
func (o *SwitchpointsPutRequestSwitchpointValue) SetSwitchRouterIdIpMaskAutoAssigned(v bool) {
	o.SwitchRouterIdIpMaskAutoAssigned = &v
}

// GetSwitchVtepIdIpMask returns the SwitchVtepIdIpMask field value if set, zero value otherwise.
func (o *SwitchpointsPutRequestSwitchpointValue) GetSwitchVtepIdIpMask() string {
	if o == nil || IsNil(o.SwitchVtepIdIpMask) {
		var ret string
		return ret
	}
	return *o.SwitchVtepIdIpMask
}

// GetSwitchVtepIdIpMaskOk returns a tuple with the SwitchVtepIdIpMask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) GetSwitchVtepIdIpMaskOk() (*string, bool) {
	if o == nil || IsNil(o.SwitchVtepIdIpMask) {
		return nil, false
	}
	return o.SwitchVtepIdIpMask, true
}

// HasSwitchVtepIdIpMask returns a boolean if a field has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) HasSwitchVtepIdIpMask() bool {
	if o != nil && !IsNil(o.SwitchVtepIdIpMask) {
		return true
	}

	return false
}

// SetSwitchVtepIdIpMask gets a reference to the given string and assigns it to the SwitchVtepIdIpMask field.
func (o *SwitchpointsPutRequestSwitchpointValue) SetSwitchVtepIdIpMask(v string) {
	o.SwitchVtepIdIpMask = &v
}

// GetSwitchVtepIdIpMaskAutoAssigned returns the SwitchVtepIdIpMaskAutoAssigned field value if set, zero value otherwise.
func (o *SwitchpointsPutRequestSwitchpointValue) GetSwitchVtepIdIpMaskAutoAssigned() bool {
	if o == nil || IsNil(o.SwitchVtepIdIpMaskAutoAssigned) {
		var ret bool
		return ret
	}
	return *o.SwitchVtepIdIpMaskAutoAssigned
}

// GetSwitchVtepIdIpMaskAutoAssignedOk returns a tuple with the SwitchVtepIdIpMaskAutoAssigned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) GetSwitchVtepIdIpMaskAutoAssignedOk() (*bool, bool) {
	if o == nil || IsNil(o.SwitchVtepIdIpMaskAutoAssigned) {
		return nil, false
	}
	return o.SwitchVtepIdIpMaskAutoAssigned, true
}

// HasSwitchVtepIdIpMaskAutoAssigned returns a boolean if a field has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) HasSwitchVtepIdIpMaskAutoAssigned() bool {
	if o != nil && !IsNil(o.SwitchVtepIdIpMaskAutoAssigned) {
		return true
	}

	return false
}

// SetSwitchVtepIdIpMaskAutoAssigned gets a reference to the given bool and assigns it to the SwitchVtepIdIpMaskAutoAssigned field.
func (o *SwitchpointsPutRequestSwitchpointValue) SetSwitchVtepIdIpMaskAutoAssigned(v bool) {
	o.SwitchVtepIdIpMaskAutoAssigned = &v
}

// GetBgpAsNumber returns the BgpAsNumber field value if set, zero value otherwise.
func (o *SwitchpointsPutRequestSwitchpointValue) GetBgpAsNumber() int32 {
	if o == nil || IsNil(o.BgpAsNumber) {
		var ret int32
		return ret
	}
	return *o.BgpAsNumber
}

// GetBgpAsNumberOk returns a tuple with the BgpAsNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) GetBgpAsNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.BgpAsNumber) {
		return nil, false
	}
	return o.BgpAsNumber, true
}

// HasBgpAsNumber returns a boolean if a field has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) HasBgpAsNumber() bool {
	if o != nil && !IsNil(o.BgpAsNumber) {
		return true
	}

	return false
}

// SetBgpAsNumber gets a reference to the given int32 and assigns it to the BgpAsNumber field.
func (o *SwitchpointsPutRequestSwitchpointValue) SetBgpAsNumber(v int32) {
	o.BgpAsNumber = &v
}

// GetBgpAsNumberAutoAssigned returns the BgpAsNumberAutoAssigned field value if set, zero value otherwise.
func (o *SwitchpointsPutRequestSwitchpointValue) GetBgpAsNumberAutoAssigned() bool {
	if o == nil || IsNil(o.BgpAsNumberAutoAssigned) {
		var ret bool
		return ret
	}
	return *o.BgpAsNumberAutoAssigned
}

// GetBgpAsNumberAutoAssignedOk returns a tuple with the BgpAsNumberAutoAssigned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) GetBgpAsNumberAutoAssignedOk() (*bool, bool) {
	if o == nil || IsNil(o.BgpAsNumberAutoAssigned) {
		return nil, false
	}
	return o.BgpAsNumberAutoAssigned, true
}

// HasBgpAsNumberAutoAssigned returns a boolean if a field has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) HasBgpAsNumberAutoAssigned() bool {
	if o != nil && !IsNil(o.BgpAsNumberAutoAssigned) {
		return true
	}

	return false
}

// SetBgpAsNumberAutoAssigned gets a reference to the given bool and assigns it to the BgpAsNumberAutoAssigned field.
func (o *SwitchpointsPutRequestSwitchpointValue) SetBgpAsNumberAutoAssigned(v bool) {
	o.BgpAsNumberAutoAssigned = &v
}

// GetBadges returns the Badges field value if set, zero value otherwise.
func (o *SwitchpointsPutRequestSwitchpointValue) GetBadges() []SwitchpointsPutRequestSwitchpointValueBadgesInner {
	if o == nil || IsNil(o.Badges) {
		var ret []SwitchpointsPutRequestSwitchpointValueBadgesInner
		return ret
	}
	return o.Badges
}

// GetBadgesOk returns a tuple with the Badges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) GetBadgesOk() ([]SwitchpointsPutRequestSwitchpointValueBadgesInner, bool) {
	if o == nil || IsNil(o.Badges) {
		return nil, false
	}
	return o.Badges, true
}

// HasBadges returns a boolean if a field has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) HasBadges() bool {
	if o != nil && !IsNil(o.Badges) {
		return true
	}

	return false
}

// SetBadges gets a reference to the given []SwitchpointsPutRequestSwitchpointValueBadgesInner and assigns it to the Badges field.
func (o *SwitchpointsPutRequestSwitchpointValue) SetBadges(v []SwitchpointsPutRequestSwitchpointValueBadgesInner) {
	o.Badges = v
}

// GetChildren returns the Children field value if set, zero value otherwise.
func (o *SwitchpointsPutRequestSwitchpointValue) GetChildren() []SwitchpointsPutRequestSwitchpointValueChildrenInner {
	if o == nil || IsNil(o.Children) {
		var ret []SwitchpointsPutRequestSwitchpointValueChildrenInner
		return ret
	}
	return o.Children
}

// GetChildrenOk returns a tuple with the Children field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) GetChildrenOk() ([]SwitchpointsPutRequestSwitchpointValueChildrenInner, bool) {
	if o == nil || IsNil(o.Children) {
		return nil, false
	}
	return o.Children, true
}

// HasChildren returns a boolean if a field has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) HasChildren() bool {
	if o != nil && !IsNil(o.Children) {
		return true
	}

	return false
}

// SetChildren gets a reference to the given []SwitchpointsPutRequestSwitchpointValueChildrenInner and assigns it to the Children field.
func (o *SwitchpointsPutRequestSwitchpointValue) SetChildren(v []SwitchpointsPutRequestSwitchpointValueChildrenInner) {
	o.Children = v
}

// GetTrafficMirrors returns the TrafficMirrors field value if set, zero value otherwise.
func (o *SwitchpointsPutRequestSwitchpointValue) GetTrafficMirrors() []SwitchpointsPutRequestSwitchpointValueTrafficMirrorsInner {
	if o == nil || IsNil(o.TrafficMirrors) {
		var ret []SwitchpointsPutRequestSwitchpointValueTrafficMirrorsInner
		return ret
	}
	return o.TrafficMirrors
}

// GetTrafficMirrorsOk returns a tuple with the TrafficMirrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) GetTrafficMirrorsOk() ([]SwitchpointsPutRequestSwitchpointValueTrafficMirrorsInner, bool) {
	if o == nil || IsNil(o.TrafficMirrors) {
		return nil, false
	}
	return o.TrafficMirrors, true
}

// HasTrafficMirrors returns a boolean if a field has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) HasTrafficMirrors() bool {
	if o != nil && !IsNil(o.TrafficMirrors) {
		return true
	}

	return false
}

// SetTrafficMirrors gets a reference to the given []SwitchpointsPutRequestSwitchpointValueTrafficMirrorsInner and assigns it to the TrafficMirrors field.
func (o *SwitchpointsPutRequestSwitchpointValue) SetTrafficMirrors(v []SwitchpointsPutRequestSwitchpointValueTrafficMirrorsInner) {
	o.TrafficMirrors = v
}

// GetEths returns the Eths field value if set, zero value otherwise.
func (o *SwitchpointsPutRequestSwitchpointValue) GetEths() []SwitchpointsPutRequestSwitchpointValueEthsInner {
	if o == nil || IsNil(o.Eths) {
		var ret []SwitchpointsPutRequestSwitchpointValueEthsInner
		return ret
	}
	return o.Eths
}

// GetEthsOk returns a tuple with the Eths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) GetEthsOk() ([]SwitchpointsPutRequestSwitchpointValueEthsInner, bool) {
	if o == nil || IsNil(o.Eths) {
		return nil, false
	}
	return o.Eths, true
}

// HasEths returns a boolean if a field has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) HasEths() bool {
	if o != nil && !IsNil(o.Eths) {
		return true
	}

	return false
}

// SetEths gets a reference to the given []SwitchpointsPutRequestSwitchpointValueEthsInner and assigns it to the Eths field.
func (o *SwitchpointsPutRequestSwitchpointValue) SetEths(v []SwitchpointsPutRequestSwitchpointValueEthsInner) {
	o.Eths = v
}

// GetObjectProperties returns the ObjectProperties field value if set, zero value otherwise.
func (o *SwitchpointsPutRequestSwitchpointValue) GetObjectProperties() SwitchpointsPutRequestSwitchpointValueObjectProperties {
	if o == nil || IsNil(o.ObjectProperties) {
		var ret SwitchpointsPutRequestSwitchpointValueObjectProperties
		return ret
	}
	return *o.ObjectProperties
}

// GetObjectPropertiesOk returns a tuple with the ObjectProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) GetObjectPropertiesOk() (*SwitchpointsPutRequestSwitchpointValueObjectProperties, bool) {
	if o == nil || IsNil(o.ObjectProperties) {
		return nil, false
	}
	return o.ObjectProperties, true
}

// HasObjectProperties returns a boolean if a field has been set.
func (o *SwitchpointsPutRequestSwitchpointValue) HasObjectProperties() bool {
	if o != nil && !IsNil(o.ObjectProperties) {
		return true
	}

	return false
}

// SetObjectProperties gets a reference to the given SwitchpointsPutRequestSwitchpointValueObjectProperties and assigns it to the ObjectProperties field.
func (o *SwitchpointsPutRequestSwitchpointValue) SetObjectProperties(v SwitchpointsPutRequestSwitchpointValueObjectProperties) {
	o.ObjectProperties = &v
}

func (o SwitchpointsPutRequestSwitchpointValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SwitchpointsPutRequestSwitchpointValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.DeviceSerialNumber) {
		toSerialize["device_serial_number"] = o.DeviceSerialNumber
	}
	if !IsNil(o.ConnectedBundle) {
		toSerialize["connected_bundle"] = o.ConnectedBundle
	}
	if !IsNil(o.ConnectedBundleRefType) {
		toSerialize["connected_bundle_ref_type_"] = o.ConnectedBundleRefType
	}
	if !IsNil(o.ReadOnlyMode) {
		toSerialize["read_only_mode"] = o.ReadOnlyMode
	}
	if !IsNil(o.Locked) {
		toSerialize["locked"] = o.Locked
	}
	if !IsNil(o.DisabledPorts) {
		toSerialize["disabled_ports"] = o.DisabledPorts
	}
	if !IsNil(o.OutOfBandManagement) {
		toSerialize["out_of_band_management"] = o.OutOfBandManagement
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.SuperPod) {
		toSerialize["super_pod"] = o.SuperPod
	}
	if !IsNil(o.Pod) {
		toSerialize["pod"] = o.Pod
	}
	if !IsNil(o.Rack) {
		toSerialize["rack"] = o.Rack
	}
	if !IsNil(o.SwitchRouterIdIpMask) {
		toSerialize["switch_router_id_ip_mask"] = o.SwitchRouterIdIpMask
	}
	if !IsNil(o.SwitchRouterIdIpMaskAutoAssigned) {
		toSerialize["switch_router_id_ip_mask_auto_assigned_"] = o.SwitchRouterIdIpMaskAutoAssigned
	}
	if !IsNil(o.SwitchVtepIdIpMask) {
		toSerialize["switch_vtep_id_ip_mask"] = o.SwitchVtepIdIpMask
	}
	if !IsNil(o.SwitchVtepIdIpMaskAutoAssigned) {
		toSerialize["switch_vtep_id_ip_mask_auto_assigned_"] = o.SwitchVtepIdIpMaskAutoAssigned
	}
	if !IsNil(o.BgpAsNumber) {
		toSerialize["bgp_as_number"] = o.BgpAsNumber
	}
	if !IsNil(o.BgpAsNumberAutoAssigned) {
		toSerialize["bgp_as_number_auto_assigned_"] = o.BgpAsNumberAutoAssigned
	}
	if !IsNil(o.Badges) {
		toSerialize["badges"] = o.Badges
	}
	if !IsNil(o.Children) {
		toSerialize["children"] = o.Children
	}
	if !IsNil(o.TrafficMirrors) {
		toSerialize["traffic_mirrors"] = o.TrafficMirrors
	}
	if !IsNil(o.Eths) {
		toSerialize["eths"] = o.Eths
	}
	if !IsNil(o.ObjectProperties) {
		toSerialize["object_properties"] = o.ObjectProperties
	}
	return toSerialize, nil
}

type NullableSwitchpointsPutRequestSwitchpointValue struct {
	value *SwitchpointsPutRequestSwitchpointValue
	isSet bool
}

func (v NullableSwitchpointsPutRequestSwitchpointValue) Get() *SwitchpointsPutRequestSwitchpointValue {
	return v.value
}

func (v *NullableSwitchpointsPutRequestSwitchpointValue) Set(val *SwitchpointsPutRequestSwitchpointValue) {
	v.value = val
	v.isSet = true
}

func (v NullableSwitchpointsPutRequestSwitchpointValue) IsSet() bool {
	return v.isSet
}

func (v *NullableSwitchpointsPutRequestSwitchpointValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSwitchpointsPutRequestSwitchpointValue(val *SwitchpointsPutRequestSwitchpointValue) *NullableSwitchpointsPutRequestSwitchpointValue {
	return &NullableSwitchpointsPutRequestSwitchpointValue{value: val, isSet: true}
}

func (v NullableSwitchpointsPutRequestSwitchpointValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSwitchpointsPutRequestSwitchpointValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


