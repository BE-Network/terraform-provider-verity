/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VoiceportprofilesPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VoiceportprofilesPutRequest{}

// VoiceportprofilesPutRequest struct for VoiceportprofilesPutRequest
type VoiceportprofilesPutRequest struct {
	VoicePortProfiles *map[string]VoiceportprofilesPutRequestVoicePortProfilesValue `json:"voice_port_profiles,omitempty"`
}

// NewVoiceportprofilesPutRequest instantiates a new VoiceportprofilesPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVoiceportprofilesPutRequest() *VoiceportprofilesPutRequest {
	this := VoiceportprofilesPutRequest{}
	return &this
}

// NewVoiceportprofilesPutRequestWithDefaults instantiates a new VoiceportprofilesPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVoiceportprofilesPutRequestWithDefaults() *VoiceportprofilesPutRequest {
	this := VoiceportprofilesPutRequest{}
	return &this
}

// GetVoicePortProfiles returns the VoicePortProfiles field value if set, zero value otherwise.
func (o *VoiceportprofilesPutRequest) GetVoicePortProfiles() map[string]VoiceportprofilesPutRequestVoicePortProfilesValue {
	if o == nil || IsNil(o.VoicePortProfiles) {
		var ret map[string]VoiceportprofilesPutRequestVoicePortProfilesValue
		return ret
	}
	return *o.VoicePortProfiles
}

// GetVoicePortProfilesOk returns a tuple with the VoicePortProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceportprofilesPutRequest) GetVoicePortProfilesOk() (*map[string]VoiceportprofilesPutRequestVoicePortProfilesValue, bool) {
	if o == nil || IsNil(o.VoicePortProfiles) {
		return nil, false
	}
	return o.VoicePortProfiles, true
}

// HasVoicePortProfiles returns a boolean if a field has been set.
func (o *VoiceportprofilesPutRequest) HasVoicePortProfiles() bool {
	if o != nil && !IsNil(o.VoicePortProfiles) {
		return true
	}

	return false
}

// SetVoicePortProfiles gets a reference to the given map[string]VoiceportprofilesPutRequestVoicePortProfilesValue and assigns it to the VoicePortProfiles field.
func (o *VoiceportprofilesPutRequest) SetVoicePortProfiles(v map[string]VoiceportprofilesPutRequestVoicePortProfilesValue) {
	o.VoicePortProfiles = &v
}

func (o VoiceportprofilesPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VoiceportprofilesPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VoicePortProfiles) {
		toSerialize["voice_port_profiles"] = o.VoicePortProfiles
	}
	return toSerialize, nil
}

type NullableVoiceportprofilesPutRequest struct {
	value *VoiceportprofilesPutRequest
	isSet bool
}

func (v NullableVoiceportprofilesPutRequest) Get() *VoiceportprofilesPutRequest {
	return v.value
}

func (v *NullableVoiceportprofilesPutRequest) Set(val *VoiceportprofilesPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVoiceportprofilesPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVoiceportprofilesPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVoiceportprofilesPutRequest(val *VoiceportprofilesPutRequest) *NullableVoiceportprofilesPutRequest {
	return &NullableVoiceportprofilesPutRequest{value: val, isSet: true}
}

func (v NullableVoiceportprofilesPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVoiceportprofilesPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


