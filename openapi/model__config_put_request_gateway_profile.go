/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConfigPutRequestGatewayProfile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigPutRequestGatewayProfile{}

// ConfigPutRequestGatewayProfile struct for ConfigPutRequestGatewayProfile
type ConfigPutRequestGatewayProfile struct {
	GatewayProfileName *ConfigPutRequestGatewayProfileGatewayProfileName `json:"gateway_profile_name,omitempty"`
}

// NewConfigPutRequestGatewayProfile instantiates a new ConfigPutRequestGatewayProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigPutRequestGatewayProfile() *ConfigPutRequestGatewayProfile {
	this := ConfigPutRequestGatewayProfile{}
	return &this
}

// NewConfigPutRequestGatewayProfileWithDefaults instantiates a new ConfigPutRequestGatewayProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigPutRequestGatewayProfileWithDefaults() *ConfigPutRequestGatewayProfile {
	this := ConfigPutRequestGatewayProfile{}
	return &this
}

// GetGatewayProfileName returns the GatewayProfileName field value if set, zero value otherwise.
func (o *ConfigPutRequestGatewayProfile) GetGatewayProfileName() ConfigPutRequestGatewayProfileGatewayProfileName {
	if o == nil || IsNil(o.GatewayProfileName) {
		var ret ConfigPutRequestGatewayProfileGatewayProfileName
		return ret
	}
	return *o.GatewayProfileName
}

// GetGatewayProfileNameOk returns a tuple with the GatewayProfileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestGatewayProfile) GetGatewayProfileNameOk() (*ConfigPutRequestGatewayProfileGatewayProfileName, bool) {
	if o == nil || IsNil(o.GatewayProfileName) {
		return nil, false
	}
	return o.GatewayProfileName, true
}

// HasGatewayProfileName returns a boolean if a field has been set.
func (o *ConfigPutRequestGatewayProfile) HasGatewayProfileName() bool {
	if o != nil && !IsNil(o.GatewayProfileName) {
		return true
	}

	return false
}

// SetGatewayProfileName gets a reference to the given ConfigPutRequestGatewayProfileGatewayProfileName and assigns it to the GatewayProfileName field.
func (o *ConfigPutRequestGatewayProfile) SetGatewayProfileName(v ConfigPutRequestGatewayProfileGatewayProfileName) {
	o.GatewayProfileName = &v
}

func (o ConfigPutRequestGatewayProfile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigPutRequestGatewayProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GatewayProfileName) {
		toSerialize["gateway_profile_name"] = o.GatewayProfileName
	}
	return toSerialize, nil
}

type NullableConfigPutRequestGatewayProfile struct {
	value *ConfigPutRequestGatewayProfile
	isSet bool
}

func (v NullableConfigPutRequestGatewayProfile) Get() *ConfigPutRequestGatewayProfile {
	return v.value
}

func (v *NullableConfigPutRequestGatewayProfile) Set(val *ConfigPutRequestGatewayProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigPutRequestGatewayProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigPutRequestGatewayProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigPutRequestGatewayProfile(val *ConfigPutRequestGatewayProfile) *NullableConfigPutRequestGatewayProfile {
	return &NullableConfigPutRequestGatewayProfile{value: val, isSet: true}
}

func (v NullableConfigPutRequestGatewayProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigPutRequestGatewayProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


