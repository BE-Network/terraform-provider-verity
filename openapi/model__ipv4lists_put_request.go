/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Ipv4listsPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Ipv4listsPutRequest{}

// Ipv4listsPutRequest struct for Ipv4listsPutRequest
type Ipv4listsPutRequest struct {
	Ipv4ListFilter *map[string]Ipv4listsPutRequestIpv4ListFilterValue `json:"ipv4_list_filter,omitempty"`
}

// NewIpv4listsPutRequest instantiates a new Ipv4listsPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpv4listsPutRequest() *Ipv4listsPutRequest {
	this := Ipv4listsPutRequest{}
	return &this
}

// NewIpv4listsPutRequestWithDefaults instantiates a new Ipv4listsPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpv4listsPutRequestWithDefaults() *Ipv4listsPutRequest {
	this := Ipv4listsPutRequest{}
	return &this
}

// GetIpv4ListFilter returns the Ipv4ListFilter field value if set, zero value otherwise.
func (o *Ipv4listsPutRequest) GetIpv4ListFilter() map[string]Ipv4listsPutRequestIpv4ListFilterValue {
	if o == nil || IsNil(o.Ipv4ListFilter) {
		var ret map[string]Ipv4listsPutRequestIpv4ListFilterValue
		return ret
	}
	return *o.Ipv4ListFilter
}

// GetIpv4ListFilterOk returns a tuple with the Ipv4ListFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ipv4listsPutRequest) GetIpv4ListFilterOk() (*map[string]Ipv4listsPutRequestIpv4ListFilterValue, bool) {
	if o == nil || IsNil(o.Ipv4ListFilter) {
		return nil, false
	}
	return o.Ipv4ListFilter, true
}

// HasIpv4ListFilter returns a boolean if a field has been set.
func (o *Ipv4listsPutRequest) HasIpv4ListFilter() bool {
	if o != nil && !IsNil(o.Ipv4ListFilter) {
		return true
	}

	return false
}

// SetIpv4ListFilter gets a reference to the given map[string]Ipv4listsPutRequestIpv4ListFilterValue and assigns it to the Ipv4ListFilter field.
func (o *Ipv4listsPutRequest) SetIpv4ListFilter(v map[string]Ipv4listsPutRequestIpv4ListFilterValue) {
	o.Ipv4ListFilter = &v
}

func (o Ipv4listsPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Ipv4listsPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ipv4ListFilter) {
		toSerialize["ipv4_list_filter"] = o.Ipv4ListFilter
	}
	return toSerialize, nil
}

type NullableIpv4listsPutRequest struct {
	value *Ipv4listsPutRequest
	isSet bool
}

func (v NullableIpv4listsPutRequest) Get() *Ipv4listsPutRequest {
	return v.value
}

func (v *NullableIpv4listsPutRequest) Set(val *Ipv4listsPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIpv4listsPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIpv4listsPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpv4listsPutRequest(val *Ipv4listsPutRequest) *NullableIpv4listsPutRequest {
	return &NullableIpv4listsPutRequest{value: val, isSet: true}
}

func (v NullableIpv4listsPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpv4listsPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


