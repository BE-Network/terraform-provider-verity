/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConfigPutRequestAsPathAccessList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigPutRequestAsPathAccessList{}

// ConfigPutRequestAsPathAccessList struct for ConfigPutRequestAsPathAccessList
type ConfigPutRequestAsPathAccessList struct {
	AsPathAccessListName *ConfigPutRequestAsPathAccessListAsPathAccessListName `json:"as_path_access_list_name,omitempty"`
}

// NewConfigPutRequestAsPathAccessList instantiates a new ConfigPutRequestAsPathAccessList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigPutRequestAsPathAccessList() *ConfigPutRequestAsPathAccessList {
	this := ConfigPutRequestAsPathAccessList{}
	return &this
}

// NewConfigPutRequestAsPathAccessListWithDefaults instantiates a new ConfigPutRequestAsPathAccessList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigPutRequestAsPathAccessListWithDefaults() *ConfigPutRequestAsPathAccessList {
	this := ConfigPutRequestAsPathAccessList{}
	return &this
}

// GetAsPathAccessListName returns the AsPathAccessListName field value if set, zero value otherwise.
func (o *ConfigPutRequestAsPathAccessList) GetAsPathAccessListName() ConfigPutRequestAsPathAccessListAsPathAccessListName {
	if o == nil || IsNil(o.AsPathAccessListName) {
		var ret ConfigPutRequestAsPathAccessListAsPathAccessListName
		return ret
	}
	return *o.AsPathAccessListName
}

// GetAsPathAccessListNameOk returns a tuple with the AsPathAccessListName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestAsPathAccessList) GetAsPathAccessListNameOk() (*ConfigPutRequestAsPathAccessListAsPathAccessListName, bool) {
	if o == nil || IsNil(o.AsPathAccessListName) {
		return nil, false
	}
	return o.AsPathAccessListName, true
}

// HasAsPathAccessListName returns a boolean if a field has been set.
func (o *ConfigPutRequestAsPathAccessList) HasAsPathAccessListName() bool {
	if o != nil && !IsNil(o.AsPathAccessListName) {
		return true
	}

	return false
}

// SetAsPathAccessListName gets a reference to the given ConfigPutRequestAsPathAccessListAsPathAccessListName and assigns it to the AsPathAccessListName field.
func (o *ConfigPutRequestAsPathAccessList) SetAsPathAccessListName(v ConfigPutRequestAsPathAccessListAsPathAccessListName) {
	o.AsPathAccessListName = &v
}

func (o ConfigPutRequestAsPathAccessList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigPutRequestAsPathAccessList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AsPathAccessListName) {
		toSerialize["as_path_access_list_name"] = o.AsPathAccessListName
	}
	return toSerialize, nil
}

type NullableConfigPutRequestAsPathAccessList struct {
	value *ConfigPutRequestAsPathAccessList
	isSet bool
}

func (v NullableConfigPutRequestAsPathAccessList) Get() *ConfigPutRequestAsPathAccessList {
	return v.value
}

func (v *NullableConfigPutRequestAsPathAccessList) Set(val *ConfigPutRequestAsPathAccessList) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigPutRequestAsPathAccessList) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigPutRequestAsPathAccessList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigPutRequestAsPathAccessList(val *ConfigPutRequestAsPathAccessList) *NullableConfigPutRequestAsPathAccessList {
	return &NullableConfigPutRequestAsPathAccessList{value: val, isSet: true}
}

func (v NullableConfigPutRequestAsPathAccessList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigPutRequestAsPathAccessList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


