/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AclsPutRequestIpFilterValueObjectProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AclsPutRequestIpFilterValueObjectProperties{}

// AclsPutRequestIpFilterValueObjectProperties struct for AclsPutRequestIpFilterValueObjectProperties
type AclsPutRequestIpFilterValueObjectProperties struct {
	// User Notes.
	Notes *string `json:"notes,omitempty"`
}

// NewAclsPutRequestIpFilterValueObjectProperties instantiates a new AclsPutRequestIpFilterValueObjectProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAclsPutRequestIpFilterValueObjectProperties() *AclsPutRequestIpFilterValueObjectProperties {
	this := AclsPutRequestIpFilterValueObjectProperties{}
	var notes string = ""
	this.Notes = &notes
	return &this
}

// NewAclsPutRequestIpFilterValueObjectPropertiesWithDefaults instantiates a new AclsPutRequestIpFilterValueObjectProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAclsPutRequestIpFilterValueObjectPropertiesWithDefaults() *AclsPutRequestIpFilterValueObjectProperties {
	this := AclsPutRequestIpFilterValueObjectProperties{}
	var notes string = ""
	this.Notes = &notes
	return &this
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *AclsPutRequestIpFilterValueObjectProperties) GetNotes() string {
	if o == nil || IsNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AclsPutRequestIpFilterValueObjectProperties) GetNotesOk() (*string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *AclsPutRequestIpFilterValueObjectProperties) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *AclsPutRequestIpFilterValueObjectProperties) SetNotes(v string) {
	o.Notes = &v
}

func (o AclsPutRequestIpFilterValueObjectProperties) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AclsPutRequestIpFilterValueObjectProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	return toSerialize, nil
}

type NullableAclsPutRequestIpFilterValueObjectProperties struct {
	value *AclsPutRequestIpFilterValueObjectProperties
	isSet bool
}

func (v NullableAclsPutRequestIpFilterValueObjectProperties) Get() *AclsPutRequestIpFilterValueObjectProperties {
	return v.value
}

func (v *NullableAclsPutRequestIpFilterValueObjectProperties) Set(val *AclsPutRequestIpFilterValueObjectProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableAclsPutRequestIpFilterValueObjectProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableAclsPutRequestIpFilterValueObjectProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAclsPutRequestIpFilterValueObjectProperties(val *AclsPutRequestIpFilterValueObjectProperties) *NullableAclsPutRequestIpFilterValueObjectProperties {
	return &NullableAclsPutRequestIpFilterValueObjectProperties{value: val, isSet: true}
}

func (v NullableAclsPutRequestIpFilterValueObjectProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAclsPutRequestIpFilterValueObjectProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


