/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RoutemapsPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutemapsPutRequest{}

// RoutemapsPutRequest struct for RoutemapsPutRequest
type RoutemapsPutRequest struct {
	RouteMap *map[string]RoutemapsPutRequestRouteMapValue `json:"route_map,omitempty"`
}

// NewRoutemapsPutRequest instantiates a new RoutemapsPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutemapsPutRequest() *RoutemapsPutRequest {
	this := RoutemapsPutRequest{}
	return &this
}

// NewRoutemapsPutRequestWithDefaults instantiates a new RoutemapsPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutemapsPutRequestWithDefaults() *RoutemapsPutRequest {
	this := RoutemapsPutRequest{}
	return &this
}

// GetRouteMap returns the RouteMap field value if set, zero value otherwise.
func (o *RoutemapsPutRequest) GetRouteMap() map[string]RoutemapsPutRequestRouteMapValue {
	if o == nil || IsNil(o.RouteMap) {
		var ret map[string]RoutemapsPutRequestRouteMapValue
		return ret
	}
	return *o.RouteMap
}

// GetRouteMapOk returns a tuple with the RouteMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutemapsPutRequest) GetRouteMapOk() (*map[string]RoutemapsPutRequestRouteMapValue, bool) {
	if o == nil || IsNil(o.RouteMap) {
		return nil, false
	}
	return o.RouteMap, true
}

// HasRouteMap returns a boolean if a field has been set.
func (o *RoutemapsPutRequest) HasRouteMap() bool {
	if o != nil && !IsNil(o.RouteMap) {
		return true
	}

	return false
}

// SetRouteMap gets a reference to the given map[string]RoutemapsPutRequestRouteMapValue and assigns it to the RouteMap field.
func (o *RoutemapsPutRequest) SetRouteMap(v map[string]RoutemapsPutRequestRouteMapValue) {
	o.RouteMap = &v
}

func (o RoutemapsPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutemapsPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RouteMap) {
		toSerialize["route_map"] = o.RouteMap
	}
	return toSerialize, nil
}

type NullableRoutemapsPutRequest struct {
	value *RoutemapsPutRequest
	isSet bool
}

func (v NullableRoutemapsPutRequest) Get() *RoutemapsPutRequest {
	return v.value
}

func (v *NullableRoutemapsPutRequest) Set(val *RoutemapsPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutemapsPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutemapsPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutemapsPutRequest(val *RoutemapsPutRequest) *NullableRoutemapsPutRequest {
	return &NullableRoutemapsPutRequest{value: val, isSet: true}
}

func (v NullableRoutemapsPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutemapsPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


