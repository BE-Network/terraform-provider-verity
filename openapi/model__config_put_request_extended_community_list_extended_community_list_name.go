/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConfigPutRequestExtendedCommunityListExtendedCommunityListName type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigPutRequestExtendedCommunityListExtendedCommunityListName{}

// ConfigPutRequestExtendedCommunityListExtendedCommunityListName struct for ConfigPutRequestExtendedCommunityListExtendedCommunityListName
type ConfigPutRequestExtendedCommunityListExtendedCommunityListName struct {
	// Object Name. Must be unique.
	Name *string `json:"name,omitempty"`
	// Enable object.
	Enable *bool `json:"enable,omitempty"`
	// Action upon match of Community Strings.
	PermitDeny *string `json:"permit_deny,omitempty"`
	// BGP does not advertise any or all routes that do not match the Community String
	AnyAll *string `json:"any_all,omitempty"`
	// Used Community String or Expanded Expression
	StandardExpanded *string `json:"standard_expanded,omitempty"`
	Lists []ConfigPutRequestExtendedCommunityListExtendedCommunityListNameListsInner `json:"lists,omitempty"`
	ObjectProperties *ConfigPutRequestIpv6FilterIpv6FilterNameObjectProperties `json:"object_properties,omitempty"`
}

// NewConfigPutRequestExtendedCommunityListExtendedCommunityListName instantiates a new ConfigPutRequestExtendedCommunityListExtendedCommunityListName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigPutRequestExtendedCommunityListExtendedCommunityListName() *ConfigPutRequestExtendedCommunityListExtendedCommunityListName {
	this := ConfigPutRequestExtendedCommunityListExtendedCommunityListName{}
	var name string = ""
	this.Name = &name
	var enable bool = false
	this.Enable = &enable
	var permitDeny string = "permit"
	this.PermitDeny = &permitDeny
	var anyAll string = "any"
	this.AnyAll = &anyAll
	var standardExpanded string = "standard"
	this.StandardExpanded = &standardExpanded
	return &this
}

// NewConfigPutRequestExtendedCommunityListExtendedCommunityListNameWithDefaults instantiates a new ConfigPutRequestExtendedCommunityListExtendedCommunityListName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigPutRequestExtendedCommunityListExtendedCommunityListNameWithDefaults() *ConfigPutRequestExtendedCommunityListExtendedCommunityListName {
	this := ConfigPutRequestExtendedCommunityListExtendedCommunityListName{}
	var name string = ""
	this.Name = &name
	var enable bool = false
	this.Enable = &enable
	var permitDeny string = "permit"
	this.PermitDeny = &permitDeny
	var anyAll string = "any"
	this.AnyAll = &anyAll
	var standardExpanded string = "standard"
	this.StandardExpanded = &standardExpanded
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ConfigPutRequestExtendedCommunityListExtendedCommunityListName) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestExtendedCommunityListExtendedCommunityListName) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ConfigPutRequestExtendedCommunityListExtendedCommunityListName) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ConfigPutRequestExtendedCommunityListExtendedCommunityListName) SetName(v string) {
	o.Name = &v
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *ConfigPutRequestExtendedCommunityListExtendedCommunityListName) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestExtendedCommunityListExtendedCommunityListName) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *ConfigPutRequestExtendedCommunityListExtendedCommunityListName) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *ConfigPutRequestExtendedCommunityListExtendedCommunityListName) SetEnable(v bool) {
	o.Enable = &v
}

// GetPermitDeny returns the PermitDeny field value if set, zero value otherwise.
func (o *ConfigPutRequestExtendedCommunityListExtendedCommunityListName) GetPermitDeny() string {
	if o == nil || IsNil(o.PermitDeny) {
		var ret string
		return ret
	}
	return *o.PermitDeny
}

// GetPermitDenyOk returns a tuple with the PermitDeny field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestExtendedCommunityListExtendedCommunityListName) GetPermitDenyOk() (*string, bool) {
	if o == nil || IsNil(o.PermitDeny) {
		return nil, false
	}
	return o.PermitDeny, true
}

// HasPermitDeny returns a boolean if a field has been set.
func (o *ConfigPutRequestExtendedCommunityListExtendedCommunityListName) HasPermitDeny() bool {
	if o != nil && !IsNil(o.PermitDeny) {
		return true
	}

	return false
}

// SetPermitDeny gets a reference to the given string and assigns it to the PermitDeny field.
func (o *ConfigPutRequestExtendedCommunityListExtendedCommunityListName) SetPermitDeny(v string) {
	o.PermitDeny = &v
}

// GetAnyAll returns the AnyAll field value if set, zero value otherwise.
func (o *ConfigPutRequestExtendedCommunityListExtendedCommunityListName) GetAnyAll() string {
	if o == nil || IsNil(o.AnyAll) {
		var ret string
		return ret
	}
	return *o.AnyAll
}

// GetAnyAllOk returns a tuple with the AnyAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestExtendedCommunityListExtendedCommunityListName) GetAnyAllOk() (*string, bool) {
	if o == nil || IsNil(o.AnyAll) {
		return nil, false
	}
	return o.AnyAll, true
}

// HasAnyAll returns a boolean if a field has been set.
func (o *ConfigPutRequestExtendedCommunityListExtendedCommunityListName) HasAnyAll() bool {
	if o != nil && !IsNil(o.AnyAll) {
		return true
	}

	return false
}

// SetAnyAll gets a reference to the given string and assigns it to the AnyAll field.
func (o *ConfigPutRequestExtendedCommunityListExtendedCommunityListName) SetAnyAll(v string) {
	o.AnyAll = &v
}

// GetStandardExpanded returns the StandardExpanded field value if set, zero value otherwise.
func (o *ConfigPutRequestExtendedCommunityListExtendedCommunityListName) GetStandardExpanded() string {
	if o == nil || IsNil(o.StandardExpanded) {
		var ret string
		return ret
	}
	return *o.StandardExpanded
}

// GetStandardExpandedOk returns a tuple with the StandardExpanded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestExtendedCommunityListExtendedCommunityListName) GetStandardExpandedOk() (*string, bool) {
	if o == nil || IsNil(o.StandardExpanded) {
		return nil, false
	}
	return o.StandardExpanded, true
}

// HasStandardExpanded returns a boolean if a field has been set.
func (o *ConfigPutRequestExtendedCommunityListExtendedCommunityListName) HasStandardExpanded() bool {
	if o != nil && !IsNil(o.StandardExpanded) {
		return true
	}

	return false
}

// SetStandardExpanded gets a reference to the given string and assigns it to the StandardExpanded field.
func (o *ConfigPutRequestExtendedCommunityListExtendedCommunityListName) SetStandardExpanded(v string) {
	o.StandardExpanded = &v
}

// GetLists returns the Lists field value if set, zero value otherwise.
func (o *ConfigPutRequestExtendedCommunityListExtendedCommunityListName) GetLists() []ConfigPutRequestExtendedCommunityListExtendedCommunityListNameListsInner {
	if o == nil || IsNil(o.Lists) {
		var ret []ConfigPutRequestExtendedCommunityListExtendedCommunityListNameListsInner
		return ret
	}
	return o.Lists
}

// GetListsOk returns a tuple with the Lists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestExtendedCommunityListExtendedCommunityListName) GetListsOk() ([]ConfigPutRequestExtendedCommunityListExtendedCommunityListNameListsInner, bool) {
	if o == nil || IsNil(o.Lists) {
		return nil, false
	}
	return o.Lists, true
}

// HasLists returns a boolean if a field has been set.
func (o *ConfigPutRequestExtendedCommunityListExtendedCommunityListName) HasLists() bool {
	if o != nil && !IsNil(o.Lists) {
		return true
	}

	return false
}

// SetLists gets a reference to the given []ConfigPutRequestExtendedCommunityListExtendedCommunityListNameListsInner and assigns it to the Lists field.
func (o *ConfigPutRequestExtendedCommunityListExtendedCommunityListName) SetLists(v []ConfigPutRequestExtendedCommunityListExtendedCommunityListNameListsInner) {
	o.Lists = v
}

// GetObjectProperties returns the ObjectProperties field value if set, zero value otherwise.
func (o *ConfigPutRequestExtendedCommunityListExtendedCommunityListName) GetObjectProperties() ConfigPutRequestIpv6FilterIpv6FilterNameObjectProperties {
	if o == nil || IsNil(o.ObjectProperties) {
		var ret ConfigPutRequestIpv6FilterIpv6FilterNameObjectProperties
		return ret
	}
	return *o.ObjectProperties
}

// GetObjectPropertiesOk returns a tuple with the ObjectProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestExtendedCommunityListExtendedCommunityListName) GetObjectPropertiesOk() (*ConfigPutRequestIpv6FilterIpv6FilterNameObjectProperties, bool) {
	if o == nil || IsNil(o.ObjectProperties) {
		return nil, false
	}
	return o.ObjectProperties, true
}

// HasObjectProperties returns a boolean if a field has been set.
func (o *ConfigPutRequestExtendedCommunityListExtendedCommunityListName) HasObjectProperties() bool {
	if o != nil && !IsNil(o.ObjectProperties) {
		return true
	}

	return false
}

// SetObjectProperties gets a reference to the given ConfigPutRequestIpv6FilterIpv6FilterNameObjectProperties and assigns it to the ObjectProperties field.
func (o *ConfigPutRequestExtendedCommunityListExtendedCommunityListName) SetObjectProperties(v ConfigPutRequestIpv6FilterIpv6FilterNameObjectProperties) {
	o.ObjectProperties = &v
}

func (o ConfigPutRequestExtendedCommunityListExtendedCommunityListName) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigPutRequestExtendedCommunityListExtendedCommunityListName) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.PermitDeny) {
		toSerialize["permit_deny"] = o.PermitDeny
	}
	if !IsNil(o.AnyAll) {
		toSerialize["any_all"] = o.AnyAll
	}
	if !IsNil(o.StandardExpanded) {
		toSerialize["standard_expanded"] = o.StandardExpanded
	}
	if !IsNil(o.Lists) {
		toSerialize["lists"] = o.Lists
	}
	if !IsNil(o.ObjectProperties) {
		toSerialize["object_properties"] = o.ObjectProperties
	}
	return toSerialize, nil
}

type NullableConfigPutRequestExtendedCommunityListExtendedCommunityListName struct {
	value *ConfigPutRequestExtendedCommunityListExtendedCommunityListName
	isSet bool
}

func (v NullableConfigPutRequestExtendedCommunityListExtendedCommunityListName) Get() *ConfigPutRequestExtendedCommunityListExtendedCommunityListName {
	return v.value
}

func (v *NullableConfigPutRequestExtendedCommunityListExtendedCommunityListName) Set(val *ConfigPutRequestExtendedCommunityListExtendedCommunityListName) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigPutRequestExtendedCommunityListExtendedCommunityListName) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigPutRequestExtendedCommunityListExtendedCommunityListName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigPutRequestExtendedCommunityListExtendedCommunityListName(val *ConfigPutRequestExtendedCommunityListExtendedCommunityListName) *NullableConfigPutRequestExtendedCommunityListExtendedCommunityListName {
	return &NullableConfigPutRequestExtendedCommunityListExtendedCommunityListName{value: val, isSet: true}
}

func (v NullableConfigPutRequestExtendedCommunityListExtendedCommunityListName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigPutRequestExtendedCommunityListExtendedCommunityListName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


