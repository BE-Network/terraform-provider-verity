/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConfigPutRequestTenantTenantNameRouteTenantsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigPutRequestTenantTenantNameRouteTenantsInner{}

// ConfigPutRequestTenantTenantNameRouteTenantsInner struct for ConfigPutRequestTenantTenantNameRouteTenantsInner
type ConfigPutRequestTenantTenantNameRouteTenantsInner struct {
	// Enable
	Enable *bool `json:"enable,omitempty"`
	// Tenant
	Tenant *string `json:"tenant,omitempty"`
	// The index identifying the object. Zero if you want to add an object to the list.
	Index *int32 `json:"index,omitempty"`
}

// NewConfigPutRequestTenantTenantNameRouteTenantsInner instantiates a new ConfigPutRequestTenantTenantNameRouteTenantsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigPutRequestTenantTenantNameRouteTenantsInner() *ConfigPutRequestTenantTenantNameRouteTenantsInner {
	this := ConfigPutRequestTenantTenantNameRouteTenantsInner{}
	var enable bool = false
	this.Enable = &enable
	var tenant string = ""
	this.Tenant = &tenant
	return &this
}

// NewConfigPutRequestTenantTenantNameRouteTenantsInnerWithDefaults instantiates a new ConfigPutRequestTenantTenantNameRouteTenantsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigPutRequestTenantTenantNameRouteTenantsInnerWithDefaults() *ConfigPutRequestTenantTenantNameRouteTenantsInner {
	this := ConfigPutRequestTenantTenantNameRouteTenantsInner{}
	var enable bool = false
	this.Enable = &enable
	var tenant string = ""
	this.Tenant = &tenant
	return &this
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *ConfigPutRequestTenantTenantNameRouteTenantsInner) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestTenantTenantNameRouteTenantsInner) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *ConfigPutRequestTenantTenantNameRouteTenantsInner) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *ConfigPutRequestTenantTenantNameRouteTenantsInner) SetEnable(v bool) {
	o.Enable = &v
}

// GetTenant returns the Tenant field value if set, zero value otherwise.
func (o *ConfigPutRequestTenantTenantNameRouteTenantsInner) GetTenant() string {
	if o == nil || IsNil(o.Tenant) {
		var ret string
		return ret
	}
	return *o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestTenantTenantNameRouteTenantsInner) GetTenantOk() (*string, bool) {
	if o == nil || IsNil(o.Tenant) {
		return nil, false
	}
	return o.Tenant, true
}

// HasTenant returns a boolean if a field has been set.
func (o *ConfigPutRequestTenantTenantNameRouteTenantsInner) HasTenant() bool {
	if o != nil && !IsNil(o.Tenant) {
		return true
	}

	return false
}

// SetTenant gets a reference to the given string and assigns it to the Tenant field.
func (o *ConfigPutRequestTenantTenantNameRouteTenantsInner) SetTenant(v string) {
	o.Tenant = &v
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *ConfigPutRequestTenantTenantNameRouteTenantsInner) GetIndex() int32 {
	if o == nil || IsNil(o.Index) {
		var ret int32
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPutRequestTenantTenantNameRouteTenantsInner) GetIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.Index) {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *ConfigPutRequestTenantTenantNameRouteTenantsInner) HasIndex() bool {
	if o != nil && !IsNil(o.Index) {
		return true
	}

	return false
}

// SetIndex gets a reference to the given int32 and assigns it to the Index field.
func (o *ConfigPutRequestTenantTenantNameRouteTenantsInner) SetIndex(v int32) {
	o.Index = &v
}

func (o ConfigPutRequestTenantTenantNameRouteTenantsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigPutRequestTenantTenantNameRouteTenantsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.Tenant) {
		toSerialize["tenant"] = o.Tenant
	}
	if !IsNil(o.Index) {
		toSerialize["index"] = o.Index
	}
	return toSerialize, nil
}

type NullableConfigPutRequestTenantTenantNameRouteTenantsInner struct {
	value *ConfigPutRequestTenantTenantNameRouteTenantsInner
	isSet bool
}

func (v NullableConfigPutRequestTenantTenantNameRouteTenantsInner) Get() *ConfigPutRequestTenantTenantNameRouteTenantsInner {
	return v.value
}

func (v *NullableConfigPutRequestTenantTenantNameRouteTenantsInner) Set(val *ConfigPutRequestTenantTenantNameRouteTenantsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigPutRequestTenantTenantNameRouteTenantsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigPutRequestTenantTenantNameRouteTenantsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigPutRequestTenantTenantNameRouteTenantsInner(val *ConfigPutRequestTenantTenantNameRouteTenantsInner) *NullableConfigPutRequestTenantTenantNameRouteTenantsInner {
	return &NullableConfigPutRequestTenantTenantNameRouteTenantsInner{value: val, isSet: true}
}

func (v NullableConfigPutRequestTenantTenantNameRouteTenantsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigPutRequestTenantTenantNameRouteTenantsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


