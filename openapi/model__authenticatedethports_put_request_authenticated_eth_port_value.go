/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AuthenticatedethportsPutRequestAuthenticatedEthPortValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthenticatedethportsPutRequestAuthenticatedEthPortValue{}

// AuthenticatedethportsPutRequestAuthenticatedEthPortValue struct for AuthenticatedethportsPutRequestAuthenticatedEthPortValue
type AuthenticatedethportsPutRequestAuthenticatedEthPortValue struct {
	// Object Name. Must be unique.
	Name *string `json:"name,omitempty"`
	// Enable object.
	Enable *bool `json:"enable,omitempty"`
	// Choose connection mode for Authenticated Eth-Port<br><b>Port Mode</b>  Standard mode. The last authenticated clients VLAN access is applied.<br><b>Single Client Mode</b>  MAC filtered client. Only the authenticated clients traffic can pass. No traffic from a second client may pass. Only when the first client deauthenticates can a new authentication take place.<br><b>Multiple Client Mode</b>  MAC filtered clients. Only authenticated client traffic can pass. Multiple clients can authenticate and gain access to individual service offerings. MAC-based authentication is not supported.
	ConnectionMode *string `json:"connection_mode,omitempty"`
	// Amount of time in seconds before 802.1X requires reauthorization of an active session. \"0\" disables reauthorization (not recommended)
	ReauthorizationPeriodSec *int32 `json:"reauthorization_period_sec,omitempty"`
	// Enables 802.1x to capture the connected MAC address and send it tothe Radius Server instead of requesting credentials.  Useful for printers and similar devices
	AllowMacBasedAuthentication *bool `json:"allow_mac_based_authentication,omitempty"`
	// Amount of time in seconds 802.1X authentication is allowed to run before MAC-based authentication has begun
	MacAuthenticationHoldoffSec *int32 `json:"mac_authentication_holdoff_sec,omitempty"`
	// Trusted Ports do not participate in IP Source Guard, Dynamic ARP Inspection, nor DHCP Snooping, meaning all packets are forwarded without any checks.
	TrustedPort *bool `json:"trusted_port,omitempty"`
	EthPorts []AuthenticatedethportsPutRequestAuthenticatedEthPortValueEthPortsInner `json:"eth_ports,omitempty"`
	ObjectProperties *AuthenticatedethportsPutRequestAuthenticatedEthPortValueObjectProperties `json:"object_properties,omitempty"`
}

// NewAuthenticatedethportsPutRequestAuthenticatedEthPortValue instantiates a new AuthenticatedethportsPutRequestAuthenticatedEthPortValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthenticatedethportsPutRequestAuthenticatedEthPortValue() *AuthenticatedethportsPutRequestAuthenticatedEthPortValue {
	this := AuthenticatedethportsPutRequestAuthenticatedEthPortValue{}
	var name string = ""
	this.Name = &name
	var enable bool = false
	this.Enable = &enable
	var connectionMode string = "PortMode"
	this.ConnectionMode = &connectionMode
	var reauthorizationPeriodSec int32 = 3600
	this.ReauthorizationPeriodSec = &reauthorizationPeriodSec
	var allowMacBasedAuthentication bool = false
	this.AllowMacBasedAuthentication = &allowMacBasedAuthentication
	var macAuthenticationHoldoffSec int32 = 60
	this.MacAuthenticationHoldoffSec = &macAuthenticationHoldoffSec
	var trustedPort bool = false
	this.TrustedPort = &trustedPort
	return &this
}

// NewAuthenticatedethportsPutRequestAuthenticatedEthPortValueWithDefaults instantiates a new AuthenticatedethportsPutRequestAuthenticatedEthPortValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthenticatedethportsPutRequestAuthenticatedEthPortValueWithDefaults() *AuthenticatedethportsPutRequestAuthenticatedEthPortValue {
	this := AuthenticatedethportsPutRequestAuthenticatedEthPortValue{}
	var name string = ""
	this.Name = &name
	var enable bool = false
	this.Enable = &enable
	var connectionMode string = "PortMode"
	this.ConnectionMode = &connectionMode
	var reauthorizationPeriodSec int32 = 3600
	this.ReauthorizationPeriodSec = &reauthorizationPeriodSec
	var allowMacBasedAuthentication bool = false
	this.AllowMacBasedAuthentication = &allowMacBasedAuthentication
	var macAuthenticationHoldoffSec int32 = 60
	this.MacAuthenticationHoldoffSec = &macAuthenticationHoldoffSec
	var trustedPort bool = false
	this.TrustedPort = &trustedPort
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) SetName(v string) {
	o.Name = &v
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) GetEnable() bool {
	if o == nil || IsNil(o.Enable) {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) GetEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) SetEnable(v bool) {
	o.Enable = &v
}

// GetConnectionMode returns the ConnectionMode field value if set, zero value otherwise.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) GetConnectionMode() string {
	if o == nil || IsNil(o.ConnectionMode) {
		var ret string
		return ret
	}
	return *o.ConnectionMode
}

// GetConnectionModeOk returns a tuple with the ConnectionMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) GetConnectionModeOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionMode) {
		return nil, false
	}
	return o.ConnectionMode, true
}

// HasConnectionMode returns a boolean if a field has been set.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) HasConnectionMode() bool {
	if o != nil && !IsNil(o.ConnectionMode) {
		return true
	}

	return false
}

// SetConnectionMode gets a reference to the given string and assigns it to the ConnectionMode field.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) SetConnectionMode(v string) {
	o.ConnectionMode = &v
}

// GetReauthorizationPeriodSec returns the ReauthorizationPeriodSec field value if set, zero value otherwise.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) GetReauthorizationPeriodSec() int32 {
	if o == nil || IsNil(o.ReauthorizationPeriodSec) {
		var ret int32
		return ret
	}
	return *o.ReauthorizationPeriodSec
}

// GetReauthorizationPeriodSecOk returns a tuple with the ReauthorizationPeriodSec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) GetReauthorizationPeriodSecOk() (*int32, bool) {
	if o == nil || IsNil(o.ReauthorizationPeriodSec) {
		return nil, false
	}
	return o.ReauthorizationPeriodSec, true
}

// HasReauthorizationPeriodSec returns a boolean if a field has been set.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) HasReauthorizationPeriodSec() bool {
	if o != nil && !IsNil(o.ReauthorizationPeriodSec) {
		return true
	}

	return false
}

// SetReauthorizationPeriodSec gets a reference to the given int32 and assigns it to the ReauthorizationPeriodSec field.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) SetReauthorizationPeriodSec(v int32) {
	o.ReauthorizationPeriodSec = &v
}

// GetAllowMacBasedAuthentication returns the AllowMacBasedAuthentication field value if set, zero value otherwise.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) GetAllowMacBasedAuthentication() bool {
	if o == nil || IsNil(o.AllowMacBasedAuthentication) {
		var ret bool
		return ret
	}
	return *o.AllowMacBasedAuthentication
}

// GetAllowMacBasedAuthenticationOk returns a tuple with the AllowMacBasedAuthentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) GetAllowMacBasedAuthenticationOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowMacBasedAuthentication) {
		return nil, false
	}
	return o.AllowMacBasedAuthentication, true
}

// HasAllowMacBasedAuthentication returns a boolean if a field has been set.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) HasAllowMacBasedAuthentication() bool {
	if o != nil && !IsNil(o.AllowMacBasedAuthentication) {
		return true
	}

	return false
}

// SetAllowMacBasedAuthentication gets a reference to the given bool and assigns it to the AllowMacBasedAuthentication field.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) SetAllowMacBasedAuthentication(v bool) {
	o.AllowMacBasedAuthentication = &v
}

// GetMacAuthenticationHoldoffSec returns the MacAuthenticationHoldoffSec field value if set, zero value otherwise.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) GetMacAuthenticationHoldoffSec() int32 {
	if o == nil || IsNil(o.MacAuthenticationHoldoffSec) {
		var ret int32
		return ret
	}
	return *o.MacAuthenticationHoldoffSec
}

// GetMacAuthenticationHoldoffSecOk returns a tuple with the MacAuthenticationHoldoffSec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) GetMacAuthenticationHoldoffSecOk() (*int32, bool) {
	if o == nil || IsNil(o.MacAuthenticationHoldoffSec) {
		return nil, false
	}
	return o.MacAuthenticationHoldoffSec, true
}

// HasMacAuthenticationHoldoffSec returns a boolean if a field has been set.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) HasMacAuthenticationHoldoffSec() bool {
	if o != nil && !IsNil(o.MacAuthenticationHoldoffSec) {
		return true
	}

	return false
}

// SetMacAuthenticationHoldoffSec gets a reference to the given int32 and assigns it to the MacAuthenticationHoldoffSec field.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) SetMacAuthenticationHoldoffSec(v int32) {
	o.MacAuthenticationHoldoffSec = &v
}

// GetTrustedPort returns the TrustedPort field value if set, zero value otherwise.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) GetTrustedPort() bool {
	if o == nil || IsNil(o.TrustedPort) {
		var ret bool
		return ret
	}
	return *o.TrustedPort
}

// GetTrustedPortOk returns a tuple with the TrustedPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) GetTrustedPortOk() (*bool, bool) {
	if o == nil || IsNil(o.TrustedPort) {
		return nil, false
	}
	return o.TrustedPort, true
}

// HasTrustedPort returns a boolean if a field has been set.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) HasTrustedPort() bool {
	if o != nil && !IsNil(o.TrustedPort) {
		return true
	}

	return false
}

// SetTrustedPort gets a reference to the given bool and assigns it to the TrustedPort field.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) SetTrustedPort(v bool) {
	o.TrustedPort = &v
}

// GetEthPorts returns the EthPorts field value if set, zero value otherwise.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) GetEthPorts() []AuthenticatedethportsPutRequestAuthenticatedEthPortValueEthPortsInner {
	if o == nil || IsNil(o.EthPorts) {
		var ret []AuthenticatedethportsPutRequestAuthenticatedEthPortValueEthPortsInner
		return ret
	}
	return o.EthPorts
}

// GetEthPortsOk returns a tuple with the EthPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) GetEthPortsOk() ([]AuthenticatedethportsPutRequestAuthenticatedEthPortValueEthPortsInner, bool) {
	if o == nil || IsNil(o.EthPorts) {
		return nil, false
	}
	return o.EthPorts, true
}

// HasEthPorts returns a boolean if a field has been set.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) HasEthPorts() bool {
	if o != nil && !IsNil(o.EthPorts) {
		return true
	}

	return false
}

// SetEthPorts gets a reference to the given []AuthenticatedethportsPutRequestAuthenticatedEthPortValueEthPortsInner and assigns it to the EthPorts field.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) SetEthPorts(v []AuthenticatedethportsPutRequestAuthenticatedEthPortValueEthPortsInner) {
	o.EthPorts = v
}

// GetObjectProperties returns the ObjectProperties field value if set, zero value otherwise.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) GetObjectProperties() AuthenticatedethportsPutRequestAuthenticatedEthPortValueObjectProperties {
	if o == nil || IsNil(o.ObjectProperties) {
		var ret AuthenticatedethportsPutRequestAuthenticatedEthPortValueObjectProperties
		return ret
	}
	return *o.ObjectProperties
}

// GetObjectPropertiesOk returns a tuple with the ObjectProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) GetObjectPropertiesOk() (*AuthenticatedethportsPutRequestAuthenticatedEthPortValueObjectProperties, bool) {
	if o == nil || IsNil(o.ObjectProperties) {
		return nil, false
	}
	return o.ObjectProperties, true
}

// HasObjectProperties returns a boolean if a field has been set.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) HasObjectProperties() bool {
	if o != nil && !IsNil(o.ObjectProperties) {
		return true
	}

	return false
}

// SetObjectProperties gets a reference to the given AuthenticatedethportsPutRequestAuthenticatedEthPortValueObjectProperties and assigns it to the ObjectProperties field.
func (o *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) SetObjectProperties(v AuthenticatedethportsPutRequestAuthenticatedEthPortValueObjectProperties) {
	o.ObjectProperties = &v
}

func (o AuthenticatedethportsPutRequestAuthenticatedEthPortValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthenticatedethportsPutRequestAuthenticatedEthPortValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.ConnectionMode) {
		toSerialize["connection_mode"] = o.ConnectionMode
	}
	if !IsNil(o.ReauthorizationPeriodSec) {
		toSerialize["reauthorization_period_sec"] = o.ReauthorizationPeriodSec
	}
	if !IsNil(o.AllowMacBasedAuthentication) {
		toSerialize["allow_mac_based_authentication"] = o.AllowMacBasedAuthentication
	}
	if !IsNil(o.MacAuthenticationHoldoffSec) {
		toSerialize["mac_authentication_holdoff_sec"] = o.MacAuthenticationHoldoffSec
	}
	if !IsNil(o.TrustedPort) {
		toSerialize["trusted_port"] = o.TrustedPort
	}
	if !IsNil(o.EthPorts) {
		toSerialize["eth_ports"] = o.EthPorts
	}
	if !IsNil(o.ObjectProperties) {
		toSerialize["object_properties"] = o.ObjectProperties
	}
	return toSerialize, nil
}

type NullableAuthenticatedethportsPutRequestAuthenticatedEthPortValue struct {
	value *AuthenticatedethportsPutRequestAuthenticatedEthPortValue
	isSet bool
}

func (v NullableAuthenticatedethportsPutRequestAuthenticatedEthPortValue) Get() *AuthenticatedethportsPutRequestAuthenticatedEthPortValue {
	return v.value
}

func (v *NullableAuthenticatedethportsPutRequestAuthenticatedEthPortValue) Set(val *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticatedethportsPutRequestAuthenticatedEthPortValue) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticatedethportsPutRequestAuthenticatedEthPortValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticatedethportsPutRequestAuthenticatedEthPortValue(val *AuthenticatedethportsPutRequestAuthenticatedEthPortValue) *NullableAuthenticatedethportsPutRequestAuthenticatedEthPortValue {
	return &NullableAuthenticatedethportsPutRequestAuthenticatedEthPortValue{value: val, isSet: true}
}

func (v NullableAuthenticatedethportsPutRequestAuthenticatedEthPortValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthenticatedethportsPutRequestAuthenticatedEthPortValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


