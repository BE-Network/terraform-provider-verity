/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PodsPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PodsPutRequest{}

// PodsPutRequest struct for PodsPutRequest
type PodsPutRequest struct {
	Pod *map[string]PodsPutRequestPodValue `json:"pod,omitempty"`
}

// NewPodsPutRequest instantiates a new PodsPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPodsPutRequest() *PodsPutRequest {
	this := PodsPutRequest{}
	return &this
}

// NewPodsPutRequestWithDefaults instantiates a new PodsPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPodsPutRequestWithDefaults() *PodsPutRequest {
	this := PodsPutRequest{}
	return &this
}

// GetPod returns the Pod field value if set, zero value otherwise.
func (o *PodsPutRequest) GetPod() map[string]PodsPutRequestPodValue {
	if o == nil || IsNil(o.Pod) {
		var ret map[string]PodsPutRequestPodValue
		return ret
	}
	return *o.Pod
}

// GetPodOk returns a tuple with the Pod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PodsPutRequest) GetPodOk() (*map[string]PodsPutRequestPodValue, bool) {
	if o == nil || IsNil(o.Pod) {
		return nil, false
	}
	return o.Pod, true
}

// HasPod returns a boolean if a field has been set.
func (o *PodsPutRequest) HasPod() bool {
	if o != nil && !IsNil(o.Pod) {
		return true
	}

	return false
}

// SetPod gets a reference to the given map[string]PodsPutRequestPodValue and assigns it to the Pod field.
func (o *PodsPutRequest) SetPod(v map[string]PodsPutRequestPodValue) {
	o.Pod = &v
}

func (o PodsPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PodsPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pod) {
		toSerialize["pod"] = o.Pod
	}
	return toSerialize, nil
}

type NullablePodsPutRequest struct {
	value *PodsPutRequest
	isSet bool
}

func (v NullablePodsPutRequest) Get() *PodsPutRequest {
	return v.value
}

func (v *NullablePodsPutRequest) Set(val *PodsPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePodsPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePodsPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePodsPutRequest(val *PodsPutRequest) *NullablePodsPutRequest {
	return &NullablePodsPutRequest{value: val, isSet: true}
}

func (v NullablePodsPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePodsPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


