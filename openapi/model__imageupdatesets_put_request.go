/*
Verity API

This application demonstrates the usage of Verity API. 

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ImageupdatesetsPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImageupdatesetsPutRequest{}

// ImageupdatesetsPutRequest struct for ImageupdatesetsPutRequest
type ImageupdatesetsPutRequest struct {
	ImageUpdateSets *map[string]ImageupdatesetsPutRequestImageUpdateSetsValue `json:"image_update_sets,omitempty"`
}

// NewImageupdatesetsPutRequest instantiates a new ImageupdatesetsPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageupdatesetsPutRequest() *ImageupdatesetsPutRequest {
	this := ImageupdatesetsPutRequest{}
	return &this
}

// NewImageupdatesetsPutRequestWithDefaults instantiates a new ImageupdatesetsPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageupdatesetsPutRequestWithDefaults() *ImageupdatesetsPutRequest {
	this := ImageupdatesetsPutRequest{}
	return &this
}

// GetImageUpdateSets returns the ImageUpdateSets field value if set, zero value otherwise.
func (o *ImageupdatesetsPutRequest) GetImageUpdateSets() map[string]ImageupdatesetsPutRequestImageUpdateSetsValue {
	if o == nil || IsNil(o.ImageUpdateSets) {
		var ret map[string]ImageupdatesetsPutRequestImageUpdateSetsValue
		return ret
	}
	return *o.ImageUpdateSets
}

// GetImageUpdateSetsOk returns a tuple with the ImageUpdateSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageupdatesetsPutRequest) GetImageUpdateSetsOk() (*map[string]ImageupdatesetsPutRequestImageUpdateSetsValue, bool) {
	if o == nil || IsNil(o.ImageUpdateSets) {
		return nil, false
	}
	return o.ImageUpdateSets, true
}

// HasImageUpdateSets returns a boolean if a field has been set.
func (o *ImageupdatesetsPutRequest) HasImageUpdateSets() bool {
	if o != nil && !IsNil(o.ImageUpdateSets) {
		return true
	}

	return false
}

// SetImageUpdateSets gets a reference to the given map[string]ImageupdatesetsPutRequestImageUpdateSetsValue and assigns it to the ImageUpdateSets field.
func (o *ImageupdatesetsPutRequest) SetImageUpdateSets(v map[string]ImageupdatesetsPutRequestImageUpdateSetsValue) {
	o.ImageUpdateSets = &v
}

func (o ImageupdatesetsPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImageupdatesetsPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ImageUpdateSets) {
		toSerialize["image_update_sets"] = o.ImageUpdateSets
	}
	return toSerialize, nil
}

type NullableImageupdatesetsPutRequest struct {
	value *ImageupdatesetsPutRequest
	isSet bool
}

func (v NullableImageupdatesetsPutRequest) Get() *ImageupdatesetsPutRequest {
	return v.value
}

func (v *NullableImageupdatesetsPutRequest) Set(val *ImageupdatesetsPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableImageupdatesetsPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableImageupdatesetsPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageupdatesetsPutRequest(val *ImageupdatesetsPutRequest) *NullableImageupdatesetsPutRequest {
	return &NullableImageupdatesetsPutRequest{value: val, isSet: true}
}

func (v NullableImageupdatesetsPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageupdatesetsPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


